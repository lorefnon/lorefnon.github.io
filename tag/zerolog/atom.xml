<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lorefnon.me</id>
    <title>Icicles of Thought â€¢ Posts by &#34;zerolog&#34; tag</title>
    <link href="https://lorefnon.me" />
    <updated>2022-09-01T00:00:00.000Z</updated>
    <category term="Javascript" />
    <category term="KnockoutJS" />
    <category term="Ruby" />
    <category term="EventMachine" />
    <category term="Websockets" />
    <category term="SQLite" />
    <category term="Jade" />
    <category term="Node.js" />
    <category term="Rails" />
    <category term="Emacs" />
    <category term="Gulp" />
    <category term="ActiveAdmin" />
    <category term="ActiveRecord" />
    <category term="Devise" />
    <category term="Integration" />
    <category term="ZSH" />
    <category term="Productivity Hacks" />
    <category term="OCR" />
    <category term="Design Patterns" />
    <category term="InfluxDB" />
    <category term="Grafana" />
    <category term="React" />
    <category term="Functional Programming" />
    <category term="ES6" />
    <category term="Helm" />
    <category term="SPF" />
    <category term="CSS" />
    <category term="Redux" />
    <category term="Redux-loop" />
    <category term="Frontend" />
    <category term="Vagrant" />
    <category term="Clojure" />
    <category term="Hashicorp" />
    <category term="Typescript" />
    <category term="ReasonML" />
    <category term="Next.js" />
    <category term="Koa" />
    <category term="Apollo" />
    <category term="GraphQL" />
    <category term="MongoDB" />
    <category term="Automerge" />
    <category term="CRDT" />
    <category term="SVG" />
    <category term="VSCode" />
    <category term="Comlink" />
    <category term="Web-workers" />
    <category term="io-ts" />
    <category term="MobX" />
    <category term="MobX-State-Tree" />
    <category term="Routing" />
    <category term="HAR" />
    <category term="Jq" />
    <category term="Lit-html" />
    <category term="Stimulus" />
    <category term="Kotlin" />
    <category term="Vert.X" />
    <category term="Vert.X-Web" />
    <category term="Backend-development" />
    <category term="API-development" />
    <category term="Java" />
    <category term="JOOQ" />
    <category term="Ruby on Rails" />
    <category term="Liquibase" />
    <category term="tbls" />
    <category term="jOOQ" />
    <category term="Vue" />
    <category term="TypeScript" />
    <category term="Gradle" />
    <category term="Spring" />
    <category term="Spring-Boot" />
    <category term="gRPC" />
    <category term="Redis" />
    <category term="Database" />
    <category term="Exposed" />
    <category term="vim" />
    <category term="kotlin" />
    <category term="spring" />
    <category term="spring-security" />
    <category term="komapper" />
    <category term="spring-boot" />
    <category term="typescript" />
    <category term="zod" />
    <category term="ts-pattern" />
    <category term="ts-sql-query" />
    <category term="go" />
    <category term="golang" />
    <category term="zerolog" />
    <category term="jet" />
    <category term="sql" />
    <category term="go-migrate" />
    <category term="chi" />
    <category term="connect" />
    <category term="cloudfront" />
    <category term="AWS" />
    <category term="CDK" />
    <entry>
        <id>https://lorefnon.me/2022/09/01/setting-up-log-rotation-for-zerolog/</id>
        <title>Setting up log-rotation for zerolog</title>
        <link rel="alternate" href="https://lorefnon.me/2022/09/01/setting-up-log-rotation-for-zerolog/"/>
        <content type="html">&lt;p&gt;&lt;a href=&#34;https://github.com/rs/zerolog&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Zerolog&lt;/a&gt; is a popular structured logging library for go. This post is a quick recipie for configuring it to use log rotation. &lt;/p&gt;
&lt;p&gt;Log rotation is a mechanism where instead of having a single log file which keeps growing forever, the application switches to a new log file when a time threshold or a size threshold is exceeded. Optionally files which are too old to be of significance can be deleted.&lt;/p&gt;
&lt;p&gt;Now a days, it is a more common practice to log to a stream and have an external service manage it for you. This is indeed nice if you can embrace it. However, Log rotation can be useful for desktop applications or isolated deployments.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/natefinch/lumberjack&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Lumberjack&lt;/a&gt; is a nice utility for go that supports log rotation. It is also easy to hook up with zerolog because a lumberjack logger implements io.Writer which zerolog can target.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;&lt;table class=&#34;hlcode-table&#34;&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/** Configuration options for log rotation */&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;type&lt;/span&gt; LoggerConfig &lt;span class=&#34;hljs-keyword&#34;&gt;struct&lt;/span&gt; {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;/** Max size of the logfile before it&amp;#x27;s rolled */&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	MaxSizeMB &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;`json:&amp;quot;max_size_mb,omitempty&amp;quot;`&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;/** Max number of rolled files to keep */&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	MaxBackupCount &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;`json:&amp;quot;max_backup_count,omitempty&amp;quot;`&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;/** Max age in days to keep a logfile */&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	MaxAgeDays &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;`json:&amp;quot;max_age_days,omitempty&amp;quot;`&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;}
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;initLogger&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(config *config.LoggerConfig)&lt;/span&gt;&lt;/span&gt; *zerolog.Logger {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; writers []io.Writer
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// Optional: Log to console&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	writers = &lt;span class=&#34;hljs-built_in&#34;&gt;append&lt;/span&gt;(writers, zerolog.ConsoleWriter{Out: os.Stderr})
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// Log to rolling file&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	writers = &lt;span class=&#34;hljs-built_in&#34;&gt;append&lt;/span&gt;(writers, initRollingFileLogger(config))
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;// Multiwriter encapsulates multiple writers&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	mw := io.MultiWriter(writers...)
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	logger := zerolog.New(mw).With().
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;		Timestamp().
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;		Logger()
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &amp;amp;logger
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;}
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;initRollingFileLogger&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(config *config.LoggerConfig)&lt;/span&gt;&lt;/span&gt; *lumberjack.Logger {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	loggerPath := filepath.Join(xdg.DataHome, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;example&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;app.log&amp;quot;&lt;/span&gt;)
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	fmt.Printf(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;logging to file: %s\n&amp;quot;&lt;/span&gt;, loggerPath)
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	&lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &amp;amp;lumberjack.Logger{
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;		Filename:   loggerPath,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;		MaxBackups: config.MaxBackupCount,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;		MaxSize:    config.MaxSizeMB,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;		MaxAge:     config.MaxAgeDays,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;	}
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;}
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can now use the logger returned by initLogger to write logs, and they will be written to a file which will be rotated by lumberjack.&lt;/p&gt;
</content>
        <category term="go" />
        <category term="golang" />
        <category term="zerolog" />
        <updated>2022-09-01T00:00:00.000Z</updated>
    </entry>
</feed>
