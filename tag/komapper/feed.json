{
    "version": "https://jsonfeed.org/version/1",
    "title": "Icicles of Thought • All posts by \"komapper\" tag",
    "description": "",
    "home_page_url": "https://lorefnon.me",
    "items": [
        {
            "id": "https://lorefnon.me/2022/03/13/configuring-spring-security-to-use-komapper/",
            "url": "https://lorefnon.me/2022/03/13/configuring-spring-security-to-use-komapper/",
            "title": "Configuring spring security to use komapper",
            "date_published": "2022-03-13T00:00:00.000Z",
            "content_html": "<h1 id=\"About\"><a href=\"#About\" class=\"headerlink\" title=\"About\"></a>About</h1><p><a href=\"https://spring.io/projects/spring-security\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Spring security</a> is a versatile and popular authentication solution for the JVM ecosystem. It is an officially supported component of spring ecosystem and widely deployed in many production solutions.</p>\n<p><a href=\"https://www.komapper.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">KOMapper</a> is a new ORM for Kotlin that embraces KSP.</p>\n<p>Because spring-security is, at its core, agnostic of any specific persistence solution (even spring-data is not mandatory), we can easily configure it to use komapper for authenticating users.</p>\n<h1 id=\"Bootstrapping-the-application\"><a href=\"#Bootstrapping-the-application\" class=\"headerlink\" title=\"Bootstrapping the application\"></a>Bootstrapping the application</h1><p>We can download a scaffolded project from the <a href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://start.spring.io</a> after selecting spring-boot-starter-jdbc, spring-boot-starter-web and spring-boot-starter-security.</p>\n<p>While in this post we use JDBC and spring-web, both komapper and spring-security also work with r2dbc &amp; spring webflux.</p>\n<p>Our final build.gradle.kts file will look something like this:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">plugins {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tid(<span class=\"hljs-string\">&quot;org.springframework.boot&quot;</span>) version <span class=\"hljs-string\">&quot;2.6.4&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tid(<span class=\"hljs-string\">&quot;io.spring.dependency-management&quot;</span>) version <span class=\"hljs-string\">&quot;1.0.11.RELEASE&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tkotlin(<span class=\"hljs-string\">&quot;jvm&quot;</span>) version <span class=\"hljs-string\">&quot;1.6.10&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tkotlin(<span class=\"hljs-string\">&quot;plugin.spring&quot;</span>) version <span class=\"hljs-string\">&quot;1.6.10&quot;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tid(<span class=\"hljs-string\">&quot;com.google.devtools.ksp&quot;</span>) version <span class=\"hljs-string\">&quot;1.6.10-1.0.4&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">kotlin {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tsourceSets.main {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">// This directory contains the source files generated by</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">// Komapper&#x27;s KSP processor</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\t\tkotlin.srcDir(<span class=\"hljs-string\">&quot;build/generated/ksp/main/kotlin&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\t}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-20\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">7 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">group = <span class=\"hljs-string\">&quot;com.test&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">version = <span class=\"hljs-string\">&quot;0.0.1-SNAPSHOT&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">java.sourceCompatibility = JavaVersion.VERSION_16\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">repositories {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\tmaven { url = uri(<span class=\"hljs-string\">&quot;https://repo.spring.io/release&quot;</span>) }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\tmavenCentral()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">dependencies {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\t<span class=\"hljs-keyword\">val</span> komapperVersion = <span class=\"hljs-string\">&quot;0.30.0&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter-actuator&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter-jdbc&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter-jersey&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter-security&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.komapper:komapper-spring-boot-starter-jdbc:<span class=\"hljs-variable\">$komapperVersion</span>&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.komapper:komapper-dialect-h2-jdbc:<span class=\"hljs-variable\">$komapperVersion</span>&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">// We need to explicitly enable komapper&#x27;s KSP processor</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tksp(<span class=\"hljs-string\">&quot;org.komapper:komapper-processor:<span class=\"hljs-variable\">$komapperVersion</span>&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;com.fasterxml.jackson.module:jackson-module-kotlin&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.jetbrains.kotlin:kotlin-reflect&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk8&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;org.liquibase:liquibase-core&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\tdevelopmentOnly(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-devtools&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\timplementation(<span class=\"hljs-string\">&quot;com.h2database:h2&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\ttestImplementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter-test&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-20\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">9 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">tasks.withType&lt;KotlinCompile&gt; {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\tkotlinOptions {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\t\tfreeCompilerArgs = listOf(<span class=\"hljs-string\">&quot;-Xjsr305=strict&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\t\tjvmTarget = <span class=\"hljs-string\">&quot;16&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\t}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">tasks.withType&lt;Test&gt; {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">\tuseJUnitPlatform()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-20\"><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Spring-security autoconfigures the application to use a form based login screen, that looks like this:</p>\n<p><img src=\"/images/2020-03-13/spring-security-login-page.png\" alt=\"Spring security login page\" loading=\"lazy\"></p>\n<p>Before we can access any of the protected routes (all by default) we will need to authenticate.</p>\n<p>To keep this post simple, we will use <a href=\"https://h2database.com/html/main.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">h2 database</a> here - we can configure the location where our db will store data in application.properties.</p>\n<pre><code class=\"hljs plaintext\">spring.datasource.url=jdbc:h2:/tmp/db\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect</code></pre>\n\n<p>Please ensure that any location chosen here is writable by the running user.</p>\n<p>We will need a user table which will store our user details. In production we should use a migration system like dbmate or liquibase. To simplify things here, we can create this table through h2-console\navailable in localhost:8080&#x2F;h2-console</p>\n<pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> users (\n    id <span class=\"hljs-keyword\">identity</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">primary</span> key,\n    name <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span>,\n    email <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span>,\n    password <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">255</span>)\n)</code></pre>\n\n<p>We can map this table to a Kotlin data class through the komapper provided annotations:</p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-keyword\">package</span> com.test.server.entity\n\n<span class=\"hljs-keyword\">import</span> org.komapper.<span class=\"hljs-keyword\">annotation</span>.*\n<span class=\"hljs-keyword\">import</span> java.time.LocalDateTime\n\n<span class=\"hljs-meta\">@KomapperEntity</span>\n<span class=\"hljs-meta\">@KomapperTable(<span class=\"hljs-string\">&quot;users&quot;</span>)</span>\n<span class=\"hljs-keyword\">data</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">User</span> </span>(\n    <span class=\"hljs-meta\">@KomapperId</span>\n    <span class=\"hljs-meta\">@KomapperAutoIncrement</span>\n    <span class=\"hljs-keyword\">var</span> id: <span class=\"hljs-built_in\">Int</span>,\n\n    <span class=\"hljs-keyword\">var</span> name: String,\n\n    <span class=\"hljs-keyword\">var</span> email: String,\n\n    <span class=\"hljs-keyword\">var</span> password: String,\n)</code></pre>\n\n<p>In ideal setup, we will also keep track of whether the email has been validated, how many times auth attempts have been successful, whether password meets expected strength etc. But in this article we will focus on just validating the user provided password against the value stored in database.</p>\n<p>spring-security will, by default, find and delegate to a UserDetailsService implementation in the application context. So we will need to provide an UserDetailsService implementation that uses komapper.</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> com.test.server.service\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-21\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">9 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> com.test.server.entity.User\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> com.test.server.entity.user\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.komapper.core.dsl.Meta\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.komapper.core.dsl.QueryDsl\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.komapper.core.dsl.query.first\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.komapper.jdbc.JdbcDatabase\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.springframework.security.core.GrantedAuthority\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.springframework.security.core.userdetails.UserDetails\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.springframework.security.core.userdetails.UserDetailsService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-21\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Service\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Service</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserDetailsServiceImpl</span></span>(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">// The komapper spring-boot starter is aware of spring managed</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">// datasources configured through application.properties</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">//</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">// so we will not need to define this bean separately</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> db: JdbcDatabase\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">): UserDetailsService {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">loadUserByUsername</span><span class=\"hljs-params\">(username: <span class=\"hljs-type\">String</span>)</span></span>: UserDetails {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">// Fetch a user from database using the username coming from the form</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">val</span> userQuery = QueryDsl.from(Meta.user)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .<span class=\"hljs-keyword\">where</span> { user.name eq username }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .first() <span class=\"hljs-comment\">// Throws if user is not found</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">return</span> UserDetailsImpl(db.runQuery(userQuery))\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> user = Meta.user\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>The Meta.user is an extension method generated by komapper&#39;s ksp processor that returns the meta-model instance for the User entity defined above.\nMode details about komapper&#39;s meta-model approach is available <a href=\"https://v0-24.komapper.org/docs/overview/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">here</a>.</p>\n<p>We will need a wrapper over our User class that complies with the UserDetails interface that spring-security expects:</p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserDetailsImpl</span></span>(<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> user: User): UserDetails &#123;\n\n    <span class=\"hljs-comment\">// We prefix the password stored in database with &#123;bcrypt&#125; to indicate</span>\n    <span class=\"hljs-comment\">// to spring-security that this password is bcrypt encrypted.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// This prefix will be used to identify the password encoder to be used</span>\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getPassword</span><span class=\"hljs-params\">()</span></span> = <span class=\"hljs-string\">&quot;&#123;bcrypt&#125;<span class=\"hljs-subst\">$&#123;user.password&#125;</span>&quot;</span>\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUsername</span><span class=\"hljs-params\">()</span></span> = user.name\n\n    <span class=\"hljs-comment\">// In a more full-featured integration, we can use below</span>\n    <span class=\"hljs-comment\">// overrides to ensure that current user is not locked/expired/disabled etc.</span>\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isAccountNonExpired</span><span class=\"hljs-params\">()</span></span> = <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isAccountNonLocked</span><span class=\"hljs-params\">()</span></span> = <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isCredentialsNonExpired</span><span class=\"hljs-params\">()</span></span> = <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">isEnabled</span><span class=\"hljs-params\">()</span></span> = <span class=\"hljs-literal\">true</span>\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getAuthorities</span><span class=\"hljs-params\">()</span></span> = <span class=\"hljs-literal\">null</span>\n&#125;</code></pre>\n\n<p>Now, if we try to access localhost:8080 we will be prompted for username, password and our &#96;UserDetailsServiceImpl will be automatically used to find the corresponding user before password is validated.</p>\n<p>However, we don&#39;t have a built-in way to manage&#x2F;insert users. To test out things we can insert a user directly in the db. One simple way to generate an encrypted password is to use the <a href=\"https://www.npmjs.com/package/bcrypt-cli\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">bcrypt-cli</a> utility available through npm.</p>\n<pre><code class=\"hljs plaintext\">❯ npx bcrypt-cli &quot;sillypassword&quot; 10\nNeed to install the following packages:\n  bcrypt-cli\nOk to proceed? (y) y\n$2a$10$drlJ6SdzEBso.CLHkO9W0e/lMtySOyArGmixOiSvOESMYBHvEEBoO</code></pre>\n\n<p>We can insert this as user password into the h2 db:</p>\n<pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> users (name, email, password)\n<span class=\"hljs-keyword\">values</span> (<span class=\"hljs-string\">&#x27;test&#x27;</span>, <span class=\"hljs-string\">&#x27;test@example.com&#x27;</span>, <span class=\"hljs-string\">&#x27;$2a$10$drlJ6SdzEBso.CLHkO9W0e/lMtySOyArGmixOiSvOESMYBHvEEBoO&#x27;</span>)</code></pre>\n\n<p>Now, we should be able to login through test&#x2F;sillypassword as credentials.</p>\n",
            "tags": [
                "kotlin",
                "spring",
                "spring-security",
                "komapper"
            ]
        }
    ]
}