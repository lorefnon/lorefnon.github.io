{
    "version": "https://jsonfeed.org/version/1",
    "title": "Icicles of Thought â€¢ All posts by \"kotlin\" tag",
    "description": "",
    "home_page_url": "https://lorefnon.me",
    "items": [
        {
            "id": "https://lorefnon.me/2021/12/15/mapping-between-domain-and-dtos-for-grpc/",
            "url": "https://lorefnon.me/2021/12/15/mapping-between-domain-and-dtos-for-grpc/",
            "title": "Mapping between Domain and DTO classes for gRPC APIs",
            "date_published": "2021-12-05T00:00:00.000Z",
            "content_html": "<p>In a <a href=\"/2021/09/04/bootstrapping-a-grpc-server-with-spring-boot-and-kotlin\">previous post</a> we briefly explored how to build a gRPC api backend with Kotlin. </p>\n<p>In particular, we saw that from the protobuf spec which defines our API, the <a href=\"https://grpc.io/docs/protoc-installation/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">protoc compiler</a> (along with language specific plugins) is able to generate classes for the language(s) in which our server (or client) is implemented. </p>\n<p>To exemplify for our case (a kotlin/JVM backend), given a proto spec like this: </p>\n<pre><code class=\"hljs protobuf\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">message</span> <span class=\"hljs-title\">User</span> </span>&#123;\n  <span class=\"hljs-built_in\">int64</span> id = <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-built_in\">string</span> name = <span class=\"hljs-number\">2</span>;\n  <span class=\"hljs-built_in\">string</span> email = <span class=\"hljs-number\">3</span>;\n&#125;</code></pre>\n\n<p>The code generator generates an immutable User java class, and an associated builder, which we can invoke like this: </p>\n<pre><code class=\"hljs kotlin\">User\n    .newBuilder()\n    .setId(<span class=\"hljs-number\">1</span>)\n    .setName(<span class=\"hljs-string\">&quot;Lorefnon&quot;</span>)\n    .build()</code></pre>\n\n<p>We also get a set of kotlin extensions, which enable us to do the same thing through a more idiomatic kotlin builder: </p>\n<pre><code class=\"hljs kotlin\">user &#123;\n    id = <span class=\"hljs-number\">1</span>\n    name = <span class=\"hljs-string\">&quot;Lorefnon&quot;</span>\n&#125;</code></pre>\n\n<p>Note that in this post we mostly consider the official proto plugins for Java &amp; Kotlin (which are complementary) by Google. Generated code may substantially differ for other alternative implementations like <a href=\"https://github.com/marcoferrer/kroto-plus\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">kroto-plus</a> and <a href=\"https://github.com/streem/pbandk\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">pbandk</a>.</p>\n<p>These classes are primarily intended for deserializing from and serializing to the protobuf format. The conventional term in the JVM ecosystem for such classes, which are primarily intended to transport the data across API boundaries is DTO (Data Transfer Object).</p>\n<p>Now the question arises, what do we use in our business logic ?</p>\n<h2 id=\"Option-1-Using-the-generated-classes-in-core-business-logic-as-well\"><a href=\"#Option-1-Using-the-generated-classes-in-core-business-logic-as-well\" class=\"headerlink\" title=\"Option 1: Using the generated classes in core business logic as well.\"></a>Option 1: Using the generated classes in core business logic as well.</h2><p>There is nothing really preventing us from using the generated class in our business logic as well. </p>\n<p>However, we should be aware of some restrictions: </p>\n<ol>\n<li><p>Generated DTOs are final: </p>\n<p> This means that we can&#39;t inherit from these classes, can&#39;t extend them with internal fields (not part of the API) and can&#39;t add behaviors (methods) to them. </p>\n</li>\n<li><p>They are immutable:</p>\n<p> So whenever we need to get an updated entity, we will need to clone the entity with modifications. </p>\n</li>\n</ol>\n<p>Thus, using the DTOs as Domain classes as well works well primarily when the business logic is entirely implemented as functional services. </p>\n<p>However, if you need mutability or are not so happy with <a href=\"https://martinfowler.com/bliki/AnemicDomainModel.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">anaemic domain models</a>, we have a few options.</p>\n<h2 id=\"Option-2-Pass-around-the-builders\"><a href=\"#Option-2-Pass-around-the-builders\" class=\"headerlink\" title=\"Option 2: Pass around the builders\"></a>Option 2: Pass around the builders</h2><p>One thing that may not be obvious to developers used to conventional java builders, is that the builders generated from protobuf have both getters and setters. </p>\n<p>So when we need mutability, we can just use the builders and call build only once the object needs to be serialized. </p>\n<p>I recommend doing this only internally within a service class, and not have the builders be passed around across services. </p>\n<p>One reason for this is that in a method that receives a builder instance, we don&#39;t have any guarantee from the compiler that all non-optional values have been populated. </p>\n<h2 id=\"Option-3-Compose-over-the-builders\"><a href=\"#Option-3-Compose-over-the-builders\" class=\"headerlink\" title=\"Option 3: Compose over the builders\"></a>Option 3: Compose over the builders</h2><p>A class that composes over the builder can: </p>\n<ol>\n<li>Ensure that any consumer never receives a partially populated builder</li>\n<li>Add behavior to a builder class - I have found this to be particularly useful for things like computed values (like age derived from created_at) which logically belong in the entity class.</li>\n</ol>\n<p>While this would have been cumbersome &amp; boilerplate heavy in java, Kotlin&#39;s support for interface delegation comes in really handy here. </p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserBuilder</span> <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">constructor</span></span>(\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> internalBuilder: User.Builder\n): UserOrBuilder <span class=\"hljs-keyword\">by</span> internalBuilder &#123;\n\n    <span class=\"hljs-comment\">// To be used when constructing new objects</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">constructor</span>(\n        name: String,\n        email: String\n        <span class=\"hljs-comment\">// Other fields whose presence we want to enforce</span>\n    ): <span class=\"hljs-keyword\">this</span>(\n        User\n            .newBuilder()\n            .setName(name)\n            .setEmail(email)\n    )\n\n    <span class=\"hljs-comment\">// To be used when deserializing previously serialized entity </span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">constructor</span>(\n        inputStream: InputStream\n    ): <span class=\"hljs-keyword\">this</span>(\n        User.newBuilder().mergeFrom(inputStream)\n\n        <span class=\"hljs-comment\">// If we had successfully serialized, then we know that all mandatory fields will be present</span>\n        <span class=\"hljs-comment\">//</span>\n        <span class=\"hljs-comment\">// But we can add validations if we are consuming multiple generations of serialized entities</span>\n    )\n\n    <span class=\"hljs-comment\">// If needed, define similar constructors to consume ByteArray/ByteString</span>\n\n    <span class=\"hljs-comment\">// Define setters for fields for which you want to explicitly allow mutation</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">setName</span><span class=\"hljs-params\">(mail: <span class=\"hljs-type\">String</span>)</span></span> &#123;\n        internalBuilder.email = mail\n    &#125;\n&#125;</code></pre>\n\n<p>The UserOrBuilder is a generated interface which contains all the getters. By delegating to this interface through the builder, we can directly invoke all the setters directly on an instance of our <code>UserBuilder</code> class, and they&#39;ll be proxied to the underlying builder.</p>\n<p>By ensuring that our constructor accepts all mandatory parameters, our consumers are guaranteed to never receive partially populated builders. </p>\n<p>Also, we are explicit about which fields we want to allow mutation for. </p>\n<p>The only caveat with this approach is that it is quite a bit of boilerplate because a large set of fields have to enumerated over in the constructor. </p>\n<h2 id=\"Option-4-Use-a-mapping-library-like-MapStruct\"><a href=\"#Option-4-Use-a-mapping-library-like-MapStruct\" class=\"headerlink\" title=\"Option 4: Use a mapping library like MapStruct\"></a>Option 4: Use a mapping library like MapStruct</h2><p>MapStruct is a really nice model mapping library for java that has good support for Kotlin and protobuf style builders. </p>\n<p>One great feature of the library, as compared to many other similar model mapping libraries is that there is no reflection involved during mapping - which makes this library very performant in practice. </p>\n<p>Application developers need to define mapper interfaces, and at compile time MapStruct will generate mapper classes which convert between one type to another. </p>\n<p>With this library, we can define our domain classes as Kotlin (data) classes and have them mapped to/from the API classes at the API service layer. </p>\n<p>Following are the primary dependencies we need: </p>\n<pre><code class=\"hljs kotlin\">implementation(<span class=\"hljs-string\">&quot;org.mapstruct:mapstruct:1.4.2.Final&quot;</span>)\nkapt(<span class=\"hljs-string\">&quot;org.mapstruct:mapstruct-processor:1.4.2.Final&quot;</span>)\nkapt(<span class=\"hljs-string\">&quot;no.entur.mapstruct.spi:protobuf-spi-impl:1.18&quot;</span>)</code></pre>\n\n<p>In a spring project, we&#39;d also want MapStruct to automatically annotate generated classes with <code>@Component</code> so that we can directly inject them in our services: </p>\n<pre><code class=\"hljs kotlin\">kapt &#123;\n    arguments &#123;\n        arg(<span class=\"hljs-string\">&quot;mapstruct.defaultComponentModel&quot;</span>, <span class=\"hljs-string\">&quot;spring&quot;</span>)\n    &#125;\n&#125;</code></pre>\n\n<p>Now, we can define a mapper abstract class or interface, which MapStruct will use to generate our Mappers: </p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-meta\">@Mapper(</span>\n<span class=\"hljs-meta\">    // We can not assign null to setters in protobuf builders</span>\n<span class=\"hljs-meta\">    nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE,</span>\n<span class=\"hljs-meta\">    nullValueCheckStrategy = NullValueCheckStrategy.ALWAYS,</span>\n<span class=\"hljs-meta\"></span>\n<span class=\"hljs-meta\">    // For collection members (repeated fields in protobuf)</span>, we should use \n    <span class=\"hljs-comment\">// the add* methods rather than set* methods</span>\n    collectionMappingStrategy = CollectionMappingStrategy.ADDER_PREFERRED\n)\n<span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DTOMapper</span> </span>&#123;\n    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">mapUserFromPB</span><span class=\"hljs-params\">(source: <span class=\"hljs-type\">User</span>)</span></span>: UserEntity\n    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">mapUserToPB</span><span class=\"hljs-params\">(source: <span class=\"hljs-type\">UserEntity</span>)</span></span>: User\n&#125;</code></pre>\n\n<p>Here <code>User</code> entity is the class generated from protobuf, and <code>UserEntity</code> is our internal domain class.</p>\n<p>For this particular example, this is all we need if our fields have the same name in both classes, and the generated classes and the domain classes use the same types. </p>\n<p>In real world applications, both of these will sometimes not be true. However, to handle these special cases we can configure MapStruct with custom mappings and specify shared type mappers.</p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DTOMapper</span> </span>&#123;\n\n    <span class=\"hljs-comment\">// Custom mapping for field</span>\n    <span class=\"hljs-meta\">@Mappings(</span>\n<span class=\"hljs-meta\">        value = [</span>\n<span class=\"hljs-meta\">            Mapping(source = <span class=\"hljs-meta-string\">&quot;mailAddress&quot;</span>, target = <span class=\"hljs-meta-string\">&quot;email&quot;</span>)</span>\n        ]\n    )\n    <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">mapUserFromPB</span><span class=\"hljs-params\">(source: <span class=\"hljs-type\">User</span>)</span></span>: UserEntity\n\n    <span class=\"hljs-comment\">// Convert between types used in Domain classes and DTOs</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">map</span><span class=\"hljs-params\">(value: <span class=\"hljs-type\">Date</span>)</span></span> =\n        LocalDate.of(value.year, value.month, value.day)\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">map</span><span class=\"hljs-params\">(value: <span class=\"hljs-type\">LocalDate</span>)</span></span>: Date =\n        Date.newBuilder()\n            .setDay(value.dayOfMonth)\n            .setMonth(value.monthValue)\n            .setYear(value.year)\n            .build()\n&#125;</code></pre>\n\n<p>MapStruct <a href=\"https://mapstruct.org/documentation/installation/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">docs</a> cover all possible options in much more detail.</p>\n<p>In our RPC service implementations, we can inject our mappers and use them to transform inputs before delegating to internal classes, and after receiving the results from the internal classes. </p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-meta\">@GrpcService</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserRPCService</span></span>(\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> userRepo: UserRepository,\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> mapper: DTOMapper\n) : UserServiceGrpcKt.UserServiceCoroutineImplBase() &#123;\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">suspend</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUser</span><span class=\"hljs-params\">(request: <span class=\"hljs-type\">UserIdRequest</span>)</span></span>: User &#123;\n        <span class=\"hljs-keyword\">return</span> mapper.mapUserToPB(userRepo.getUser(request.id))\n    &#125;\n\n&#125;</code></pre>\n\n<p>This is the option with minimum boilerplate, but has the trade-off of needing additional heap allocations. However, it is usually an acceptable tradeoff when the types used in the DTOs often differ from the the types used in the domain classes or when we need multiple representations of the same domain class(es) in the API layer (with different set of fields).</p>\n",
            "tags": [
                "Kotlin",
                "Spring",
                "Spring-Boot",
                "gRPC"
            ]
        },
        {
            "id": "https://lorefnon.me/2021/11/21/composable-and-refactorable-annotaiton-args-in-kotlin-with-const-val/",
            "url": "https://lorefnon.me/2021/11/21/composable-and-refactorable-annotaiton-args-in-kotlin-with-const-val/",
            "title": "Composable and Refactorable annotation arguments in Kotlin with const val",
            "date_published": "2021-11-21T00:00:00.000Z",
            "content_html": "<p>There are many libraries in JVM ecosystem that lean heavily on use of annotations. A pain point when dealing with string args passed to annotations is that they are hard to compose/reuse.</p>\n<p>For example, here is a sample mybatis mapper:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.apache.ibatis.annotations.Select\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">PersonMapper</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Select(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-meta-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        select *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        from person where id = #{value}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        &quot;&quot;&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">selectPersonById</span><span class=\"hljs-params\">(id: <span class=\"hljs-type\">Int</span>)</span></span>: Person\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Select(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-meta-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        select *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        from person where email = #{value}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        &quot;&quot;&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">selectPersonById</span><span class=\"hljs-params\">(email: <span class=\"hljs-type\">String</span>)</span></span>: Person\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>As written above, if we want to change the name of person table in future, we&#39;d have to resort to find/replace across the project, which isn&#39;t great.</p>\n<p>In addition, a typo in the table name would be a runtime error as opposed to a compile time.</p>\n<p>Both of the above issues are easily solvable by using <code>const val</code> feature of Kotlin, for defining compile time constants.</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> PERSON_TABLE = <span class=\"hljs-string\">&quot;person&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">PersonMapper</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Select(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-meta-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        select *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        from <span class=\"hljs-subst\">${PERSON_TABLE}</span> where id = #{value}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        &quot;&quot;&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">selectPersonById</span><span class=\"hljs-params\">(id: <span class=\"hljs-type\">Int</span>)</span></span>: Person\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Select(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-meta-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        select *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        from <span class=\"hljs-subst\">${PERSON_TABLE}</span> where email = #{value}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        &quot;&quot;&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">selectPersonById</span><span class=\"hljs-params\">(email: <span class=\"hljs-type\">String</span>)</span></span>: Person\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr></table></code></pre>\n\n<p>String constants can simply be interpolated into the strings passed to annotations, and they can be changed in one place if need be.</p>\n<p>This also enables us to extract fragments and reuse them in multiple annotations, enabling reusability. In addition, if we follow the pattern consistently, IDE features like &quot;Find usages&quot; enable us to quickly find all the mappers which are accessing the user table.</p>\n<p>Another example here uses Retrofit library for creating declarative REST API clients:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> VERSION = <span class=\"hljs-string\">&quot;v1&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> USER_ENDPOINT = <span class=\"hljs-string\">&quot;/api/<span class=\"hljs-subst\">${VERSION}</span>/user&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">UserClient</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@GET(USER_ENDPOINT)</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUserByEmail</span><span class=\"hljs-params\">(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-meta\">@Query(<span class=\"hljs-meta-string\">&quot;email&quot;</span>)</span> email: <span class=\"hljs-type\">String</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span></span>: Call&lt;User&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@GET(USER_ENDPOINT)</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUserById</span><span class=\"hljs-params\">(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-meta\">@Query(<span class=\"hljs-meta-string\">&quot;id&quot;</span>)</span> id: <span class=\"hljs-type\">String</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span></span>: Call&lt;User&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Now when we migrate to new version, we just need to change the version in one place. Also multiple functions targeting the same endpoint can refer to it through a shared constant, making the code DRY-er.</p>\n",
            "tags": [
                "Kotlin"
            ]
        },
        {
            "id": "https://lorefnon.me/2021/09/04/bootstrapping-a-grpc-server-with-spring-boot-and-kotlin/",
            "url": "https://lorefnon.me/2021/09/04/bootstrapping-a-grpc-server-with-spring-boot-and-kotlin/",
            "title": "Bootstrapping a Kotlin gRPC service with Spring Boot",
            "date_published": "2021-09-04T00:00:00.000Z",
            "content_html": "<p>It has always been possible to build gRPC services in kotlin through java interop, but with the recently improved first class support for kotlin in the official gRPC/protobuf libraries it is quite straightforward to build gRPC services in Kotlin which take advantage of kotlin native features like coroutines. In addition, the grpc-spring-boot-starter makes it really convenient for spring boot users to integrate gRPC.</p>\n<span id=\"more\"></span>\n\n<p>Note that while our services are using coroutines, we will not need webflux (although it is perfectly fine to use both of them together)</p>\n<p>This post is primarily a recipe for integrating these components to quickly get started with gRPC on spring boot.</p>\n<h1 id=\"Gradle-configuration\"><a href=\"#Gradle-configuration\" class=\"headerlink\" title=\"Gradle configuration:\"></a>Gradle configuration:</h1><p>First part is to configure our gradle configuration (<code>build.gradle.kts</code>) to use the protobuf and grpc codegen utilities.</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> com.google.protobuf.gradle.*\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">val</span> protobufVersion <span class=\"hljs-keyword\">by</span> extra(<span class=\"hljs-string\">&quot;3.17.3&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">val</span> protobufPluginVersion <span class=\"hljs-keyword\">by</span> extra(<span class=\"hljs-string\">&quot;0.8.14&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">val</span> grpcVersion <span class=\"hljs-keyword\">by</span> extra(<span class=\"hljs-string\">&quot;1.40.1&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">plugins {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    id(<span class=\"hljs-string\">&quot;org.springframework.boot&quot;</span>) version <span class=\"hljs-string\">&quot;2.5.4&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    id(<span class=\"hljs-string\">&quot;io.spring.dependency-management&quot;</span>) version <span class=\"hljs-string\">&quot;1.0.11.RELEASE&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    kotlin(<span class=\"hljs-string\">&quot;jvm&quot;</span>) version <span class=\"hljs-string\">&quot;1.5.21&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    kotlin(<span class=\"hljs-string\">&quot;plugin.spring&quot;</span>) version <span class=\"hljs-string\">&quot;1.5.21&quot;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    id(<span class=\"hljs-string\">&quot;com.google.protobuf&quot;</span>) version <span class=\"hljs-string\">&quot;0.8.17&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">group = <span class=\"hljs-string\">&quot;com.example&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">version = <span class=\"hljs-string\">&quot;0.0.1-SNAPSHOT&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">java.sourceCompatibility = JavaVersion.VERSION_11\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">repositories {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    mavenCentral()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">dependencies {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;org.jetbrains.kotlin:kotlin-reflect&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;org.jetbrains.kotlin:kotlin-stdlib-jdk8&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    testImplementation(<span class=\"hljs-string\">&quot;org.springframework.boot:spring-boot-starter-test&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;net.devh:grpc-server-spring-boot-starter:2.12.0.RELEASE&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;io.grpc:grpc-protobuf:<span class=\"hljs-subst\">${grpcVersion}</span>&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;io.grpc:grpc-stub:1.40.1&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;io.grpc:grpc-kotlin-stub:1.1.0&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    compileOnly(<span class=\"hljs-string\">&quot;jakarta.annotation:jakarta.annotation-api:1.3.5&quot;</span>) <span class=\"hljs-comment\">// Java 9+ compatibility - Do NOT update to 2.0.0</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;com.google.protobuf:protobuf-java:<span class=\"hljs-variable\">$protobufVersion</span>&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;net.devh:grpc-client-spring-boot-starter:2.12.0.RELEASE&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    implementation(<span class=\"hljs-string\">&quot;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">if</span> (JavaVersion.current().isJava9Compatible) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        implementation(<span class=\"hljs-string\">&quot;javax.annotation:javax.annotation-api:+&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">tasks.withType&lt;KotlinCompile&gt; {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    kotlinOptions {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        freeCompilerArgs = listOf(<span class=\"hljs-string\">&quot;-Xjsr305=strict&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        jvmTarget = <span class=\"hljs-string\">&quot;11&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">tasks.withType&lt;Test&gt; {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    useJUnitPlatform()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    testLogging.showStandardStreams = <span class=\"hljs-literal\">true</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">sourceSets {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    test {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        java.srcDirs.add(File(<span class=\"hljs-string\">&quot;src/test/kotlin&quot;</span>))\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">protobuf {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    protoc {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        artifact = <span class=\"hljs-string\">&quot;com.google.protobuf:protoc:<span class=\"hljs-subst\">${protobufVersion}</span>&quot;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    plugins {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        id(<span class=\"hljs-string\">&quot;grpc&quot;</span>) {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            artifact = <span class=\"hljs-string\">&quot;io.grpc:protoc-gen-grpc-java:<span class=\"hljs-subst\">${grpcVersion}</span>&quot;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        id(<span class=\"hljs-string\">&quot;grpckt&quot;</span>) {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            artifact = <span class=\"hljs-string\">&quot;io.grpc:protoc-gen-grpc-kotlin:1.1.0:jdk7@jar&quot;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    generateProtoTasks {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        ofSourceSet(<span class=\"hljs-string\">&quot;main&quot;</span>).forEach {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            task.builtins {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                java {}\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                kotlin {}\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            it.plugins {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                id(<span class=\"hljs-string\">&quot;kotlin&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                id(<span class=\"hljs-string\">&quot;grpc&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                id(<span class=\"hljs-string\">&quot;grpckt&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Note the use of the additional grpckt plugin for protoc along with the grpc plugin for java code-generation.</p>\n<p>Given, the above configuration, we can start defining our API schema in protobuf format.</p>\n<p>Let us start with a minimal example of <code>src/main/proto/demo.proto</code>:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">syntax = <span class=\"hljs-string\">&quot;proto3&quot;</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> com.example.grpcdemo.service;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;google/protobuf/wrappers.proto&quot;</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;google/protobuf/timestamp.proto&quot;</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">service</span> <span class=\"hljs-title\">UserService</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-function\"><span class=\"hljs-keyword\">rpc</span> getUserById (google.protobuf.Int64Value) <span class=\"hljs-keyword\">returns</span> (User)</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">message</span> <span class=\"hljs-title\">User</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-built_in\">int64</span> id = <span class=\"hljs-number\">1</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-built_in\">string</span> name = <span class=\"hljs-number\">2</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr></table></code></pre>\n\n<p>We will look at the code generated for the above in a bit. But let us first look at how to implement this service in our kotlin backend. Our UserService has just one method for now which returns a user given it&#39;s id.</p>\n<p>Our <code>UserService.kt</code> implementing this RPC service looks something like this:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> com.example.grpcdemo.service\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> com.google.protobuf.Int64Value\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> net.devh.boot.grpc.server.service.GrpcService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@GrpcService</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserService</span>: <span class=\"hljs-type\">UserServiceGrpcKt.UserServiceCoroutineImplBase</span></span>() {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">suspend</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUserById</span><span class=\"hljs-params\">(userId: <span class=\"hljs-type\">Int64Value</span>)</span></span>: Demo.User {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">return</span> Demo.User\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .newBuilder()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .setId(<span class=\"hljs-number\">1</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .setName(<span class=\"hljs-string\">&quot;Lorefnon&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>We have also configured the kotlin plugin for protobuf, which adds a couple of convenient extensions to the builders generated by the protobuf java plugin. So if we want, instead of using <code>Demo.User.newBuilder()</code> as in the above snippet, we could use a more kotlin-esque builder DSL:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">return</span> user {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  id = <span class=\"hljs-number\">1</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  name = <span class=\"hljs-string\">&quot;Lorefnon&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Our implementation derives from the <code>UserServiceGrpcKt.UserServiceCoroutineImplBase</code> which was generated for us. The generated functions use some protobuf specific types and we return a <code>User</code> instance constructed through the builder that was also generated for us.</p>\n<p>Overall our code loooks pretty readable, and we didn&#39;t have to write any mapping boilerplate.</p>\n<p>If we peek into the build directory, we can find all the code our code-generator generated for us:</p>\n<pre><code class=\"hljs plaintext\">â–¾ build/\n  â–¸ classes/\n  â–¸ extracted-include-protos/\n  â–¸ extracted-protos/\n  â–¾ generated/\n    â–¾ source/proto/main/\n      â–¾ grpc/com/example/grpcdemo/service/\n          UserServiceGrpc.java\n      â–¾ grpckt/com/example/grpcdemo/service/\n          DemoGrpcKt.kt</code></pre>\n\n<p>The first thing we want to look at is the <code>UserServiceKt</code> where our base class we derived from resides:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> com.example.grpcdemo.service\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-18\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">25 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> com.google.protobuf.Int64Value\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> com.example.grpcdemo.service.UserServiceGrpc.getServiceDescriptor\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.CallOptions\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.CallOptions.DEFAULT\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.Channel\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.Metadata\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.MethodDescriptor\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.ServerServiceDefinition\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.ServerServiceDefinition.builder\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.ServiceDescriptor\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.Status\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.Status.UNIMPLEMENTED\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.StatusException\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.kotlin.AbstractCoroutineServerImpl\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.kotlin.AbstractCoroutineStub\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.kotlin.ClientCalls.serverStreamingRpc\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.kotlin.ClientCalls.unaryRpc\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.kotlin.ServerCalls.serverStreamingServerMethodDefinition\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.kotlin.ServerCalls.unaryServerMethodDefinition\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.grpc.kotlin.StubFor\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> kotlin.String\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> kotlin.coroutines.CoroutineContext\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> kotlin.coroutines.EmptyCoroutineContext\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> kotlin.jvm.JvmOverloads\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> kotlin.jvm.JvmStatic\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-18\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> kotlinx.coroutines.flow.Flow\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-comment\">/**\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"> * Holder for Kotlin coroutine-based client and server APIs for\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"> * com.example.grpcdemo.service.UserService.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"> */</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">object</span> UserServiceGrpcKt {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> SERVICE_NAME: String = UserServiceGrpc.SERVICE_NAME\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-meta\">@JvmStatic</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-keyword\">val</span> serviceDescriptor: ServiceDescriptor\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">get</span>() = UserServiceGrpc.getServiceDescriptor()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-keyword\">val</span> getUserByIdMethod: MethodDescriptor&lt;Int64Value, Demo.User&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@JvmStatic</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">get</span>() = UserServiceGrpc.getGetUserByIdMethod()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-comment\">/**\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">   * A stub for issuing RPCs to a(n) com.example.grpcdemo.service.UserService service as\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">   * suspending coroutines.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">   */</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-meta\">@StubFor(UserServiceGrpc::class)</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserServiceCoroutineStub</span> <span class=\"hljs-meta\">@JvmOverloads</span> <span class=\"hljs-keyword\">constructor</span></span>(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    channel: Channel,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    callOptions: CallOptions = DEFAULT\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  ) : AbstractCoroutineStub&lt;UserServiceCoroutineStub&gt;(channel, callOptions) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">build</span><span class=\"hljs-params\">(channel: <span class=\"hljs-type\">Channel</span>, callOptions: <span class=\"hljs-type\">CallOptions</span>)</span></span>: UserServiceCoroutineStub =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        UserServiceCoroutineStub(channel, callOptions)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">/**\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * Executes this RPC and returns the response message, suspending until the RPC completes\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * with [`Status.OK`][Status].  If the RPC completes with another status, a corresponding\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * [StatusException] is thrown.  If this coroutine is cancelled, the RPC is also cancelled\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * with the corresponding exception as a cause.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * <span class=\"hljs-doctag\">@param</span> request The request message to send to the server.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * <span class=\"hljs-doctag\">@return</span> The single response from the server.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     */</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">suspend</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUserById</span><span class=\"hljs-params\">(request: <span class=\"hljs-type\">Int64Value</span>)</span></span>: Demo.User = unaryRpc(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      channel,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      UserServiceGrpc.getGetUserByIdMethod(),\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      request,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      callOptions,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      Metadata()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-comment\">/**\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">   * Skeletal implementation of the com.example.grpcdemo.service.UserService service based on\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">   * Kotlin coroutines.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">   */</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserServiceCoroutineImplBase</span></span>(\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    coroutineContext: CoroutineContext = EmptyCoroutineContext\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">  ) : AbstractCoroutineServerImpl(coroutineContext) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">/**\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * Returns the response to an RPC for com.example.grpcdemo.service.UserService.getUserById.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * If this method fails with a [StatusException], the RPC will fail with the corresponding\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * [Status].  If this method fails with a [java.util.concurrent.CancellationException], the RPC\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * will fail\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * with status `Status.CANCELLED`.  If this method fails for any other reason, the RPC will\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * fail with `Status.UNKNOWN` with the exception as a cause.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     *\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * <span class=\"hljs-doctag\">@param</span> request The request from the client.\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     */</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">open</span> <span class=\"hljs-keyword\">suspend</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUserById</span><span class=\"hljs-params\">(request: <span class=\"hljs-type\">Int64Value</span>)</span></span>: Demo.User = <span class=\"hljs-keyword\">throw</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        StatusException(UNIMPLEMENTED.withDescription(<span class=\"hljs-string\">&quot;Method com.example.grpcdemo.service.UserService.getUserById is unimplemented&quot;</span>))\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">bindService</span><span class=\"hljs-params\">()</span></span>: ServerServiceDefinition = builder(getServiceDescriptor())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      .addMethod(unaryServerMethodDefinition(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      context = <span class=\"hljs-keyword\">this</span>.context,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      descriptor = UserServiceGrpc.getGetUserByIdMethod(),\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      implementation = ::getUserById\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    ))\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      .addMethod(serverStreamingServerMethodDefinition(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      context = <span class=\"hljs-keyword\">this</span>.context,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      descriptor = UserServiceGrpc.getListUsersMethod(),\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      implementation = ::listUsers\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )).build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>There isn&#39;t much rocket science here. The code looks much similar to what we would have written if we were implementing this boilerplate ourselves.</p>\n<p>In our previous example, we have used a unary call. gRPC also has good support for streaming.</p>\n<p>Before we conclude our post, let&#39;s quickly look at what implementing a stream returning endpoint looks like. We add a <code>listUsers</code> method to our <code>UserService</code> which returns a stream of <code>User</code>.</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">syntax = <span class=\"hljs-string\">&quot;proto3&quot;</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> com.example.grpcdemo.service;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;google/protobuf/wrappers.proto&quot;</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;google/protobuf/timestamp.proto&quot;</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">service</span> <span class=\"hljs-title\">UserService</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-function\"><span class=\"hljs-keyword\">rpc</span> getUserById (google.protobuf.Int64Value) <span class=\"hljs-keyword\">returns</span> (User)</span>;\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-function\"><span class=\"hljs-keyword\">rpc</span> listUsers(ListUsersInput) <span class=\"hljs-keyword\">returns</span> (stream User)</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">message</span> <span class=\"hljs-title\">ListUsersInput</span> </span>{}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">message</span> <span class=\"hljs-title\">User</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-built_in\">int64</span> id = <span class=\"hljs-number\">1</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-built_in\">string</span> name = <span class=\"hljs-number\">2</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr></table></code></pre>\n\n<p>One weird gRPC oddity is that even though our function does not need an argument, it is required to accept an argument, and hence we have defined an empty message type.</p>\n<p>As you may expect, on the kotlin side our return value is a <a href=\"https://kotlinlang.org/docs/flow.html#sequences\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Flow</a> - enabling us to return a collection of values over time.</p>\n<p>In our simple example below, we simply return a list, converted to a flow through a convenient extension function from kotlinx.coroutines.</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@GrpcService</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserService</span>: <span class=\"hljs-type\">UserServiceGrpcKt.UserServiceCoroutineImplBase</span></span>() {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-19\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-19\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">5 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-19\"><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">suspend</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUserById</span><span class=\"hljs-params\">(userId: <span class=\"hljs-type\">Int64Value</span>)</span></span>: Demo.User {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-19\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">return</span> Demo.User.newBuilder().apply {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-19\"><td style=\"border:none\" class=\"hlcode-code-cell\">            id = userId.value\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-19\"><td style=\"border:none\" class=\"hlcode-code-cell\">            name = <span class=\"hljs-string\">&quot;Lorefnon&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-19\"><td style=\"border:none\" class=\"hlcode-code-cell\">        }.build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-19\"><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">listUsers</span><span class=\"hljs-params\">(request: <span class=\"hljs-type\">Demo</span>.<span class=\"hljs-type\">ListUsersInput</span>)</span></span>: Flow&lt;Demo.User&gt; {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">return</span> listOf(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            Demo.User.newBuilder().apply {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                id = <span class=\"hljs-number\">10</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                name = <span class=\"hljs-string\">&quot;Harry&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }.build(),\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            Demo.User.newBuilder().apply {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                id = <span class=\"hljs-number\">20</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                name = <span class=\"hljs-string\">&quot;Hermione&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }.build(),\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            Demo.User.newBuilder().apply {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                id = <span class=\"hljs-number\">20</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                name = <span class=\"hljs-string\">&quot;Ron&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }.build()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        ).asFlow()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Lastly, if you don&#39;t want to deal with coroutines, you don&#39;t need to. It is perfectly fine to still use the base classes generated for Java, in your kotlin code.</p>\n<p>In fact, it is also perfectly fine to use just the kotlin extensions for Protobuf DSL, while not using the <code>*CoroutineImplBase</code> classes for gRPC. The two have no dependency on each other.</p>\n<p>To illustrate this in our last example, we could have written:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@GrpcService</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserService</span>: <span class=\"hljs-type\">UserServiceGrpc.UserServiceImplBase</span></span>() {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getUserById</span><span class=\"hljs-params\">(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      userId: <span class=\"hljs-type\">Int64Value</span>,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver: <span class=\"hljs-type\">StreamObserver</span>&lt;<span class=\"hljs-type\">User</span>&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span></span> {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver.onNext(user {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        id = userId.value\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        name = <span class=\"hljs-string\">&quot;Lorefnon&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      })\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver.onCompleted()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">listUsers</span><span class=\"hljs-params\">(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      request: <span class=\"hljs-type\">Demo</span>.<span class=\"hljs-type\">ListUsersInput</span>,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver: <span class=\"hljs-type\">StreamObserver</span>&lt;<span class=\"hljs-type\">User</span>&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span></span> {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver.onNext(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        user {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">          id = <span class=\"hljs-number\">10</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">          name = <span class=\"hljs-string\">&quot;Harry&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      )\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver.onNext(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        user {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">          id = <span class=\"hljs-number\">20</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">          name = <span class=\"hljs-string\">&quot;Hermione&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      )\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver.onNext(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        user {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">          id = <span class=\"hljs-number\">20</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">          name = <span class=\"hljs-string\">&quot;Ron&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      )\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">      responseObserver.onFinish()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>As we are using <code>UserServiceGrpc.UserServiceImplBase</code> instead of <code>UserServiceGrpcKt.UserServiceCoroutineImplBase</code>, our functions are no longer suspending functions. Also instead of returning values, they accept a <code>responseObserver</code> which can be used to return one or more values.</p>\n<p>This brings us to the end of this short post. We explored how we can bootstrap a simple gRPC service using kotlin and spring boot, and handle unary calls and streaming. As next steps you are encouraged to explore the <a href=\"https://yidongnan.github.io/grpc-spring-boot-starter/en/server/getting-started.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">grpc-spring-boot-starter&#39;s introduction</a> and the <a href=\"https://grpc.io/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">gRPC official site</a> which provide detailed documentation on gRPC integrations.</p>\n",
            "tags": [
                "Kotlin",
                "Spring",
                "Spring-Boot",
                "gRPC"
            ]
        },
        {
            "id": "https://lorefnon.me/2021/09/01/configuring-liquibase-with-gradle-kotlin-dsl/",
            "url": "https://lorefnon.me/2021/09/01/configuring-liquibase-with-gradle-kotlin-dsl/",
            "title": "Configuring Liquibase through Gradle Kotlin DSL",
            "date_published": "2021-09-01T00:00:00.000Z",
            "content_html": "<p>This post is a minimal recipe for configuring Liquibase runner through the Gradle kotlin DSL. This is mostly ported from the offical examples <a href=\"https://github.com/liquibase/liquibase-gradle-plugin#usage\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">here</a> written using the Gradle&#39;s Groovy DSL:</p>\n<p>We can specify our database properties in gradle.properties:</p>\n<pre><code class=\"hljs plaintext\">db_url=jdbc:mysql://172.17.0.2:3306/oms_dev\ndb_user=root\ndb_password=rootroot</code></pre>\n\n<p>And use them in our build.gradle.kts:</p>\n<pre><code class=\"hljs kotlin\">version = <span class=\"hljs-string\">&quot;1.0-SNAPSHOT&quot;</span>\n\nrepositories &#123;\n    mavenCentral()\n    jcenter()\n&#125;\n\nplugins &#123;\n    kotlin(<span class=\"hljs-string\">&quot;jvm&quot;</span>) version <span class=\"hljs-string\">&quot;1.5.21&quot;</span>\n    id(<span class=\"hljs-string\">&quot;org.liquibase.gradle&quot;</span>) version <span class=\"hljs-string\">&quot;2.0.3&quot;</span>\n&#125;\n\n<span class=\"hljs-comment\">// Liquibase plugin configuration</span>\nliquibase &#123;\n    activities.register(<span class=\"hljs-string\">&quot;main&quot;</span>) &#123;\n        <span class=\"hljs-keyword\">val</span> db_url <span class=\"hljs-keyword\">by</span> project.extra.properties\n        <span class=\"hljs-keyword\">val</span> db_user <span class=\"hljs-keyword\">by</span> project.extra.properties\n        <span class=\"hljs-keyword\">val</span> db_password <span class=\"hljs-keyword\">by</span> project.extra.properties\n\n        <span class=\"hljs-keyword\">this</span>.arguments = mapOf(\n            <span class=\"hljs-string\">&quot;logLevel&quot;</span> to <span class=\"hljs-string\">&quot;info&quot;</span>,\n            <span class=\"hljs-string\">&quot;changeLogFile&quot;</span> to <span class=\"hljs-string\">&quot;src/main/resources/db/changelog.yml&quot;</span>,\n            <span class=\"hljs-string\">&quot;url&quot;</span> to db_url,\n            <span class=\"hljs-string\">&quot;username&quot;</span> to db_user,\n            <span class=\"hljs-string\">&quot;password&quot;</span> to db_password,\n            <span class=\"hljs-string\">&quot;driver&quot;</span> to <span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>\n        )\n    &#125;\n    runList = <span class=\"hljs-string\">&quot;main&quot;</span>\n&#125;\n\ndependencies &#123;\n    <span class=\"hljs-comment\">// Include database drivers to be used by liquibase</span>\n    liquibaseRuntime(<span class=\"hljs-string\">&quot;mysql:mysql-connector-java:8.0.26&quot;</span>)\n    liquibaseRuntime(<span class=\"hljs-string\">&quot;org.liquibase:liquibase-core:4.4.3&quot;</span>)\n    liquibaseRuntime(<span class=\"hljs-string\">&quot;org.yaml:snakeyaml:1.29&quot;</span>)\n&#125;</code></pre>\n",
            "tags": [
                "Kotlin",
                "Liquibase",
                "Gradle"
            ]
        },
        {
            "id": "https://lorefnon.me/2021/03/26/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-III/",
            "url": "https://lorefnon.me/2021/03/26/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-III/",
            "title": "Building GraphQL APIs powered by Vert.x, jOOQ & Kotlin - III",
            "date_published": "2021-03-26T00:00:00.000Z",
            "content_html": "<p>This is the third post in our series of articles where we explore a JVM based stack comprising of Kotlin, Vert.X and jOOQ for development of GraphQL APIs.</p>\n<span id=\"more\"></span>\n\n<p>In the <a href=\"/2021/02/05/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-II/\">previous post</a> we integrated a dagger based DI system to simplify wiring up of components. In this post we will add some more GraphQL resolvers which connect to the database using the jooq based DAO layer.</p>\n<p>Before we do that, let&#39;s add an AppConfig component to read configuration from a properties file in a type safe manner so that our application becomes runtime configurable: </p>\n<p>Our configuration file (<code>src/resources/app-config.properties</code>) looks like this:</p>\n<pre><code class=\"hljs properties\"><span class=\"hljs-meta\">db.port</span> = <span class=\"hljs-string\">5432</span>\n<span class=\"hljs-meta\">db.host</span> = <span class=\"hljs-string\">localhost</span>\n<span class=\"hljs-meta\">db.database</span> = <span class=\"hljs-string\">jooq_graphql_sample</span>\n<span class=\"hljs-meta\">db.user</span> = <span class=\"hljs-string\">lorefnon</span></code></pre>\n\n<p>We will write an <code>AppConfigModule</code> which will make the parsed configuration available to other services through dagger.</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-9\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-9\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">3 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-9\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-9\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Provides\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-9\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> java.io.FileInputStream\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-9\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> java.util.*\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Module</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AppConfigModule</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">provideAppConfig</span><span class=\"hljs-params\">()</span></span>: AppConfig {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">val</span> properties = Properties()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">// Enable application consumer to inject a properties file through environment variable</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">val</span> fsPropertiesPath = System.getenv()[<span class=\"hljs-string\">&quot;APP_CONFIG_PATH&quot;</span>]\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">val</span> propertiesStream = fsPropertiesPath\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            ?.let { FileInputStream(fsPropertiesPath) }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-comment\">// Otherwise use the one in class path</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            ?: javaClass.classLoader.getResourceAsStream(<span class=\"hljs-string\">&quot;app-config.properties&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        properties.load(propertiesStream)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">return</span> AppConfig(properties)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-comment\">/**\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"> * A type safe wrapper over the untyped Properties instance\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"> */</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AppConfig</span></span>(<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> properties: Properties) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> appPort <span class=\"hljs-keyword\">get</span>(): <span class=\"hljs-built_in\">Int</span> = properties.getProperty(<span class=\"hljs-string\">&quot;server.http.port&quot;</span>)?.toInt() ?: <span class=\"hljs-number\">8888</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> dbPort <span class=\"hljs-keyword\">get</span>(): <span class=\"hljs-built_in\">Int</span>? = properties.getProperty(<span class=\"hljs-string\">&quot;db.port&quot;</span>)?.toInt()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> dbHost <span class=\"hljs-keyword\">get</span>(): String = properties.getProperty(<span class=\"hljs-string\">&quot;db.host&quot;</span>)!!\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> dbName <span class=\"hljs-keyword\">get</span>(): String = properties.getProperty(<span class=\"hljs-string\">&quot;db.database&quot;</span>)!!\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> dbUser <span class=\"hljs-keyword\">get</span>(): String? = properties.getProperty(<span class=\"hljs-string\">&quot;db.user&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> dbPassword <span class=\"hljs-keyword\">get</span>(): String? = properties.getProperty(<span class=\"hljs-string\">&quot;db.password&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Let us add a <code>DBAccessModule</code> which uses this configuration to wire up database access: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-10\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">6 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Provides\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.pgclient.PgConnectOptions\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.pgclient.PgPool\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.sqlclient.PoolOptions\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.sqlclient.SqlClient\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-10\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Module</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DBAccessModule</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">/**\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     * Provides an database pool client powered by Vert.X asynchronous postgres driver\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">     */</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">providePGClient</span><span class=\"hljs-params\">(connectOptions: <span class=\"hljs-type\">PgConnectOptions</span>, poolOptions: <span class=\"hljs-type\">PoolOptions</span>)</span></span>: SqlClient =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        PgPool.pool(connectOptions, poolOptions)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">providePGPoolOptions</span><span class=\"hljs-params\">(config: <span class=\"hljs-type\">AppConfig</span>)</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        PoolOptions()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">providePGConnectOptions</span><span class=\"hljs-params\">(config: <span class=\"hljs-type\">AppConfig</span>)</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        PgConnectOptions()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .apply {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                port = config.dbPort\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                host = config.dbHost\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                database = config.dbName\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                config.dbUser?.let { user = it }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                config.dbPassword?.let { password = it }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Thanks to jklingsporn&#39;s <code>ClassicReactiveVertxGenerator</code>, our DAO classes are compatible with the Vert.X postgres driver pool we configured above.</p>\n<p>So we can simply instantiate these DAO classes providing passing this postgres client to them. Let us write a module that instantiates our generated DAO classes: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-11\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">8 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Provides\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.core.Vertx\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.sqlclient.SqlClient\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.generated.tables.daos.UsersDao\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.jooq.Configuration\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.jooq.SQLDialect\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> org.jooq.impl.DefaultConfiguration\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-11\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Module</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DAOModule</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">provideJooQConfiguration</span><span class=\"hljs-params\">()</span></span>: Configuration =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        DefaultConfiguration().apply {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            setSQLDialect(SQLDialect.POSTGRES)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">provideUsersDao</span><span class=\"hljs-params\">(jooqConfig: <span class=\"hljs-type\">Configuration</span>, sqlClient: <span class=\"hljs-type\">SqlClient</span>)</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        UsersDao(jooqConfig, sqlClient)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-comment\">// Expose other DAO classes here</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>We will also need to make our <code>MainVerticleComponent</code> aware of these modules: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-12\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">6 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Component\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.Router\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.sqlclient.SqlClient\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.generated.tables.daos.UsersDao\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.module.*\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-12\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Component(modules = [\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    AppConfigModule::class,\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    DBAccessModule::class,\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    DAOModule::class,\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    GraphQLModule::class,\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    RouterModule::class\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">])</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">MainVerticleComponent</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getRouter</span><span class=\"hljs-params\">()</span></span>: Router\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>And then inject these instances in <code>MainVerticle</code>: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainVerticle</span> : <span class=\"hljs-type\">AbstractVerticle</span></span>() {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> components <span class=\"hljs-keyword\">by</span> lazy {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        DaggerMainVerticleComponent\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .builder()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .appConfigModule(AppConfigModule())\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .dBAccessModule(DBAccessModule())\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .dAOModule(DAOModule())\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .graphQLModule(GraphQLModule())\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .routerModule(RouterModule(vertx))\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">start</span><span class=\"hljs-params\">(startPromise: <span class=\"hljs-type\">Promise</span>&lt;<span class=\"hljs-type\">Void</span>&gt;)</span></span> {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">val</span> appPort = component.getAppConfig().appPort\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        vertx\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .createHttpServer()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .requestHandler(component.getRouter())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .listen(appPort) { http -&gt;\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-13\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-13\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">5 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-13\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">if</span> (http.succeeded()) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-13\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    startPromise.complete()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-13\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    println(<span class=\"hljs-string\">&quot;HTTP server started on port <span class=\"hljs-variable\">$appPort</span>&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-13\"><td style=\"border:none\" class=\"hlcode-code-cell\">                } <span class=\"hljs-keyword\">else</span> {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-13\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    startPromise.fail(http.cause());\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-13\"><td style=\"border:none\" class=\"hlcode-code-cell\">                }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Our API still works, but obviously our <code>DBAccessModule</code> &amp; <code>DAOModule</code> are still unused. Let&#39;s address that. </p>\n<p>Here is the simplest <code>UserRegistrationService</code> implementation, that receives incoming credentials, and saves it in DB after hashing the password: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.service\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-14\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-14\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">4 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-14\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> at.favre.lib.crypto.bcrypt.BCrypt\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-14\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.core.Future\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-14\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.generated.tables.daos.UserDao\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-14\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.generated.tables.pojos.User\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-14\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Inject\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserRegistrationService</span> <span class=\"hljs-meta\">@Inject</span> <span class=\"hljs-keyword\">constructor</span></span>(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> userDao: UserDao,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> passwordEncryptionService: PasswordEncryptionService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">registerUser</span><span class=\"hljs-params\">(name: <span class=\"hljs-type\">String</span>, email: <span class=\"hljs-type\">String</span>, password: <span class=\"hljs-type\">String</span>)</span></span>: Future&lt;RegistrationResult&gt; {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">return</span> userDao.insert(User().apply {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-keyword\">this</span>.name = name\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-keyword\">this</span>.password = passwordEncryptionService.encrypt(password)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-keyword\">this</span>.email = email\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }).map { insertCount -&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            RegistrationResult(<span class=\"hljs-literal\">true</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }.otherwise { throwable -&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-keyword\">val</span> comments =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">if</span> (throwable.message?.contains(<span class=\"hljs-string\">&quot;violates unique constraint&quot;</span>) == <span class=\"hljs-literal\">true</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    listOf(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-string\">&quot;A user is already registered for this email/username&quot;</span>,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-string\">&quot;Do you want to sign in instead ?&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    )\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-literal\">null</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            RegistrationResult(<span class=\"hljs-literal\">false</span>, comments)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">data</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RegistrationResult</span></span>(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> success: <span class=\"hljs-built_in\">Boolean</span>,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> comments: List&lt;String&gt;? = <span class=\"hljs-literal\">null</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">)\n</td></tr></table></code></pre>\n\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.service\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> at.favre.lib.crypto.bcrypt.BCrypt\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Inject\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">val</span> LOGARITHMIC_COST_FACTOR = <span class=\"hljs-number\">12</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PasswordEncryptionService</span> <span class=\"hljs-meta\">@Inject</span> <span class=\"hljs-keyword\">constructor</span></span>() {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">encrypt</span><span class=\"hljs-params\">(password: <span class=\"hljs-type\">String</span>)</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        BCrypt.withDefaults().hashToString(LOGARITHMIC_COST_FACTOR, password.toCharArray())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">verify</span><span class=\"hljs-params\">(password: <span class=\"hljs-type\">String</span>, encryptedPassword: <span class=\"hljs-type\">String</span>)</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        BCrypt.verifyer().verify(password.toCharArray(), encryptedPassword).verified\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>A production ready solution will also do email verification, time-limit number of signups from an IP, etc. but for our tutorial we will not go into the intricacies of user registration best practices. </p>\n<p>Our service, at this point, is a plain kotlin service that can be tested in isolation. It is not, however, GraphQL aware. </p>\n<p>We need to next expose this service through a resolver: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-15\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">9 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaGenerator\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaParser\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Provides\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.TypeRuntimeWiring\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.service.UserRegistrationService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-15\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Module</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GraphQLModule</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">provideGraphQL</span><span class=\"hljs-params\">(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        userRegistrationService: <span class=\"hljs-type\">UserRegistrationService</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span></span> = GraphQLBuilder(\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        userRegistrationService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    ).build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">inner</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GraphQLBuilder</span></span>(\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> userRegistrationService: UserRegistrationService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    ) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">build</span><span class=\"hljs-params\">()</span></span>: GraphQL = GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .newGraphQL(buildExecutableSchema())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> rawSchema = <span class=\"hljs-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            type Query {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                hello: String\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    \n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            type Mutation {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                registerUser(username: String!, email: String!, password: String!): RegistrationResult!\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    \n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            type RegistrationResult {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                success: Boolean!\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        &quot;&quot;&quot;</span>.trimIndent()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildRuntimeWiring</span><span class=\"hljs-params\">()</span></span> = newRuntimeWiring()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .type(<span class=\"hljs-string\">&quot;Query&quot;</span>) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                it.dataFetcher(<span class=\"hljs-string\">&quot;hello&quot;</span>) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-string\">&quot;world&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .type(<span class=\"hljs-string\">&quot;Mutation&quot;</span>) {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                it.associateRegisterUserMutation()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">// Local extension method for graphql-java&#x27;s TypeRuntimeWiring Builder</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">// to associate the registerUser resolver</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> TypeRuntimeWiring.Builder.<span class=\"hljs-title\">associateRegisterUserMutation</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            dataFetcher(<span class=\"hljs-string\">&quot;registerUser&quot;</span>, VertxDataFetcher.create { env -&gt;\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> username = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;username&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> email = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;email&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> password = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;password&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                userRegistrationService.registerUser(username, email, password)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            })\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildExecutableSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            SchemaGenerator().makeExecutableSchema(parseSchema(), buildRuntimeWiring())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">parseSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            SchemaParser().parse(rawSchema)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>We have updated our GraphQL schema SDL to include a <code>registerUser</code> mutation field and we have updated our runtime wiring to resolve this field through the <code>registerUser</code> method of <code>UserRegistrationService</code>. </p>\n<p>In an extension method (<code>associateRegisterUserMutation</code>), we are bridging the non-typesafe arguments API of GraphQL java to the type safe <code>UserRegistrationService.registerUser</code> arguments.</p>\n<p>One interesting thing to note here is the use of <code>VertxDataFetcher.create</code>. In case of our static resolver before (<code>Query.hello</code> field), we had passed a lambda to <code>TypeRuntimeWiring.Builder.dataFetcher</code>. This works perfectly fine for simple values or java objects. If our <code>userRegistrationService.registerUser</code> returned a <code>RegistrationResult</code> instance directly, we would not have to use <code>VertxDataFetcher.create</code>. \nBut what it actually returns is a Vert.X <code>Future</code> instance that resolves to a <code>RegistrationResult</code>. </p>\n<p>graphql-java library is not aware of this <code>Future</code> class. It does understand <code>java.util.concurrent.CompletionStage</code> (Read more about <a href=\"https://www.graphql-java.com/documentation/v15/execution/#asynchronous-execution\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">asynchronous execution</a> in graphql-java), but the <code>Future</code> being returned here is not <code>java.util.concurrent.CompletableFuture</code> (which implements <code>java.util.concurrent.Future</code> and <code>java.util.concurrent.CompletionStage</code>) but rather <code>io.vertx.core.Future</code>, which is used by the vert.x libraries. </p>\n<p>So we need to convert the vert.x future to a <code>CompletionStage</code>. We already have a <code>.toCompletionStage()</code> method in vert.x Futures for this, but the <code>VertxDataFetcher</code> fetcher is an added convenience on top of that which is <a href=\"https://vertx.io/docs/apidocs/io/vertx/core/Context.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Vert.x context</a> aware.</p>\n<p>We can now restart our service and try out our mutation through Altair, or other GraphQL Client:</p>\n<pre><code class=\"hljs graphql\">mutation &#123;\n  registerUser(\n    username: &quot;lorefnon&quot;, \n    email: &quot;lorefnon@gmail.com&quot;,\n    password: &quot;password&quot;\n  ) &#123;\n    success\n    comments\n  &#125;\n&#125;</code></pre>\n\n<p>If it&#39;s all wired up correctly, we should get a successful response:</p>\n<pre><code class=\"hljs json\">&#123;\n  <span class=\"hljs-attr\">&quot;data&quot;</span>: &#123;\n    <span class=\"hljs-attr\">&quot;registerUser&quot;</span>: &#123;\n      <span class=\"hljs-attr\">&quot;success&quot;</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">&quot;comments&quot;</span>: <span class=\"hljs-literal\">null</span>\n    &#125;\n  &#125;\n&#125;</code></pre>\n\n<p>If we try to create another user with the same login, we should receive a clear error:</p>\n<pre><code class=\"hljs json\">&#123;\n  <span class=\"hljs-attr\">&quot;data&quot;</span>: &#123;\n    <span class=\"hljs-attr\">&quot;registerUser&quot;</span>: &#123;\n      <span class=\"hljs-attr\">&quot;success&quot;</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">&quot;comments&quot;</span>: [\n        <span class=\"hljs-string\">&quot;A user is already registered for this email/username&quot;</span>,\n        <span class=\"hljs-string\">&quot;Do you want to sign in instead ?&quot;</span>\n      ]\n    &#125;\n  &#125;\n&#125;</code></pre>\n\n<p>We also need a mechanism to allow users to login. So let us add another mutation where we can pass in the credentials are retrieve a JWT token:</p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.service\n\n<span class=\"hljs-keyword\">import</span> io.vertx.core.Future\n<span class=\"hljs-keyword\">import</span> me.lorefnon.sample.generated.tables.daos.UserDao\n<span class=\"hljs-keyword\">import</span> javax.inject.Inject\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserLoginService</span> <span class=\"hljs-meta\">@Inject</span> <span class=\"hljs-keyword\">constructor</span></span>(\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> userDao: UserDao,\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> passwordEncryptionService: PasswordEncryptionService,\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> authTokenService: AuthTokenService\n) &#123;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">login</span><span class=\"hljs-params\">(name: <span class=\"hljs-type\">String</span>, password: <span class=\"hljs-type\">String</span>)</span></span>: Future&lt;String?&gt; =\n        userDao.findOneByName(name).map &#123;\n            it?.let &#123; user -&gt;\n                <span class=\"hljs-keyword\">if</span> (passwordEncryptionService.verify(password, user.password)) user\n                <span class=\"hljs-keyword\">else</span> <span class=\"hljs-literal\">null</span>\n            &#125;?.let &#123; user -&gt;\n                authTokenService.getToken(user.name)\n            &#125;\n        &#125;\n&#125;</code></pre>\n\n<p>Let&#39;s add that to our GraphQL module similar to the registration field: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-16\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">11 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaGenerator\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaParser\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Provides\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.TypeRuntimeWiring\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.handler.graphql.schema.VertxDataFetcher\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.service.UserLoginService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.service.UserRegistrationService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-16\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Module</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GraphQLModule</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">provideGraphQL</span><span class=\"hljs-params\">(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        userRegistrationService: <span class=\"hljs-type\">UserRegistrationService</span>,\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        userLoginService: <span class=\"hljs-type\">UserLoginService</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    )</span></span> = GraphQLBuilder(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        userRegistrationService,\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        userLoginService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    ).build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">inner</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GraphQLBuilder</span></span>(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> userRegistrationService: UserRegistrationService,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> userLoginService: UserLoginService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    ) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">build</span><span class=\"hljs-params\">()</span></span>: GraphQL = GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .newGraphQL(buildExecutableSchema())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> rawSchema = <span class=\"hljs-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            type Query {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                hello: String\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    \n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            type Mutation {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                registerUser(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    username: String!, \n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    email: String!, \n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    password: String!\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                ): RegistrationResult!\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                login(username: String!, password: String!): String\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    \n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-17\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">4 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">            type RegistrationResult {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">                success: Boolean!\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">                comments: [String]\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        &quot;&quot;&quot;</span>.trimIndent()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildRuntimeWiring</span><span class=\"hljs-params\">()</span></span> = newRuntimeWiring()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .type(<span class=\"hljs-string\">&quot;Query&quot;</span>) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                it.dataFetcher(<span class=\"hljs-string\">&quot;hello&quot;</span>) { <span class=\"hljs-string\">&quot;world&quot;</span> }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .type(<span class=\"hljs-string\">&quot;Mutation&quot;</span>) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                it.associateRegisterUserMutation()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                it.associateLoginMutation()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-17\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">6 lines collapsed</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> TypeRuntimeWiring.Builder.<span class=\"hljs-title\">associateRegisterUserMutation</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">            dataFetcher(<span class=\"hljs-string\">&quot;registerUser&quot;</span>, VertxDataFetcher.create { env -&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> username = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;username&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> email = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;email&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> password = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;password&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">                userRegistrationService.registerUser(username, email, password)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-17\"><td style=\"border:none\" class=\"hlcode-code-cell\">            })\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> TypeRuntimeWiring.Builder.<span class=\"hljs-title\">associateLoginMutation</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            dataFetcher(<span class=\"hljs-string\">&quot;login&quot;</span>, VertxDataFetcher.create { env -&gt;\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> username = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;username&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">val</span> password = env.getArgument&lt;String&gt;(<span class=\"hljs-string\">&quot;password&quot;</span>)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                userLoginService.login(username, password)\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            })\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildExecutableSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            SchemaGenerator().makeExecutableSchema(parseSchema(), buildRuntimeWiring())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">parseSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            SchemaParser().parse(rawSchema)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>An invocation of this API looks like this:</p>\n<pre><code class=\"hljs graphql\">mutation &#123;\n  login(username: &quot;lorefnon&quot;, password: &quot;password&quot;)\n&#125;</code></pre>\n\n<pre><code class=\"hljs json\">&#123;\n  <span class=\"hljs-attr\">&quot;data&quot;</span>: &#123;\n    <span class=\"hljs-attr\">&quot;login&quot;</span>: <span class=\"hljs-string\">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJtZS5sb3JlZm5vbi5zYW1wbGUiLCJ1c2VyIjoibG9yZWZub24ifQ.vJNjffx0dMAqoORfXlf-dUF6cAhwMfTPLeZzxB632_k&quot;</span>\n  &#125;\n&#125;</code></pre>\n\n<p>In the next post we will utilize this API to secure other fields in our GraphQL API.</p>\n",
            "tags": [
                "GraphQL",
                "Kotlin",
                "Vert.X",
                "Vert.X-Web",
                "Backend-development",
                "API-development"
            ]
        },
        {
            "id": "https://lorefnon.me/2021/02/05/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-II/",
            "url": "https://lorefnon.me/2021/02/05/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-II/",
            "title": "Building GraphQL APIs powered by Vert.x, Dagger, jOOQ & Kotlin - II",
            "date_published": "2021-02-06T00:00:00.000Z",
            "content_html": "<p>This continues from our <a href=\"/2021/02/01/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-I\">previous post</a> in a series of articles where we explore a JVM based stack comprising of Kotlin, Vert.X and jOOQ for development of GraphQL APIs.</p>\n<p>When we last left off, we had a simple GraphQL API with a single field in our <code>Query</code> type which was statically resolved. </p>\n<p>Before we go further, let&#39;s integrate a dependency injection system that simplies the task of wiring up our application components. In this post we&#39;ll use <a href=\"https://dagger.dev/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Dagger</a>. In contrast to many other popular DI/IoC solutions, dagger operates through compile time code generation, reducing the reflection overhead causing startup delay.</p>\n<p>Feel free to skip this post, and checkout the <a href=\"/2021/03/26/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-III/\">next one in series</a> if you don&#39;t want to use Dagger.</p>\n<p>We will need to add dagger as a dependency as well as configure Kotlin&#39;s annotation processor <a href=\"https://kotlinlang.org/docs/kapt.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Kapt</a> to use dagger. </p>\n<p>In pom.xml: project &gt; dependencies</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.google.dagger<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>dagger<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.16<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr></table></code></pre>\n\n<p>Kapt configuration goes into the Kotlin maven-plugin&#39;s configuration section: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.jetbrains.kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>kotlin-maven-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${kotlin.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>kapt<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>kapt<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>src/main/kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>src/main/java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">annotationProcessorPaths</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">annotationProcessorPath</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.google.dagger<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>dagger-compiler<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.16<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">annotationProcessorPath</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">annotationProcessorPaths</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-5\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">23 lines collapsed (Other Execution Tags)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/main/kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/main/java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>test-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>test-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/test/kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/test/java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-5\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr></table></code></pre>\n\n<p>Let us move our GraphQL wiring to a Dagger module: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-6\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">11 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaGenerator\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaParser\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Provides\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.TypeRuntimeWiring\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.handler.graphql.schema.VertxDataFetcher\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.service.UserLoginService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.service.UserRegistrationService\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-6\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Module</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GraphQLModule</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">provideGraphQL</span><span class=\"hljs-params\">()</span></span> = GraphQLBuilder().build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">inner</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GraphQLBuilder</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">build</span><span class=\"hljs-params\">()</span></span>: GraphQL = GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .newGraphQL(buildExecutableSchema())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> rawSchema = <span class=\"hljs-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            type Query {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                hello: String\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        &quot;&quot;&quot;</span>.trimIndent()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildRuntimeWiring</span><span class=\"hljs-params\">()</span></span> = newRuntimeWiring()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .type(<span class=\"hljs-string\">&quot;Query&quot;</span>) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                it.dataFetcher(<span class=\"hljs-string\">&quot;hello&quot;</span>) { <span class=\"hljs-string\">&quot;world&quot;</span> }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildExecutableSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            SchemaGenerator().makeExecutableSchema(parseSchema(), buildRuntimeWiring())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">parseSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            SchemaParser().parse(rawSchema)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>When the dependencies are coming from our own project we will typically use <code>@Inject</code> annotation in the classes to be injected. </p>\n<p>However, when we are instantiating or configuring third party classes that we don&#39;t have control over we&#39;ll typically use <code>@Provides</code> annotation (as in the example above). These methods are conventionally named as <code>provide*</code> and are organized as what Dagger calls Modules (entirely unrelated to Java 9 modules developed as part of project Jigsaw). The <code>@Module</code> annotation marks our class as a Dagger Module.</p>\n<p>The utility of the inner class may not be obvious at this point, but it just makes it easier to better organize the runtime wiring where we need access to our other services. This will likely be more evident once we start integrating more features in our API.</p>\n<p>Our router integration can be moved to a Dagger module too: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample.module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-7\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">7 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Module\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Provides\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.core.Vertx\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.Router\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.handler.BodyHandler\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.handler.graphql.GraphQLHandler\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-7\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Module</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RouterModule</span></span>(<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">val</span> vertx: Vertx) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Provides</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">provideRouter</span><span class=\"hljs-params\">(graphQL: <span class=\"hljs-type\">GraphQL</span>)</span></span>: Router =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        Router.router(vertx).also { r -&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            r.route().handler(BodyHandler.create())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            r.post(<span class=\"hljs-string\">&quot;/graphql&quot;</span>).handler(\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                GraphQLHandler.create(graphQL)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            )\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>Note that both our Router and GraphQL instances are marked as <code>@Singleton</code> so dagger will only ever create a single instance of them and inject the same instance wherever needed.</p>\n<p>The last dagger specific boilerplate class that we need to write is a dagger <code>Component</code> that acts as a facade for the code that isn&#39;t wired up using dagger. This can be used to bootstrap our injector and  also makes dagger instantiated instances available to non dagger managed code.</p>\n<p>A dagger <code>Component</code> is typically written as an interface that will be implemented by Dagger at compile time: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-8\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">6 lines collapsed (Imports)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> dagger.Component\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.Router\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.sqlclient.SqlClient\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> javax.inject.Singleton\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-8\"><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.module.*\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Component(modules = [\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    GraphQLModule::class,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    RouterModule::class,\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">])</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">@Singleton</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">MainVerticleComponent</span> </span>{\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">getRouter</span><span class=\"hljs-params\">()</span></span>: Router\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>While we may have many services instantiated through dagger, we will not need to add accessors for all of them to the Component above. The only one we will need in our tutorial, is a the router accessor, which makes the router instance (which is created through dagger) available to our MainVerticle class (which is not created dagger).</p>\n<p>If we run <code>mvn compile</code>, dagger will generate a <code>DaggerMainVerticleComponent</code> that implements our <code>MainVerticleComponent</code> class.</p>\n<p>We can now use the companion Builder of this class to wire up the dependencies of our verticle: </p>\n<p>Let us update our <code>MainVerticle</code> to make use of the Dagger generated <code>MainVerticleComponent</code> implementation:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">package</span> me.lorefnon.sample\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.core.AbstractVerticle\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.core.Promise\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> me.lorefnon.sample.module.*\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainVerticle</span> : <span class=\"hljs-type\">AbstractVerticle</span></span>() {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">val</span> component <span class=\"hljs-keyword\">by</span> lazy {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        DaggerMainVerticleComponent\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .builder()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .graphQLModule(GraphQLModule())\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .routerModule(RouterModule(vertx))\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .build()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">start</span><span class=\"hljs-params\">(startPromise: <span class=\"hljs-type\">Promise</span>&lt;<span class=\"hljs-type\">Void</span>&gt;)</span></span> {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        vertx\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .createHttpServer()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .requestHandler(component.getRouter())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            .listen(<span class=\"hljs-number\">8888</span>) { http -&gt;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-keyword\">if</span> (http.succeeded()) {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    startPromise.complete()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    println(<span class=\"hljs-string\">&quot;HTTP server started on port 8888&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                } <span class=\"hljs-keyword\">else</span> {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    startPromise.fail(http.cause());\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">}\n</td></tr></table></code></pre>\n\n<p>(<code>component</code> needs to be lazy because when class is instantiated vertx instance is not available)</p>\n<p>If we run <code>mvn compile exec:java</code> now, we will have the same API as before, but now with DI integrated.</p>\n<p>In the <a href=\"/2021/03/26/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-III/\">next part</a> of this series, we will look at integrating the Jooq geenrated DAOs into our GraphQL API.</p>\n",
            "tags": [
                "GraphQL",
                "Kotlin",
                "Vert.X",
                "Vert.X-Web",
                "Backend-development",
                "API-development"
            ]
        },
        {
            "id": "https://lorefnon.me/2021/02/01/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-I/",
            "url": "https://lorefnon.me/2021/02/01/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-I/",
            "title": "Building GraphQL APIs powered by Vert.x, Dagger, jOOQ & Kotlin - I",
            "date_published": "2021-02-01T00:00:00.000Z",
            "content_html": "<p>This is the first in a series of articles where we explore a JVM based stack comprising of Kotlin, Vert.X, Dagger and jOOQ for development of GraphQL APIs.</p>\n<h1 id=\"About-GraphQL\"><a href=\"#About-GraphQL\" class=\"headerlink\" title=\"About GraphQL\"></a>About GraphQL</h1><p>GraphQL is an application level query language which can, as of this writing, be implemented and consumed in most popular languages.</p>\n<p>Quoting from the <a href=\"https://graphql.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">official site</a>: </p>\n<blockquote>\n<p>GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. \nGraphQL provides a complete and understandable description of the data in your API, \ngives clients the power to ask for exactly what they need and nothing more, \nmakes it easier to evolve APIs over time, and enables powerful developer tools.</p>\n</blockquote>\n<p>If you are unfamiliar with GraphQL from a consumer perspective, \nit might be better to go through the <a href=\"https://graphql.org/learn/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">official introduction</a> first. This post assumes user-level familiarity.</p>\n<h1 id=\"GraphQL-in-Java\"><a href=\"#GraphQL-in-Java\" class=\"headerlink\" title=\"GraphQL in Java\"></a>GraphQL in Java</h1><p>When it comes to JVM, <a href=\"http://graphql-java.com/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">graphql-java</a> is the most mature GraphQL implementation, \nand is what we use in this article. However, GraphQL java cares only about the execution of a GraphQL request given a \nschema and associated handlers. In a realistic application we&#39;d want to expose a GraphQL over an HTTP endpoint. \nSo, it is common to pair graphql-java with a web framework or HTTP handler. \nOur choice for the latter in the context of this post is Vert.x-Web.</p>\n<h1 id=\"About-Vert-X-amp-Vert-X-Web\"><a href=\"#About-Vert-X-amp-Vert-X-Web\" class=\"headerlink\" title=\"About Vert.X &amp; Vert.X-Web\"></a>About Vert.X &amp; Vert.X-Web</h1><p>Vert.X is a toolkit for building event-driven reactive services and Vert.X-web leverages the lower level toolkit for building web applications.</p>\n<p>From the <a href=\"https://vertx.io/docs/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">official docs</a>: </p>\n<blockquote>\n<p><strong>Vert.x Core</strong></p>\n</blockquote>\n<blockquote>\n<p>The Vert.x core APIs contain the backbone for writing Vert.x applications and low-level support for HTTP, TCP, UDP, file system, \nasynchronous streams and many other building blocks. It is also used by many other components of Vert.x.</p>\n</blockquote>\n<blockquote>\n<p><strong>Vert.x Web</strong></p>\n</blockquote>\n<blockquote>\n<p>A tool-kit for writing sophisticated modern web applications and HTTP microservices.</p>\n</blockquote>\n<p>As we will see below, Vert.X and graphql-java work very well together because the graphql-java natively supports asynchronous \nexecution strategy which fits perfectly with the asynchronous event-driven style that Vert.X facilitates. </p>\n<h1 id=\"jOOQ-for-persistence\"><a href=\"#jOOQ-for-persistence\" class=\"headerlink\" title=\"jOOQ for persistence\"></a>jOOQ for persistence</h1><p>A real-world application would also need to persist its data, and for that our solution of choice here is <a href=\"https://www.jooq.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">jOOQ</a>, \na type-safe SQL builder for Java. </p>\n<p>jOOQ is commonly used in a database-first manner where the database is managed through DB centric tools and the DAO (Data Access Object) layer \nto interface with the database from application code is generated by introspecting the database.</p>\n<p>The generators which come with jOOQ don&#39;t support Vert.X out of the box, but the Vert.X core is very flexible and the \n<a href=\"https://github.com/jklingsporn/vertx-jooq\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">vertx-jooq project</a> provides code-generation support that bridges the two. </p>\n<h1 id=\"Dagger-for-dependency-injection\"><a href=\"#Dagger-for-dependency-injection\" class=\"headerlink\" title=\"Dagger for dependency injection\"></a>Dagger for dependency injection</h1><p>Vert.X itself is quite unopinionated regarding the organization of code and how services are integrated. It does not prescribe any specific dependency injection solution. However, from my experience of building backend applications, having a DI solution significantly helps towards testability of the application and reducing coupling among components.</p>\n<p>Our choice of DI framework is <a href=\"https://dagger.dev/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Dagger</a>. In contrast to many other popular DI/IoC solutions, dagger operates through compile time code generation, reducing the reflection overhead causing startup delay. We will cover dagger specific aspects in <a href=\"/2021/02/05/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-II/\">second part</a> of this series, however for users unfamiliar with the concepts of DI, the official <a href=\"https://dagger.dev/users-guide\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">user documentation</a> and <a href=\"https://medium.com/@yostane/dependency-injection-with-dagger-2-inject-and-provides-ce21f7449ec5\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">this post</a> by Yassine Benabbas may be better starting points.</p>\n<h1 id=\"Why-this-particular-combination\"><a href=\"#Why-this-particular-combination\" class=\"headerlink\" title=\"Why this particular combination ?\"></a>Why this particular combination ?</h1><p>All four of these libraries, provide low-level control to the developer and don&#39;t impose superfluous \nhigh level abstractions or indirections that get in the way of performance or debuggability.</p>\n<p>So we end up with code that is easy to reason through, does not require us to jump through unnecessary indirections \nand does not require future maintainers to familiarize themselves with an onerous set of conventions \nbefore they can get productive with the stack.</p>\n<h1 id=\"About-Kotlin\"><a href=\"#About-Kotlin\" class=\"headerlink\" title=\"About Kotlin\"></a>About Kotlin</h1><p>Lastly, <a href=\"https://kotlinlang.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Kotlin</a> is a language from <a href=\"https://www.jetbrains.com/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">JetBrains</a> that targets (among other platforms) \nthe JVM and has excellent interop with Java. So even though all of the above libraries are written in java, \nwe will be able to use them in Kotlin without any additional wrappers and take advantage of the great tooling support by JetBrains. </p>\n<p>I am increasingly leaning towards towards Kotlin for most of my backend work because I find kotlin code to be a great blend of conciseness, \nreadability and type safety. Also, being a part of the wider JVM ecosystem, kotlin lends itself well to scalable performant applications. </p>\n<h1 id=\"Getting-our-feet-wet\"><a href=\"#Getting-our-feet-wet\" class=\"headerlink\" title=\"Getting our feet wet\"></a>Getting our feet wet</h1><p>The official site recommends using <a href=\"https://start.vertx.io/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://start.vertx.io/</a> as a means to bootstrap our application. This site provides a web \ninterface to generate the scaffold for a java or kotlin application using Vert.X. </p>\n<p>However, this generator doesn&#39;t completely address the needs for our chosen stack, because while we intend to write application \ncode in Kotlin, the vertx-jooq project generates java code for interfacing with the database and hence we&#39;d want our project \nto be able to compile both java and kotlin. </p>\n<p>Following pom.xml, modelled after the kotlin official recommendations for mixed maven projects, \nprovides us all we need to have a hybrid java &amp; kotlin project: </p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">modelVersion</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>me.lorefnon<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span>\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-1\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">18 lines collapsed (properties)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">kotlin.version</span>&gt;</span>1.4.21<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">kotlin.version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">kotlin.compiler.incremental</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">kotlin.compiler.incremental</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven-shade-plugin.version</span>&gt;</span>3.2.4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven-shade-plugin.version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven-surefire-plugin.version</span>&gt;</span>2.22.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven-surefire-plugin.version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">exec-maven-plugin.version</span>&gt;</span>3.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">exec-maven-plugin.version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vertx.version</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vertx.version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">junit-jupiter.version</span>&gt;</span>5.7.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">junit-jupiter.version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">main.verticle</span>&gt;</span>me.lorefnon.mastishka.MainVerticle<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">main.verticle</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">launcher.class</span>&gt;</span>io.vertx.core.Launcher<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">launcher.class</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">jjwt.version</span>&gt;</span>0.11.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">jjwt.version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>11<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>11<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.release</span>&gt;</span>11<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.release</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-1\"><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">kotlin.compiler.jvmTarget</span>&gt;</span>11<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">kotlin.compiler.jvmTarget</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencyManagement</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-stack-depchain<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${vertx.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencyManagement</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">&lt;!-- Vert.X related dependencies --&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-web-graphql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-pg-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-lang-kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-redis-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.vertx<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-junit5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.junit.jupiter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>junit-jupiter-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${junit-jupiter.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.junit.jupiter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>junit-jupiter-engine<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${junit-jupiter.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">&lt;!-- Jooq related dependencies --&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.jooq<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>jooq<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.13.3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-comment\">&lt;!-- Library that provides Vert.X compatible code generation for jooq --&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.github.jklingsporn<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-jooq-classic-reactive<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>6.1.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#ffe1e7;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">build</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugins</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-comment\">&lt;!-- Configuration for building hybrid java+kotlin project --&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.jetbrains.kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>kotlin-maven-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${kotlin.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-2\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">23 lines collapsed (Execution tags)</span></div></td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/main/kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/main/java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>test-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>test-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/test/kotlin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">sourceDir</span>&gt;</span>${project.basedir}/src/test/java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDir</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">sourceDirs</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-2\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.8.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-3\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">21 lines collapsed (Execution tags)</span></div></td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>default-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">phase</span>&gt;</span>none<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">phase</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>default-testCompile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">phase</span>&gt;</span>none<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">phase</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>java-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">phase</span>&gt;</span>compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">phase</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>java-test-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">phase</span>&gt;</span>test-compile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">phase</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>testCompile<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line hlcode-line-fold hidden hlcode-line-highlight\" data-fold-id=\"hlcode-fold-3\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-comment\">&lt;!-- Configuration for running jooq-codegen-maven as part of build lifecycle to generate the DAO classes for type-safe DB access --&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.jooq<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>jooq-codegen-maven<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.13.3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>generate<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-comment\">&lt;!-- Our generator needs to connect to the database for inspecting the schema, so we need the postgres jdbc dependencies\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                   even though our application itself will use Vert.x reactive postgres driver instead of jdbc --&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.postgresql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>postgresql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>42.2.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>io.github.jklingsporn<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>vertx-jooq-generate<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>6.1.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-comment\">&lt;!-- Jooq generator configuration: format is the same as for the standalone code generator --&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-comment\">&lt;!-- JDBC connection parameters --&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">jdbc</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">driver</span>&gt;</span>org.postgresql.Driver<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">driver</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">url</span>&gt;</span>jdbc:postgresql://localhost:5432/test_development<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">url</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">user</span>&gt;</span>lorefnon<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">user</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-comment\">&lt;!--&lt;password/&gt; --&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">jdbc</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-comment\">&lt;!-- Generator parameters --&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">generator</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>io.github.jklingsporn.vertx.jooq.generate.classic.ClassicReactiveVertxGenerator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">database</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>org.jooq.meta.postgres.PostgresDatabase<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">includes</span>&gt;</span>.*<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">includes</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">inputSchema</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">inputSchema</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">outputSchema</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">outputSchema</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">unsignedTypes</span>&gt;</span>false<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">unsignedTypes</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">database</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">target</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">packageName</span>&gt;</span>me.lorefnon.test.generated<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">packageName</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">directory</span>&gt;</span>src/main/java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">directory</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">target</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">generate</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">interfaces</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">interfaces</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">daos</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">daos</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">fluentSetters</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">fluentSetters</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">generate</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">strategy</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">name</span>&gt;</span>io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">name</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">strategy</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">generator</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#dbffc3;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-shade-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${maven-shade-plugin.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none\" class=\"hlcode-fold-collapsed\" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" colspan=\"1\"><div class=\"hlcode-fold-handle\" data-fold-id=\"hlcode-fold-4\"><svg height=\"21\" viewBox=\"0 0 21 21\" width=\"21\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" transform=\"translate(4 4)\">\n            <path d=\"m10.5.5h-8c-1.1045695 0-2 .8954305-2 2v8c0 1.1045695.8954305 2 2 2h8c1.1045695 0 2-.8954305 2-2v-8c0-1.1045695-.8954305-2-2-2z\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n            <path d=\"m6.5 3.5v6.056\"/>\n            <path d=\"m6.5 3.5v6\" transform=\"matrix(0 1 -1 0 13 0)\"/>\n        </g>\n    </svg><span class=\"hlcode-fold-text\">24 lines collapsed (Maven Shade Plugin Configuration)</span></div></td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">phase</span>&gt;</span>package<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">phase</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">goal</span>&gt;</span>shade<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goal</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">goals</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transformers</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transformer</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                        <span class=\"hljs-attr\">implementation</span>=<span class=\"hljs-string\">&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">manifestEntries</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Main-Class</span>&gt;</span>${launcher.class}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Main-Class</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Main-Verticle</span>&gt;</span>${main.verticle}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Main-Verticle</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">manifestEntries</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">transformer</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transformer</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                                        <span class=\"hljs-attr\">implementation</span>=<span class=\"hljs-string\">&quot;org.apache.maven.plugins.shade.resource.ServicesResourceTransformer&quot;</span>/&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">transformers</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactSet</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactSet</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">outputFile</span>&gt;</span>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">outputFile</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">execution</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line hlcode-line-fold hidden \" data-fold-id=\"hlcode-fold-4\"><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">executions</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-surefire-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${maven-surefire-plugin.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-comment\">&lt;!-- We can use mvn exec:java to run development server --&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.codehaus.mojo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>exec-maven-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${exec-maven-plugin.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-comment\">&lt;!-- Note that the main class is a Vert.X launcher class which will execute the verticles defined in \n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        our application --&gt;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mainClass</span>&gt;</span>io.vertx.core.Launcher<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mainClass</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">arguments</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">argument</span>&gt;</span>run<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">argument</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">argument</span>&gt;</span>${main.verticle}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">argument</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">arguments</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugins</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">build</span>&gt;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project</span>&gt;</span>\n</td></tr></table></code></pre>\n\n<p>With this in place, everytime we build our project, the jooq integration will generate the data access layer \nfor our database by inspecting the database. </p>\n<h1 id=\"Our-first-verticle\"><a href=\"#Our-first-verticle\" class=\"headerlink\" title=\"Our first verticle\"></a>Our first verticle</h1><p>The primary unit of deployment in Vert.X is a Verticle. <a href=\"https://vertx.io/docs/vertx-core/java/#_verticles\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">The docs</a> explain this in more detail: </p>\n<blockquote>\n<p>Verticles are chunks of code that get deployed and run by Vert.x. A Vert.x instance maintains N event loop threads (where N by default is core*2) by default</p>\n</blockquote>\n<blockquote>\n<p>You can think of a verticle as a bit like an actor in the <a href=\"https://en.wikipedia.org/wiki/Actor_model\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Actor Model</a>.</p>\n</blockquote>\n<blockquote>\n<p>An application would typically be composed of many verticle instances running in the same Vert.x instance at the same time. \nThe different verticle instances communicate with each other by sending messages on the <a href=\"https://vertx.io/docs/vertx-core/java/#event_bus\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">event bus</a>.</p>\n</blockquote>\n<p>So, this is what our first Verticle looks like: </p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-keyword\">package</span> tech.lorefnon.test\n\n<span class=\"hljs-keyword\">import</span> io.vertx.core.AbstractVerticle\n<span class=\"hljs-keyword\">import</span> io.vertx.core.Promise\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MainVerticle</span> : <span class=\"hljs-type\">AbstractVerticle</span></span>() &#123;\n\n    <span class=\"hljs-keyword\">override</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">start</span><span class=\"hljs-params\">(startPromise: <span class=\"hljs-type\">Promise</span>&lt;<span class=\"hljs-type\">Void</span>&gt;)</span></span> &#123;\n        <span class=\"hljs-keyword\">val</span> router = setupRouter(vertx) <span class=\"hljs-comment\">// More on this below</span>\n        vertx\n            .createHttpServer()\n            .requestHandler(router)\n            .listen(<span class=\"hljs-number\">8888</span>) &#123; http -&gt;\n                <span class=\"hljs-keyword\">if</span> (http.succeeded()) &#123;\n                    startPromise.complete()\n                    println(<span class=\"hljs-string\">&quot;HTTP server started on port 8888&quot;</span>)\n                &#125; <span class=\"hljs-keyword\">else</span> &#123;\n                    startPromise.fail(http.cause());\n                &#125;\n            &#125;\n    &#125;\n&#125;</code></pre>\n\n<p>Note that all our setup is explicit in the code and there is no hidden magic going on.</p>\n<p>Our <code>setupRouter</code> function will be responsible for bootstrapping the endpoints which handle the GraphQL requests: </p>\n<pre><code class=\"hljs kotlin\"><span class=\"hljs-keyword\">import</span> io.vertx.core.Vertx\n<span class=\"hljs-keyword\">import</span> io.vertx.ext.web.Router\n<span class=\"hljs-keyword\">import</span> io.vertx.ext.web.handler.BodyHandler\n<span class=\"hljs-keyword\">import</span> io.vertx.ext.web.handler.graphql.GraphQLHandler\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">setupRouter</span><span class=\"hljs-params\">(vertx: <span class=\"hljs-type\">Vertx</span>)</span></span> =\n    Router.router(vertx).also &#123; r -&gt;\n        r.route().handler(BodyHandler.create())\n        r.post(<span class=\"hljs-string\">&quot;/graphql&quot;</span>).handler(\n            GraphQLHandler.create(\n                setupGraphQL() <span class=\"hljs-comment\">// More on this below</span>\n            )\n        )\n    &#125;</code></pre>\n\n<p><code>BodyHandler</code> is needed to parse POST request body. </p>\n<p>Our <code>setupGraphQL</code> function is responsible for wiring up our GraphQL Schema and the resolvers</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.execution.*\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.RuntimeWiring.newRuntimeWiring\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaGenerator\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> graphql.schema.idl.SchemaParser\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> io.vertx.ext.web.handler.graphql.schema.VertxDataFetcher\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">setupGraphQL</span><span class=\"hljs-params\">()</span></span> = GraphQL\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    .newGraphQL(buildExecutableSchema())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">val</span> rawSchema = <span class=\"hljs-string\">&quot;&quot;&quot;\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    type Query {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        hello: String\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">&quot;&quot;&quot;</span>.trimIndent()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildRuntimeWiring</span><span class=\"hljs-params\">()</span></span> = newRuntimeWiring()\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    .type(<span class=\"hljs-string\">&quot;Query&quot;</span>) {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        it.dataFetcher(<span class=\"hljs-string\">&quot;hello&quot;</span>) {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-comment\">// Here is the logic for resolving our hello field in Query type</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-comment\">//</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-comment\">// For now we just return a static string</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">            <span class=\"hljs-string\">&quot;world&quot;</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">        }\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    .build()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">buildExecutableSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    SchemaGenerator().makeExecutableSchema(parseSchema(), buildRuntimeWiring())\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">parseSchema</span><span class=\"hljs-params\">()</span></span> =\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    SchemaParser().parse(rawSchema)\n</td></tr></table></code></pre>\n\n<p>Our <code>rawSchema</code> variable contains our very minimal GraphQL schema (defined using <a href=\"https://www.digitalocean.com/community/tutorials/graphql-graphql-sdl\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">GraphQL SDL</a>)</p>\n<p>Our <code>buildRuntimeWiring</code> function specifies the resolvers (called <code>dataFetcher</code> in graphql-java terminology) for our dynamic GraphQL fields. </p>\n<p>Finally we combine the schema with the runtime wiring (set of resolvers associated with corresponding fields) to form an executable schema \nwhich the <code>GraphQLHandler</code> from <code>vertx-graphql</code> package can use to setup the HTTP endpoint which we have mapped to the <code>/graphql</code> route in our \n<code>setupRouter</code> function.</p>\n<p>As we saw in the pom.xml we have an exec:java goal defined. So we can use <code>mvn compile exec:java</code> to run our server. </p>\n<p>If we see following message in the server logs, that means we are all good and our server is up and running: </p>\n<pre><code class=\"hljs plaintext\">Feb 01, 2021 12:25:02 AM io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer\nINFO: Succeeded in deploying verticle\nHTTP server started on port 8888</code></pre>\n\n<p>We can try out our API using a GraphQL client. I like using <a href=\"https://altair.sirmuel.design/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Altair</a>.</p>\n<p><img src=\"/images/2020-02-01/graphql-altair-hello-world.png\" alt=\"Altair\" loading=\"lazy\"></p>\n<p>So we see that our simple API works and our field (<code>hello</code>) is resolved through the dataFetcher we have defined.</p>\n<p>For now, our minimal resolver returns a simple static string. In the <a href=\"/2021/02/05/Building-GraphQL-APIs-powered-by-Vert-x-jOOQ-Kotlin-II/\">next post</a> we will integrate a basic DI setup using Dagger, and in the in the subsequent one we will setup a signup and signin mechanism where our resolvers will connect to the database for persisting data.</p>\n",
            "tags": [
                "GraphQL",
                "Kotlin",
                "Vert.X",
                "Vert.X-Web",
                "Backend-development",
                "API-development"
            ]
        }
    ]
}