{
    "version": "https://jsonfeed.org/version/1",
    "title": "Icicles of Thought • All posts by \"typescript\" tag",
    "description": "",
    "home_page_url": "https://lorefnon.me",
    "items": [
        {
            "id": "https://lorefnon.me/2022/06/25/generating-api-docs-for-zod-types/",
            "url": "https://lorefnon.me/2022/06/25/generating-api-docs-for-zod-types/",
            "title": "Generating API docs for zod-types",
            "date_published": "2022-06-25T00:00:00.000Z",
            "content_html": "<p>I often like to use <a href=\"https://github.com/colinhacks/zod\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">zod</a> for validating user provided options in the public API in typescript projects. Zod offers a really nice validation &amp; type inference support and it is nice to be able to fail early for invalid options even if consumer is not using typescript.</p>\n<p>Generating API documentation is a bit of trouble though, for these types. <a href=\"https://typedoc.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Typedoc</a> is a nice documentation generator I frequently use, but it does not have any specialized zod support and works best when types are defined through normal typescript interfaces.</p>\n<p>So what do we do ? </p>\n<p>Interestingly, typescript is able to propagate comments through inheritance hierarchy and mapped types.</p>\n<p>So if we have a zod-type as follows: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> z <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;zod&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">UserSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-comment\">/** Full name of user */</span>\n    <span class=\"hljs-attr\">name</span>: z.<span class=\"hljs-title function_\">string</span>()\n&#125;)</code></pre>\n\n<p>and later define an interface that extends the type inferred from this: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">User</span> <span class=\"hljs-keyword\">extends</span> z.<span class=\"hljs-title class_\">TypeOf</span>&lt;typeof <span class=\"hljs-title class_\">UserSchema</span>&gt; &#123;&#125;</code></pre>\n\n<p>The generated documentation of User will contain the comments for name property.</p>\n<p>This unfortunately works only for Object types as long as we don&#39;t introduce any unions and intersections - any base type of an interface must have statically known members. This also doesn&#39;t work well for nested object types as typedoc will pick only the types at top level.</p>\n<p>For more complex types, a simple workaround is to extract interfaces for constituent types and link them in the documentation. </p>\n<p>So instead of:</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">UserDetailsSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-attr\">profile</span>: z.<span class=\"hljs-title function_\">object</span>(&#123;\n        <span class=\"hljs-attr\">name</span>: z.<span class=\"hljs-title function_\">string</span>()\n    &#125;).<span class=\"hljs-title function_\">nullish</span>()\n&#125;);</code></pre>\n\n<p>We&#39;d write: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ProfileSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-comment\">/** Full name of user */</span>\n    <span class=\"hljs-attr\">name</span>: z.<span class=\"hljs-title function_\">string</span>()\n&#125;);\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Profile</span> <span class=\"hljs-keyword\">extends</span> z.<span class=\"hljs-title class_\">TypeOf</span>&lt;typeof <span class=\"hljs-title class_\">ProfileSchema</span>&gt; &#123;&#125;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">UserDetailsSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-comment\">/** See &#123;<span class=\"hljs-doctag\">@link</span> Profile&#125; */</span>\n    <span class=\"hljs-attr\">profile</span>: <span class=\"hljs-title class_\">Profile</span>.<span class=\"hljs-title function_\">nullish</span>()\n&#125;)\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">UserDetails</span> <span class=\"hljs-keyword\">extends</span> z.<span class=\"hljs-title class_\">TypeOf</span>&lt;typeof <span class=\"hljs-title class_\">UserDetailsSchema</span>&gt; &#123;&#125;</code></pre>\n\n<p>This increases the boilerplate a bit, but is otherwise quite practical.</p>\n",
            "tags": [
                "typescript",
                "zod"
            ]
        },
        {
            "id": "https://lorefnon.me/2022/06/18/type-safe-event-handling-with-zod-and-ts-pattern/",
            "url": "https://lorefnon.me/2022/06/18/type-safe-event-handling-with-zod-and-ts-pattern/",
            "title": "Type-safe event handling in Typescript with zod and ts-pattern",
            "date_published": "2022-06-18T00:00:00.000Z",
            "content_html": "<h1 id=\"Event-handling\"><a href=\"#Event-handling\" class=\"headerlink\" title=\"Event handling\"></a>Event handling</h1><p>It is no surprise to anyone that event handling is bread and butter in javascript. However, often we receive several types of events from an event source which makes handling them in a type-safe manner harder. Eg. if we are consuming websocket events on the backend we may write something like: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> ws <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;ws&quot;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">express</span>()\n\n<span class=\"hljs-keyword\">const</span> server = app.<span class=\"hljs-title function_\">listen</span>(<span class=\"hljs-number\">3000</span>)\n\n<span class=\"hljs-keyword\">const</span> wss = <span class=\"hljs-keyword\">new</span> ws.<span class=\"hljs-title class_\">Server</span>(&#123; server &#125;)\n\nwss.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&quot;connection&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">ws: ws.WebSocket</span>) =&gt;</span> &#123;\n    ws.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&quot;message&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;\n        <span class=\"hljs-keyword\">const</span> parsed = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data); \n               ^\n               <span class=\"hljs-string\">`----- any :(</span>\n<span class=\"hljs-string\">    &#125;)</span>\n<span class=\"hljs-string\">&#125;)</span></code></pre>\n\n<p>Similarly we could be receiving a message from a different window&#x2F;frame through postMessage, or another peer over a webrtc data channel, the problem remains the same: After receiving the data we need to disambiguate it into one of the multiple possible types of messages and branch out the handling logic from there.</p>\n<p>The most basic way would be to write a <a href=\"https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">type-guard</a> for each possible type.</p>\n<p>Typescript offers flow-sensitive typing so once we have established in a branch that a value is of a particular type, we do need any extra casts. </p>\n<p>So we could write something like this: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">PostDetails</span> &#123;\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">description</span>: <span class=\"hljs-built_in\">string</span>;\n&#125;\n\n<span class=\"hljs-comment\">// Types for our events:</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">CreatePost</span> &#123;\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;CreatePost&quot;</span>,\n    <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetails</span>\n&#125;\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">UpdatePost</span> &#123;\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;UpdatePost&quot;</span>,\n    <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetails</span>\n&#125;\n\n<span class=\"hljs-comment\">// Type-guards for different message types</span>\n<span class=\"hljs-keyword\">const</span> isCreatePost = (<span class=\"hljs-attr\">event</span>: <span class=\"hljs-built_in\">any</span>): event is <span class=\"hljs-title class_\">CreatePost</span> =&gt; event.<span class=\"hljs-property\">type</span> === <span class=\"hljs-string\">&quot;CreatePost&quot;</span>\n<span class=\"hljs-keyword\">const</span> isUpdatePost = (<span class=\"hljs-attr\">event</span>: <span class=\"hljs-built_in\">any</span>): event is <span class=\"hljs-title class_\">CreatePost</span> =&gt; event.<span class=\"hljs-property\">type</span> === <span class=\"hljs-string\">&quot;UpdatePost&quot;</span>\n\n<span class=\"hljs-comment\">// Later in our message receiver: </span>\n\nws.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&quot;message&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;\n    <span class=\"hljs-keyword\">const</span> parsed = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data); \n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_\">isCreatePost</span>(parsed)) &#123;\n        ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-title function_\">handleCreatePost</span>(parsed))\n        <span class=\"hljs-comment\">//                       ^</span>\n        <span class=\"hljs-comment\">//                       `---- type of parsed is CreatePost in this branch</span>\n    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_\">isUpdatePost</span>(parsed)) &#123;\n        ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-title function_\">handleUpdatePost</span>(parsed))\n        <span class=\"hljs-comment\">//                        ^</span>\n        <span class=\"hljs-comment\">//                         `---- type of parsed is UpdatePost in this branch</span>\n    &#125;\n    <span class=\"hljs-comment\">// ....</span>\n&#125;)</code></pre>\n\n<p>This works, but it is quite a bit of boilerplate to discriminate&#x2F;disambiguate between different possible types. This boilerpate is also repetitive if we adopt a convention that we will always discriminate the types based on a <code>type</code> attribute which all the events will have. </p>\n<p>Other issue is that we are trusting the rest of the shape of the data based on the type attribute. Our type-guards (isCreatePost, isUpdatePost etc.) just check for the type property - and assumes that rest of the properties are as expected. If the websocket client sends an invalid object like <code>&#123; type: &quot;CreatePost&quot; &#125;</code> (no data) we will get a runtime error which may surface deeper inside the handling logic with a confusing stack trace. </p>\n<p>When we are receiving data over a network boundary or from a persisted store, it is generally safer to validate the complete payload at the boundary itself (which is our message receiver function in this example) and fail early with a clean error.</p>\n<p>We could write our type-guard to be more defensive like: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> isCreatePost = (<span class=\"hljs-attr\">event</span>: <span class=\"hljs-built_in\">any</span>): event is <span class=\"hljs-title class_\">CreatePost</span> =&gt; &#123;\n    <span class=\"hljs-keyword\">return</span> event.<span class=\"hljs-property\">type</span> === <span class=\"hljs-string\">&quot;CreatePost&quot;</span> &amp;&amp;\n        <span class=\"hljs-keyword\">typeof</span> event.<span class=\"hljs-property\">data</span> === <span class=\"hljs-string\">&quot;object&quot;</span> &amp;&amp;\n        <span class=\"hljs-keyword\">typeof</span> event.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">title</span> === <span class=\"hljs-string\">&quot;string&quot;</span> &amp;&amp;\n        <span class=\"hljs-keyword\">typeof</span> event.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">description</span> === <span class=\"hljs-string\">&quot;string&quot;</span>;\n&#125;</code></pre>\n\n<p>But this is now a ton of additional work. </p>\n<p>This is also error prone because tomorrow if we add another field in PostDetails we will also need to update all these type-guards to accomodate the same. They have to kept in sync manually with no help from type-checker whatsoever.</p>\n<p>Fortunately, we have libraries to simplify this validation logic for us. One such library is <a href=\"https://github.com/colinhacks/zod\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">zod</a> which is what I currently use in my production applications.</p>\n<p>With zod we can define the shape of our events through zod&#39;s API: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> zod <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;zod&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PostDetailsSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-attr\">title</span>: z.<span class=\"hljs-title function_\">string</span>(),\n    <span class=\"hljs-attr\">description</span>: z.<span class=\"hljs-title function_\">string</span>()\n&#125;);\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">CreatePostSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-attr\">type</span>: z.<span class=\"hljs-title function_\">literal</span>(<span class=\"hljs-string\">&quot;CreatePost&quot;</span>),\n    <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetailsSchema</span>\n&#125;);\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">UpdatePostSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-attr\">type</span>: z.<span class=\"hljs-title function_\">literal</span>(<span class=\"hljs-string\">&quot;UpdatePost&quot;</span>),\n    <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetailsSchema</span>.<span class=\"hljs-title function_\">partial</span>()\n&#125;)</code></pre>\n\n<p>The benefit of defining these schema objects, is that we are able to perform runtime validation of unknown data.</p>\n<p>So our isCreatePost type-guard can be written as: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> isCreatePost = (<span class=\"hljs-attr\">event</span>: <span class=\"hljs-built_in\">any</span>): event is <span class=\"hljs-title class_\">CreatePost</span> =&gt;\n    <span class=\"hljs-title class_\">CreatePostSchema</span>.<span class=\"hljs-title function_\">safeParse</span>(event).<span class=\"hljs-property\">success</span></code></pre>\n\n<p>We also don&#39;t have to manually define the typescript interfaces for <code>CreatePost</code>, <code>UpdatePost</code> etc. ourselves. They can instead be inferred from the Schema objects. </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">CreatePost</span> = z.<span class=\"hljs-property\">TypeOf</span>&lt;<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">CreatePostSchema</span>&gt;;\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">UpdatePost</span> = z.<span class=\"hljs-property\">TypeOf</span>&lt;<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">UpdatePostSchema</span>&gt;;</code></pre>\n\n<p>The above approach of discriminating between multiple types using a shared property is very common in practice, and we call union of such types as discriminated unions. </p>\n<p>Zod has built in support for discriminated unions, and we can define an EventSchema as follows: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-comment\">//                                          ,---- Property based on which we will discriminate</span>\n<span class=\"hljs-comment\">//                                         V           the members of our union type</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">EventSchema</span> = z.<span class=\"hljs-title function_\">discriminatedUnion</span>(<span class=\"hljs-string\">&quot;type&quot;</span>, [\n    <span class=\"hljs-title class_\">CreatePostSchema</span>,\n    <span class=\"hljs-title class_\">UpdatePostSchema</span>\n])</code></pre>\n\n<p>Often, we won&#39;t define the individual members separately: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">EventSchema</span> = z.<span class=\"hljs-title function_\">discriminatedUnion</span>(<span class=\"hljs-string\">&quot;type&quot;</span>, [\n   z.<span class=\"hljs-title function_\">object</span>(&#123;\n     <span class=\"hljs-attr\">type</span>: z.<span class=\"hljs-title function_\">literal</span>(<span class=\"hljs-string\">&quot;CreatePost&quot;</span>),\n     <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetailsSchema</span>\n   &#125;),\n   z.<span class=\"hljs-title function_\">object</span>(&#123;\n     <span class=\"hljs-attr\">type</span>: z.<span class=\"hljs-title function_\">literal</span>(<span class=\"hljs-string\">&quot;UpdatePost&quot;</span>),\n     <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetailsSchema</span>\n   &#125;)\n])</code></pre>\n\n<p>which is exactly the same as above. </p>\n<p>If we use the previously mentioned TypeOf type to get the static type of EventSchema we will get a union of the CreatePost and UpdatePost types. </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Event</span> = z.<span class=\"hljs-property\">TypeOf</span>&lt;<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">EventSchema</span>&gt;</code></pre>\n\n<p>The above will be inferred as: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Event</span> = \n    | &#123; <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;CreatePost&quot;</span>, <span class=\"hljs-attr\">data</span>: &#123; <span class=\"hljs-attr\">title</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">description</span>: <span class=\"hljs-built_in\">string</span> &#125; &#125;\n    | &#123; <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;UpdatePost&quot;</span>, <span class=\"hljs-attr\">data</span>: &#123; title?: <span class=\"hljs-built_in\">string</span>, description?: <span class=\"hljs-built_in\">string</span> &#125; &#125;</code></pre>\n\n<p>which is effectively: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Event</span> = <span class=\"hljs-title class_\">CreatePost</span> | <span class=\"hljs-title class_\">UpdatePost</span></code></pre>\n\n<p>One additional thing that we gain from defining a discriminated union is an exhaustiveness check. So we if we use <code>EventSchema.parse(someData)</code> this will throw a runtime error if someData does not conform to the complete shape of one of the errors.</p>\n<p>We can write our handler as: </p>\n<pre><code class=\"hljs ts\">ws.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&quot;message&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;\n    <span class=\"hljs-keyword\">try</span> &#123; \n        <span class=\"hljs-keyword\">const</span> parsed = <span class=\"hljs-title class_\">EventSchema</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data)); <span class=\"hljs-comment\">// Parse will throw for invalid events</span>\n        <span class=\"hljs-comment\">//     ^</span>\n        <span class=\"hljs-comment\">//      `--- CreatePost | UpdatePost</span>\n        <span class=\"hljs-keyword\">switch</span> (parsed.<span class=\"hljs-property\">type</span>) &#123;\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;CreatePost&quot;</span>:\n            ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-title function_\">handleCreatePost</span>(parsed)) \n            <span class=\"hljs-comment\">//                        ^</span>\n            <span class=\"hljs-comment\">//                        `---- type of parsed is CreatePost in this branch</span>\n            <span class=\"hljs-keyword\">return</span>; \n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;UpdatePost&quot;</span>:\n            ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-title function_\">handleUpdatePost</span>(parsed))\n            <span class=\"hljs-comment\">//                      ^</span>\n            <span class=\"hljs-comment\">//                       `---- type of parsed is UpdatePost in this branch</span>\n            <span class=\"hljs-keyword\">return</span>;\n        &#125;\n    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e);\n        <span class=\"hljs-comment\">// Also see https://github.com/colinhacks/zod#error-formatting</span>\n    &#125;\n&#125;)\n</code></pre>\n\n<p>However, it would be also nice to have this exhaustiveness check enforced in our handler at compile time. The way our code is currently written, tomorrow if we add a new type of event in the discriminated union, but forget to add an if-else branch in the above code, it will get silently ignored - Not great. </p>\n<p>We can take advantage of the typescript compiler option <a href=\"https://www.typescriptlang.org/tsconfig#noImplicitReturns\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">noImplicitReturns</a> to enforce this: </p>\n<pre><code class=\"hljs ts\">ws.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">&quot;message&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> &#123;\n    <span class=\"hljs-keyword\">try</span> &#123; \n        ws.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-title function_\">handleEvent</span>(<span class=\"hljs-title class_\">EventSchema</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(data)))); <span class=\"hljs-comment\">// Parse will throw for invalid events</span>\n    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e);\n    &#125;\n&#125;);\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">handleEvent</span> = (<span class=\"hljs-params\">event: Event</span>) =&gt; &#123;\n    <span class=\"hljs-keyword\">switch</span> (event.<span class=\"hljs-property\">type</span>) &#123;\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;CreatePost&quot;</span>:\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">handleCreatePost</span>(event);\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&quot;UpdatePost&quot;</span>:\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">handleUpdatePost</span>(event);\n    &#125;\n&#125;</code></pre>\n\n<p>Note that our switch statement does not have a default case. </p>\n<p>So if we update our Event have another variant like: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">EventSchema</span> = z.<span class=\"hljs-title function_\">discriminatedUnion</span>(<span class=\"hljs-string\">&quot;type&quot;</span>, [\n   z.<span class=\"hljs-title function_\">object</span>(&#123;\n     <span class=\"hljs-attr\">type</span>: z.<span class=\"hljs-title function_\">literal</span>(<span class=\"hljs-string\">&quot;CreatePost&quot;</span>),\n     <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetailsSchema</span>\n   &#125;),\n   z.<span class=\"hljs-title function_\">object</span>(&#123;\n     <span class=\"hljs-attr\">type</span>: z.<span class=\"hljs-title function_\">literal</span>(<span class=\"hljs-string\">&quot;UpdatePost&quot;</span>),\n     <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">PostDetailsSchema</span>.<span class=\"hljs-title function_\">partial</span>()\n   &#125;),\n   z.<span class=\"hljs-title function_\">object</span>(&#123;\n     <span class=\"hljs-attr\">type</span>: z.<span class=\"hljs-title function_\">literal</span>(<span class=\"hljs-string\">&quot;DeletePost&quot;</span>),\n     <span class=\"hljs-attr\">data</span>: z.<span class=\"hljs-title function_\">object</span>(&#123; <span class=\"hljs-attr\">id</span>: z.<span class=\"hljs-title function_\">string</span>() &#125;)\n   &#125;)\n])</code></pre>\n\n<p>None of the switch-case branches will now match for <code>DeletePost</code> and we will end up with a possible branch of code that returns implicitly. Typescript will now complain about that.</p>\n<p>We could wrap-up the post here - given that we have accomplished all the type-safety features we wanted. However, I am not a huge fan of having to rely on implicit returns (or similar workarounds) for exhaustiveness check. </p>\n<p>In many functional languages, we have support for <a href=\"https://abitofocaml.weebly.com/12-pattern-matching.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">pattern-matching</a> with built in support for exhaustiveness check. Typescript does not have this at the moment but there are userland implementations that emulate pattern matching. One such library is <a href=\"https://github.com/gvergnaud/ts-pattern\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">ts-pattern</a>, which I have found to work very well in practice. </p>\n<p>With ts-pattern we could write our handler as: </p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> &#123; match &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;ts-pattern&quot;</span>;\n\n<span class=\"hljs-comment\">// --- </span>\n\n<span class=\"hljs-title function_\">match</span>(event)\n    .<span class=\"hljs-title function_\">with</span>(&#123; <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;CreatePost&#x27;</span> &#125;, handleCreatePost)\n    .<span class=\"hljs-title function_\">with</span>(&#123; <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;UpdatePost&#x27;</span> &#125;, handleUpdatePost)\n    .<span class=\"hljs-title function_\">exhaustive</span>()   <span class=\"hljs-comment\">// &lt;--- will be a type error if Event type has any other union members</span></code></pre>\n\n<p>Not only is this more succinct for this use case, ts-pattern becomes more useful when we have more complex scenario like combining multiple predicates or performing checks based on multiple properties. Take a look at some of their examples in the <a href=\"https://github.com/gvergnaud/ts-pattern#readme\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">docs</a>.</p>\n<p>Also, unlike our switch-case or if-else examples above, the entire match invocation is a single expression so we could use the return value of our handler without needing temporary variables.</p>\n<pre><code class=\"hljs ts\">ws.<span class=\"hljs-title function_\">send</span>(\n    <span class=\"hljs-title function_\">match</span>(event)\n        .<span class=\"hljs-title function_\">with</span>(&#123; <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;CreatePost&#x27;</span> &#125;, handleCreatePost)\n        .<span class=\"hljs-title function_\">with</span>(&#123; <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;UpdatePost&#x27;</span> &#125;, handleUpdatePost)\n        .<span class=\"hljs-title function_\">exhaustive</span>()\n)</code></pre>\n\n<p>Cool, eh ?</p>\n",
            "tags": [
                "typescript",
                "zod",
                "ts-pattern"
            ]
        },
        {
            "id": "https://lorefnon.me/2022/06/18/type-safe-jsonb-with-ts-sql-query/",
            "url": "https://lorefnon.me/2022/06/18/type-safe-jsonb-with-ts-sql-query/",
            "title": "Making jsonb access type-safe with a zod adapter in ts-sql-query",
            "date_published": "2022-06-18T00:00:00.000Z",
            "content_html": "<p><a href=\"https://ts-sql-query.readthedocs.io/en/stable\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">ts-sql-query</a> is a nice typescript library for typesafe database access. It goes to great lengths to ensure that if code compiles without type errors then all generated SQL is correct. Of course there are escape hatches for advanced scenarios, but having type-safety for the 90% most common usages is a huge productivity boost.</p>\n<p>Modern databases like postgres have built in json support, enabling us to store semi-structured data in a database column. While this does go against norms of traditional normalization, in practice it is immensely convenient for cases where shaping the data into tabular format is either very time consuming or simply not feasible because the entire structure of data is not known ahead of time or changes frequently.</p>\n<p>However, to be able to effectively process this data in application layer, it is often beneficial to have an application-side schema to validate this json data even if this schema is not 100% known ahead of time, evolves alongside our understanding of data or not 100% strict.</p>\n<p>In typescript, we have a multitude of options for schema validation like <a href=\"https://zod.dev/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">zod</a>, <a href=\"https://github.com/gcanti/io-ts\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">io-ts</a>, <a href=\"https://joi.dev/api/?v=17.6.0\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">joi</a> etc. In this post we primarily focus on zod because IMHO it strikes a very good balance between a user friendly API, available features and being able to extract static types from schema definitions.</p>\n<p>Whiel ts-sql-query does not have json support built-in, it supports custom types through <a href=\"https://ts-sql-query.readthedocs.io/en/stable/supported-operations/#type-adpaters\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">TypeAdapter</a>. So for our jsonb columns we can write a TypeAdapter that utilizes zod to enforce that the data coming from and going to the database conforms to our expectations.</p>\n<p>Let&#39;s say we have a zod type ChapterMedatadata:</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> z <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;zod&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ChapterMetadataSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-attr\">name</span>: z.<span class=\"hljs-title function_\">string</span>(),\n    <span class=\"hljs-attr\">topics</span>: z.<span class=\"hljs-title function_\">string</span>().<span class=\"hljs-title function_\">array</span>(),\n&#125;);\n\n<span class=\"hljs-comment\">// Extract static type</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">ChapterMetadata</span> = z.<span class=\"hljs-property\">TypeOf</span>&lt;<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">ChapterMetadataSchema</span>&gt;;</code></pre>\n\n<p>Following would be a type adapter that validates the incoming and outgoing json through this type:</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> &#123; <span class=\"hljs-title class_\">DefaultTypeAdapter</span>, <span class=\"hljs-title class_\">TypeAdapter</span> &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;ts-sql-query/TypeAdapter&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ChapterMetadataAdapter</span>: <span class=\"hljs-title class_\">TypeAdapter</span> = &#123;\n    <span class=\"hljs-title function_\">transformValueFromDB</span>(\n        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">any</span>,\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">string</span>,\n        <span class=\"hljs-attr\">next</span>: <span class=\"hljs-title class_\">DefaultTypeAdapter</span>\n    ): <span class=\"hljs-built_in\">unknown</span> &#123;\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">type</span> === <span class=\"hljs-string\">&quot;jsonb&quot;</span>) &#123;\n            <span class=\"hljs-comment\">// Our database adapter (postgres) is aware of jsonb and has already</span>\n            <span class=\"hljs-comment\">// parsed the JSON. So we don&#x27;t need JSON.parse. However if the dabase</span>\n            <span class=\"hljs-comment\">// didn&#x27;t have first class support for json type and</span>\n            <span class=\"hljs-comment\">// we were storing the JSON in a text field we would need to do a JSON.parse first</span>\n            <span class=\"hljs-comment\">// before calling ChapterMetadataSchema.parse</span>\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">ChapterMetadataSchema</span>.<span class=\"hljs-title function_\">parse</span>(value);\n        &#125;\n\n        <span class=\"hljs-comment\">// If type is not jsonb then gracefully fallback to the next adapter</span>\n        <span class=\"hljs-keyword\">return</span> next.<span class=\"hljs-title function_\">transformValueFromDB</span>(value, <span class=\"hljs-keyword\">type</span>);\n    &#125;,\n\n    <span class=\"hljs-title function_\">transformValueToDB</span>(\n        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">any</span>,\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">string</span>,\n        <span class=\"hljs-attr\">next</span>: <span class=\"hljs-title class_\">DefaultTypeAdapter</span>\n    ): <span class=\"hljs-built_in\">unknown</span> &#123;\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">type</span> === <span class=\"hljs-string\">&quot;jsonb&quot;</span>) &#123;\n            <span class=\"hljs-comment\">// This is strictly not necessary because TS will ensure</span>\n            <span class=\"hljs-comment\">// that atleast the static type is enforced.</span>\n            <span class=\"hljs-comment\">//</span>\n            <span class=\"hljs-comment\">// However it offers aditional safety if we have some refinements</span>\n            <span class=\"hljs-comment\">// or if there is possibility of values with any type creeping in.</span>\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">ChapterMetadataSchema</span>.<span class=\"hljs-title function_\">parse</span>(value);\n        &#125;\n\n        <span class=\"hljs-comment\">// If type is not jsonb gracefully fallback to the next adapter</span>\n        <span class=\"hljs-keyword\">return</span> next.<span class=\"hljs-title function_\">transformValueToDB</span>(value, <span class=\"hljs-keyword\">type</span>);\n    &#125;,\n&#125;;</code></pre>\n\n<p>Once we have the adapter in place, we can use this in our table mapping:</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> &#123; <span class=\"hljs-title class_\">Table</span> &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;ts-sql-query/Table&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ChaptersTable</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">Table</span>&lt;<span class=\"hljs-title class_\">DBConnection</span>, <span class=\"hljs-string\">&quot;ChaptersTable&quot;</span>&gt; &#123;\n    id = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">autogeneratedPrimaryKey</span>(<span class=\"hljs-string\">&quot;id&quot;</span>, <span class=\"hljs-string\">&quot;int&quot;</span>);\n    metadata = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">optionalColumn</span>&lt;<span class=\"hljs-title class_\">ChapterMetadata</span>&gt;(\n        <span class=\"hljs-string\">&quot;metadata&quot;</span>,\n        <span class=\"hljs-string\">&quot;custom&quot;</span>,\n        <span class=\"hljs-string\">&quot;jsonb&quot;</span>,\n        <span class=\"hljs-title class_\">ChapterMetadataAdapter</span>\n    );\n\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) &#123;\n        <span class=\"hljs-variable language_\">super</span>(<span class=\"hljs-string\">&quot;chapters&quot;</span>);\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">const</span> tChapters = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ChaptersTable</span>();</code></pre>\n\n<p>So now whenever we try to retrieve the data from database, the value for metadata column will be validated against our schema.</p>\n<p>And because we have passed the ChapterMetadata static type as a type parameter to the column, for operations performed in typescript codebase, we get static type safety as well:</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-title function_\">getConnection</span>()\n    .<span class=\"hljs-title function_\">insertInto</span>(tChapters)\n    .<span class=\"hljs-title function_\">set</span>(&#123; <span class=\"hljs-attr\">metadata</span>: &#123; <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;Test&quot;</span>, <span class=\"hljs-attr\">topic</span>: <span class=\"hljs-string\">&quot;test&quot;</span> &#125; &#125;); <span class=\"hljs-comment\">// &lt;-- Static type error</span></code></pre>\n\n<p>Note that whenever we are performing type validation of data coming from a long term storage, we need to be cautious with schema evolution.</p>\n<p>Tomorrow if we update the type and add backward incompatible changes (eg. new mandatory fields), then the rows containing past data can become inaccessible.</p>\n<p>So it is better to ensure that any schema change is additive, and new fields added are optional. It is also useful to perform two step transitions where in the transition duration the schema is compatible with both previous and new shape of data (at the cost of being more relaxed than is necessary).</p>\n<p>Lastly, the above type adapter assumes that the shape of data as stored in database matches the shape of the data that the application deals with.</p>\n<p>It can sometimes be desirable to store the data in a different format than what the application deals. This could be either to facilitate ease of indexing or compaction of storage on the db side, or to use more complex data structures than json-compatible objects and arrays on the application side.</p>\n<p>While zod does not support codecs like some other libraries like io-ts, it is possible to use two different (mutually compatible) types in transformValueToDB and transformValueFromDB to convert between the two representations.</p>\n<p>A simple example of two such types can be:</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> z <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;zod&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ChapterMetadataDBToAppSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-attr\">name</span>: z.<span class=\"hljs-title function_\">string</span>(),\n    <span class=\"hljs-attr\">topics</span>: z\n        .<span class=\"hljs-title function_\">string</span>()\n        .<span class=\"hljs-title function_\">array</span>()\n        .<span class=\"hljs-title function_\">transform</span>(\n            <span class=\"hljs-function\">(<span class=\"hljs-params\">it</span>) =&gt;</span>\n                <span class=\"hljs-comment\">// Convert the JSON array to a Set</span>\n                <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>(it)\n        ),\n    <span class=\"hljs-attr\">relevanceScores</span>: z.<span class=\"hljs-title function_\">record</span>(z.<span class=\"hljs-title function_\">number</span>()).<span class=\"hljs-title function_\">transform</span>(\n        <span class=\"hljs-function\">(<span class=\"hljs-params\">it</span>) =&gt;</span>\n            <span class=\"hljs-comment\">// Convert the JSON object to a Map</span>\n            <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Map</span>(<span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">entries</span>(it))\n    ),\n&#125;);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ChapterMetadataAppToDBSchema</span> = z.<span class=\"hljs-title function_\">object</span>(&#123;\n    <span class=\"hljs-attr\">name</span>: z.<span class=\"hljs-title function_\">string</span>(),\n    <span class=\"hljs-attr\">topics</span>: z.<span class=\"hljs-title function_\">set</span>(z.<span class=\"hljs-title function_\">string</span>()).<span class=\"hljs-title function_\">transform</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">it</span>) =&gt;</span>\n        <span class=\"hljs-comment\">// Convert set to array</span>\n        [...it]\n    ),\n    <span class=\"hljs-attr\">relevanceScores</span>: z.<span class=\"hljs-title function_\">map</span>(z.<span class=\"hljs-title function_\">string</span>(), z.<span class=\"hljs-title function_\">number</span>()).<span class=\"hljs-title function_\">transform</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">it</span>) =&gt;</span>\n        <span class=\"hljs-comment\">// Convert Map to object</span>\n        <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">fromEntries</span>(it.<span class=\"hljs-title function_\">entries</span>())\n    ),\n&#125;);</code></pre>\n\n<p>Now we can change our adapter to use these two separate types:</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">ChapterMetadataAdapter</span>: <span class=\"hljs-title class_\">TypeAdapter</span> = &#123;\n    <span class=\"hljs-title function_\">transformValueFromDB</span>(\n        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">any</span>,\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">string</span>,\n        <span class=\"hljs-attr\">next</span>: <span class=\"hljs-title class_\">DefaultTypeAdapter</span>\n    ): <span class=\"hljs-built_in\">unknown</span> &#123;\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">type</span> === <span class=\"hljs-string\">&quot;jsonb&quot;</span>) &#123;\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">ChapterMetadataDBToAppSchema</span>.<span class=\"hljs-title function_\">parse</span>(value);\n        &#125;\n        <span class=\"hljs-keyword\">return</span> next.<span class=\"hljs-title function_\">transformValueFromDB</span>(value, <span class=\"hljs-keyword\">type</span>);\n    &#125;,\n\n    <span class=\"hljs-title function_\">transformValueToDB</span>(\n        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">any</span>,\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">string</span>,\n        <span class=\"hljs-attr\">next</span>: <span class=\"hljs-title class_\">DefaultTypeAdapter</span>\n    ): <span class=\"hljs-built_in\">unknown</span> &#123;\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">type</span> === <span class=\"hljs-string\">&quot;jsonb&quot;</span>) &#123;\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">ChapterMetadataAppToDBSchema</span>.<span class=\"hljs-title function_\">parse</span>(value);\n        &#125;\n        <span class=\"hljs-keyword\">return</span> next.<span class=\"hljs-title function_\">transformValueToDB</span>(value, <span class=\"hljs-keyword\">type</span>);\n    &#125;,\n&#125;;</code></pre>\n\n<p>We need to make sure that these two types are always mutually compatible ie. for any valid values</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-title class_\">ChapterMetadataAppToDBSchema</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">ChapterMetadataDBToAppSchema</span>.<span class=\"hljs-title function_\">parse</span>(value));</code></pre>\n\n<p>succeeds, and vice versa.</p>\n<p>We can use unit tests to ensure that, and we can also add witness types to validate the compatibility of corresponding static types.</p>\n<pre><code class=\"hljs ts\"><span class=\"hljs-comment\">// Type that enforces that U is assignable to T</span>\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">ExtendsWitness</span>&lt;U <span class=\"hljs-keyword\">extends</span> T, T&gt; = U;\n\n<span class=\"hljs-comment\">// If the Input type of ChapterMetadataAppToDBSchema is not compatbile with</span>\n<span class=\"hljs-comment\">// output type of ChapterMetadataDBToAppSchema following witness will have a type error</span>\n<span class=\"hljs-keyword\">type</span> _ChapterMetadataWitness1 = <span class=\"hljs-title class_\">ExtendsWitness</span>&lt;\n    z.<span class=\"hljs-property\">TypeOf</span>&lt;<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">ChapterMetadataDBToAppSchema</span>&gt;,\n    <span class=\"hljs-comment\">// Extract input type from ChapterMetadataAppToDBSchema</span>\n    <span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-title class_\">ChapterMetadataAppToDBSchema</span> <span class=\"hljs-keyword\">extends</span> z.<span class=\"hljs-property\">ZodType</span>&lt;<span class=\"hljs-built_in\">any</span>, <span class=\"hljs-built_in\">any</span>, infer <span class=\"hljs-title class_\">TIn</span>&gt;\n        ? <span class=\"hljs-title class_\">TIn</span>\n        : <span class=\"hljs-built_in\">never</span>\n&gt;;</code></pre>\n\n<p>and similarly the other way round.</p>\n",
            "tags": [
                "typescript",
                "zod",
                "ts-sql-query"
            ]
        },
        {
            "id": "https://lorefnon.me/2021/08/08/Vue-composition-api-and-type-safe-graphql-access/",
            "url": "https://lorefnon.me/2021/08/08/Vue-composition-api-and-type-safe-graphql-access/",
            "title": "Vue composition API and type-safe GraphQL access",
            "date_published": "2021-08-07T00:00:00.000Z",
            "content_html": "<h1 id=\"About-setup-script\"><a href=\"#About-setup-script\" class=\"headerlink\" title=\"About setup script\"></a>About setup script</h1><p>The <a href=\"https://v3.vuejs.org/guide/composition-api-introduction.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">vue composition API</a> is pretty cool, esp. with the recent addition of <a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0040-script-setup.md\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">setup script support</a> in <a href=\"https://blog.vuejs.org/posts/vue-3.2.html\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Vue 3.2</a> which drastically reduces unnecessary boilerplate when most of the logic is present in the setup function of the component.</p>\n<p>From the announcement post:</p>\n<blockquote>\n<p><code>&lt;script setup&gt;</code> is a <strong>compile-time syntactic sugar</strong> that greatly improves the ergonomics when using Composition API inside SFCs.</p>\n</blockquote>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span>\n<span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123; ref &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span>\n<span class=\"language-javascript\"></span>\n<span class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> color = <span class=\"hljs-title function_\">ref</span>(<span class=\"hljs-string\">&#x27;red&#x27;</span>)</span>\n<span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;color = color === &#x27;red&#x27; ? &#x27;green&#x27; : &#x27;red&#x27;&quot;</span>&gt;</span>\n    Color is: &#123;&#123; color &#125;&#125;\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span></code></pre>\n\n<h1 id=\"GraphQL-through-Composition-API\"><a href=\"#GraphQL-through-Composition-API\" class=\"headerlink\" title=\"GraphQL through Composition API\"></a>GraphQL through Composition API</h1><p>With <a href=\"https://v4.apollo.vuejs.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">vue-apollo-composable</a> we can use a composable API to access our GraphQL API which can take advantage of above support.</p>\n<p>Lastly, using <a href=\"https://www.graphql-code-generator.com/docs/presets/gql-tag-operations\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">gql-tag-operations-preset</a> we can ensure that we get type-safety while accessing resources over GraphQL.</p>\n<p>This combination works seamlessly and unlike previous codegen based approaches doesn&#39;t require us to manually import types or functions generated from graphql files.</p>\n<p>The rest of this post is primarily an overview of the involved configuration.</p>\n<h1 id=\"Dependencies\"><a href=\"#Dependencies\" class=\"headerlink\" title=\"Dependencies\"></a>Dependencies</h1><p>Currently, my preferred way to get started with Vue project is to scaffold it through vite (<code>yarn create vite</code>) which internally uses the really fast <a href=\"https://github.com/evanw/esbuild\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">esbuild</a> native transpiler.</p>\n<p>Other build tools may require minor adjustment around import aliasing.</p>\n<p>Here is what our package.json looks like:</p>\n<pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span>\n  <span class=\"hljs-attr\">&quot;scripts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span>\n    <span class=\"hljs-attr\">&quot;dev&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;vite&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;build&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;vue-tsc --noEmit &amp;&amp; vite build&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;serve&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;vite preview&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;codegen:graphql&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;yarn run graphql-codegen -c graphql-codegen.yaml&quot;</span>\n  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;dependencies&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span>\n    <span class=\"hljs-attr\">&quot;@apollo/client&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^3.4.5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@graphql-typed-document-node/core&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^3.1.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@vue/apollo-composable&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^4.0.0-alpha.14&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;graphql&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^15.5.1&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;graphql-tag&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^2.12.5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;vue&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^3.0.5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;vue-router&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;4&quot;</span>\n  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;devDependencies&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span>\n    <span class=\"hljs-attr\">&quot;@app/gql&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;link:./src/gql&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@graphql-codegen/cli&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^2.0.1&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@graphql-codegen/gql-tag-operations-preset&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^1.0.1&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@graphql-codegen/typescript-graphql-request&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^4.0.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@vitejs/plugin-vue&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^1.4.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@vue/compiler-sfc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^3.1.5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;typescript&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^4.3.5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;vite&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^2.5.0-beta.1&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;vue-tsc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^0.2.2&quot;</span>\n  <span class=\"hljs-punctuation\">&#125;</span>\n<span class=\"hljs-punctuation\">&#125;</span></code></pre>\n\n<h1 id=\"Configuration-for-graphql-code-generator\"><a href=\"#Configuration-for-graphql-code-generator\" class=\"headerlink\" title=\"Configuration for graphql-code-generator\"></a>Configuration for graphql-code-generator</h1><p>We have a <code>codegen:graphql</code> script configured above, which we can use to generate types for our GraphQL accessors.</p>\n<p>Here is what our <code>graphql-codegen.yaml</code> looks like:</p>\n<pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">schema:</span> <span class=\"hljs-string\">./schema/schema.graphqls</span>\n<span class=\"hljs-attr\">documents:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&#x27;src/**/*.ts&#x27;</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&#x27;src/**/*.vue&#x27;</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&#x27;!src/gql/**/*&#x27;</span>\n<span class=\"hljs-attr\">generates:</span>\n  <span class=\"hljs-string\">./src/schema/generated/graphql.d.ts:</span>\n    <span class=\"hljs-attr\">plugins:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">typescript</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">typescript-operations</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">typescript-graphql-request</span>\n  <span class=\"hljs-string\">./src/gql/:</span>\n    <span class=\"hljs-attr\">preset:</span> <span class=\"hljs-string\">gql-tag-operations-preset</span></code></pre>\n\n<p>From the docs for <a href=\"https://www.graphql-code-generator.com/docs/presets/gql-tag-operations\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">gql-tag-operations-preset</a>:</p>\n<blockquote>\n<p>This preset generates typings for your inline gql function usages, without having to manually specify import statements for the documents. All you need to do is import your gql function and run codegen in watch mode.</p>\n</blockquote>\n<p>Since <code>yarn run</code> forwards our arguments to the underlying scripts, to run the aforementioned watch mode, we can simply run:</p>\n<pre><code class=\"hljs sh\">yarn run codegen:graphql --watch</code></pre>\n\n<p>This will keep scanning our code for usage of graphql queries&#x2F;mutations and generate corresponding types.</p>\n<p>We will look at some examples below.</p>\n<h2 id=\"Import-aliasing\"><a href=\"#Import-aliasing\" class=\"headerlink\" title=\"Import aliasing:\"></a>Import aliasing:</h2><p>The last piece of setup we need to do is configuration for imports.</p>\n<p>This may get simplified in future, but as of this writing this needs to be done in both tsconfig.json (in case you are using typescript,  make typescript compiler &amp; editor tooling happy) and vite config (to make vite happy).</p>\n<p>In <code>tsconfig.json</code>:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-punctuation\">{</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-attr\">&quot;compilerOptions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;target&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;esnext&quot;</span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;module&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;esnext&quot;</span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;moduleResolution&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;node&quot;</span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;strict&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;jsx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;preserve&quot;</span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;sourceMap&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;resolveJsonModule&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;esModuleInterop&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;esnext&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;dom&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">&quot;paths&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">      <span class=\"hljs-attr\">&quot;@app/gql&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./src/gql&quot;</span><span class=\"hljs-punctuation\">]</span>\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-punctuation\">}</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-attr\">&quot;include&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;src/**/*.ts&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;src/**/*.d.ts&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;src/**/*.tsx&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;src/**/*.vue&quot;</span><span class=\"hljs-punctuation\">]</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-punctuation\">}</span>\n</td></tr></table></code></pre>\n\n<p>In <code>vite.config.ts</code>:</p>\n<pre><code class=\"hljs\"><table class=\"hlcode-table\"><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> { defineConfig } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vite&#x27;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@vitejs/plugin-vue&#x27;</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">import</span> { resolve } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;path&quot;</span>;\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-comment\">// https://vitejs.dev/config/</span>\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title function_\">defineConfig</span>({\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-attr\">plugins</span>: [\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-title function_\">vue</span>()\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  ],\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  <span class=\"hljs-attr\">resolve</span>: {\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    <span class=\"hljs-attr\">alias</span>: {\n</td></tr><tr style=\"border:none;background:#fffacd;\" class=\"hlcode-line  hlcode-line-highlight\" ><td style=\"border:none\" class=\"hlcode-code-cell\">      <span class=\"hljs-string\">&quot;@app/gql&quot;</span>: <span class=\"hljs-title function_\">resolve</span>(__dirname, <span class=\"hljs-string\">&quot;./src/gql&quot;</span>)\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">    }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">  }\n</td></tr><tr style=\"border:none;\" class=\"hlcode-line  \" ><td style=\"border:none\" class=\"hlcode-code-cell\">})\n</td></tr></table></code></pre>\n\n<p>What this enables us to do is to import a helper function from <code>@app/gql</code> which we will use to make graphql queries (or perform mutations).</p>\n<p>And the watcher will keep adding overloads to this helper for each of our usage.</p>\n<h1 id=\"Usage-in-application\"><a href=\"#Usage-in-application\" class=\"headerlink\" title=\"Usage in application\"></a>Usage in application</h1><p>Here is what a usage of this helper looks like in our component:</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;pug&quot;</span>&gt;</span>\ndiv(v-if=&quot;loading&quot;)\n  | Loading ...\ndiv(v-else)\n  div(v-if=&quot;result?.currentUser&quot;)\n    | Hello &#123;&#123; result.currentUser.name &#125;&#125;\n  div(v-else)\n    | Not logged in\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;ts&quot;</span> <span class=\"hljs-attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span>\n<span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123; gql &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@app/gql&quot;</span></span>\n<span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123; useQuery &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@vue/apollo-composable&quot;</span></span>\n<span class=\"language-javascript\"></span>\n<span class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> &#123; result, loading &#125; = <span class=\"hljs-title function_\">useQuery</span>(</span>\n<span class=\"language-javascript\">    <span class=\"hljs-title function_\">gql</span>(<span class=\"hljs-comment\">/* GraphQL */</span> <span class=\"hljs-string\">`</span></span>\n<span class=\"hljs-string\"><span class=\"language-javascript\">        query CurrentUserQuery &#123;</span></span>\n<span class=\"hljs-string\"><span class=\"language-javascript\">            currentUser &#123;</span></span>\n<span class=\"hljs-string\"><span class=\"language-javascript\">                name</span></span>\n<span class=\"hljs-string\"><span class=\"language-javascript\">            &#125;</span></span>\n<span class=\"hljs-string\"><span class=\"language-javascript\">        &#125;</span></span>\n<span class=\"hljs-string\"><span class=\"language-javascript\">    `</span>)</span>\n<span class=\"language-javascript\">)</span>\n<span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n\n<p>Note that other than <code>gql</code> we didn&#39;t need to import anything else. And we may get a type error initially, it will quickly disappear once our watcher generates the necessary overloads, and our <code>result</code> and <code>loading</code> variables will be correctly typed as vue refs.</p>\n<p>The result&#39;s value type will be derived from our query and if we update the query, the type will auto-update too.</p>\n<p>And because these are reactive refs, we can directly use them in templates without needing any watchers or cleanup code.</p>\n<p>Lastly, if you are curious, here is what the overloads generated look like:</p>\n<pre><code class=\"hljs typescript\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> graphql <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./graphql&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> documents = &#123;\n    <span class=\"hljs-string\">&quot;query CurrentUserQuery &#123;...&#125;&quot;</span>: graphql.<span class=\"hljs-property\">CurrentUserQueryDocument</span>,\n&#125;;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">gql</span>(<span class=\"hljs-params\">source: <span class=\"hljs-string\">&quot;query CurrentUserQuery &#123;...&#125;&quot;</span></span>): (<span class=\"hljs-keyword\">typeof</span> documents)[<span class=\"hljs-string\">&quot;query CurrentUserQuery &#123;...&#125;&quot;</span>];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">gql</span>(<span class=\"hljs-params\">source: <span class=\"hljs-built_in\">string</span></span>): <span class=\"hljs-built_in\">unknown</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">gql</span>(<span class=\"hljs-params\">source: <span class=\"hljs-built_in\">string</span></span>) &#123;\n  <span class=\"hljs-keyword\">return</span> (documents <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">any</span>)[source] ?? &#123;&#125;;\n&#125;</code></pre>\n\n<p>Not quite pretty :), but usually you never have to peek into this file at all.</p>\n",
            "tags": [
                "Apollo",
                "GraphQL",
                "Vue",
                "TypeScript"
            ]
        },
        {
            "id": "https://lorefnon.me/2020/02/02/conditionally-making-optional-properties-mandatory-in-typescript/",
            "url": "https://lorefnon.me/2020/02/02/conditionally-making-optional-properties-mandatory-in-typescript/",
            "title": "Conditionally making optional properties mandatory in typescript",
            "date_published": "2020-02-02T00:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" href=\"/css/crayon.min.css\" >\n<link rel=\"stylesheet\" href=\"/css/crayon-flatui-light.css\" >\n\n\n\n\t<p>A common case in applications is to work with types where certain properties are nullable. However, it is also common to need derived types of these same types which are stricter around nullablity of properties.</p>\n<p>Let’s imagine a note taking app: We have a <code>Notebook</code> type where <code>id</code> is nullable because unsaved notebooks haven’t been assigned an <code>id</code> yet. However after saving it, we know for a fact that a <code>Notebook</code> instance will have an <code>id</code> and ideally we shouldn’t have to say <code>notebook.id!</code> in the rest of the application.</p>\n<p>So, in this post we will explore a generic way to derive types like <code>SavedNotebook</code> where certain properties are conditionally mapped to non-optional.</p>\n<p><span id=\"more-681\"></span></p>\n<p>TS comes with a <code>NonNullable</code> type, which essentially strips out <code>null</code> and <code>undefined</code> from any type.</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce893c080196261\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce893c080196261-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce893c080196261-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce893c080196261-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce893c080196261-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce893c080196261-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce893c080196261-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">T1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">null</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">undefined</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce893c080196261-3\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">T2</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">NonNullable</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span><span class=\"crayon-h\"> </span><span class=\"crayon-c\">// string</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce893c080196261-4\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0042 seconds] -->\n<p></p>\n<p>We also have <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types\">mapped types</a> that allow us to map over a type and programmatically derive the type for each key.</p>\n<p>So the following makes all values non-nullable:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce894c519604699\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce894c519604699-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce894c519604699-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce894c519604699-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce894c519604699-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce894c519604699-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce894c519604699-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce894c519604699-2\"><span class=\"crayon-e\">export </span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SavedNotebook</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce894c519604699-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">NonNullable</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce894c519604699-4\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce894c519604699-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0011 seconds] -->\n<p></p>\n<p>Now, we can use <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#conditional-types\">conditional types</a> to make only certain values non-nullable:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce8953823116233\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8953823116233-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8953823116233-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8953823116233-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8953823116233-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8953823116233-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8953823116233-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8953823116233-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce8953823116233-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8953823116233-2\"><span class=\"crayon-e\">export </span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SavedNotebook</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8953823116233-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"id\"</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8953823116233-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">NonNullable</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8953823116233-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8953823116233-6\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8953823116233-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0009 seconds] -->\n<p></p>\n<p>Or, a more generic implementation:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce8958257407111\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8958257407111-9\">9</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-2\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">MandateProps</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-e\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">K</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">keyof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-e\">TK </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">keyof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TK </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">K</span><span class=\"crayon-h\"> </span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">NonNullable</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">TK</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">TK</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-6\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-7\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-8\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SavedNotebook</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">MandateProps</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"id\"</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8958257407111-9\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0014 seconds] -->\n<p></p>\n<p>Our <code>SavedNotebook</code> type will effectively be:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce895d989196490\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce895d989196490-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce895d989196490-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce895d989196490-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce895d989196490-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce895d989196490-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce895d989196490-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce895d989196490-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce895d989196490-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce895d989196490-2\"><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce895d989196490-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">number</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce895d989196490-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">name</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">null</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce895d989196490-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">description</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">null</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce895d989196490-6\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce895d989196490-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0011 seconds] -->\n<p></p>\n<p>Looks good! Are we done then ? It turns out, not quite.</p>\n<p>Let’s tweak our <code>Notebook</code> interface a bit:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce8962456978648\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8962456978648-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8962456978648-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8962456978648-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8962456978648-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8962456978648-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8962456978648-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8962456978648-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce8962456978648-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8962456978648-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Notebook</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8962456978648-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">number</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8962456978648-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-r\">name</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8962456978648-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">description</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8962456978648-6\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8962456978648-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0006 seconds] -->\n<p></p>\n<p>We made the properties optional. Our <code>SavedNotebook</code> type will no longer evaluate to what we expect:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce8966800033072\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8966800033072-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8966800033072-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8966800033072-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8966800033072-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8966800033072-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8966800033072-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8966800033072-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce8966800033072-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8966800033072-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SavedNotebook</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8966800033072-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">number</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">undefined</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8966800033072-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-r\">name</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">undefined</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8966800033072-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">description</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">undefined</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8966800033072-6\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8966800033072-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0009 seconds] -->\n<p></p>\n<p>What happened here ? Wasn’t our <code>NonNullable</code> type supposed to take care of <em>both</em> <code>null</code> and <code>undefined</code> ?</p>\n<p>Well, it did, but it turns out typescript treats the following as different cases:</p>\n<ol>\n<li>Whether a key may (or may not) be present in an object type</li>\n<li>Whether the corresponding value may be <code>undefined</code>.</li>\n</ol>\n<p>Mapped types preserve the former, and so our <code>MandateProps</code> is not able to remove the <code>undefined</code> from <code>Notebook[\"id\"]</code>.</p>\n<p>So, what should be do if we do want to make that key mandatory as well ?</p>\n<p>Thankfully typescript allows us to suffix our key with <code>-?</code> while mapping over types to remove optionality.</p>\n<p>But doing that conditionally requires another workaround:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce896b987927910\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce896b987927910-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce896b987927910-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce896b987927910-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce896b987927910-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce896b987927910-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce896b987927910-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce896b987927910-2\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">MandateProps</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-e\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">K</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">keyof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Omit</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">K</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce896b987927910-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-e\">MK </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">K</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">-</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">NonNullable</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">MK</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce896b987927910-4\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce896b987927910-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0012 seconds] -->\n<p></p>\n<p><code>Omit&lt;T, K&gt;</code> retains all the optional keys that we don’t care about and gets rid of the keys that are assignable to <code>K</code>. Then we create another type for the keys which match <code>K</code>, and while mapping over them we make the keys not optional. Intersection of the both gives us a type where all keys that are assignable to <code>K</code> are mandatory.</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce8971862497170\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8971862497170-9\">9</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SavedNotebook</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">MandateProps</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"id\"</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-3\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-4\"><span class=\"crayon-c\">// ^ Is equivalent to:</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-5\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-6\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SavedNotebook</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Pick</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Notebook</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"name\"</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"description\"</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">number</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-8\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8971862497170-9\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0010 seconds] -->\n<p></p>\n<p>This is pretty much what we want. <code>Omit</code> is internally implemented using <code>Pick</code> and typescript is being lazy about <code>Pick</code>.</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce8976911642548\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8976911642548-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8976911642548-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce8976911642548-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce8976911642548-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce8976911642548-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Omit</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">K</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">any</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Pick</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Exclude</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">keyof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">K</span><span class=\"crayon-o\">&gt;&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce8976911642548-3\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0007 seconds] -->\n<p></p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba445ce897b353313842\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba445ce897b353313842-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce897b353313842-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba445ce897b353313842-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba445ce897b353313842-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba445ce897b353313842-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ID</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SavedNotebook</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"id\"</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span><span class=\"crayon-h\"> </span><span class=\"crayon-c\">// number</span></div><div class=\"crayon-line\" id=\"crayon-5fba445ce897b353313842-3\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0004 seconds] -->\n<p></p>\n<p>Voila.</p>\n\n\n\n",
            "tags": [
                "Typescript"
            ]
        },
        {
            "id": "https://lorefnon.me/2019/11/07/typesafe-tuple-hierarchies-in-typescript/",
            "url": "https://lorefnon.me/2019/11/07/typesafe-tuple-hierarchies-in-typescript/",
            "title": "Type-safe tuple hierarchies in TypeScript",
            "date_published": "2019-11-07T00:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" href=\"/css/crayon.min.css\" >\n<link rel=\"stylesheet\" href=\"/css/crayon-flatui-light.css\" >\n\n\n\n\t<p>I have a love-hate relationship with type safety. Type Checkers can be  amazingly powerful tools when they work and yet can be frustrating every now and then when you hit some unsupported edge case.</p>\n<p>Thankfully more and more of these corners are getting eliminated with the hard work that the typescript team has been putting in.</p>\n<p>One such case that was a PITA was support (or lack thereof) for recursive types in TypeScript.</p>\n<p><span id=\"more-638\"></span></p>\n<p>Let’s say you despise XML/JSX and want to express User interface composition as a composition of tuples.</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf48879040309\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf48879040309-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf48879040309-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf48879040309-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf48879040309-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf48879040309-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf48879040309-6\">6</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf48879040309-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf48879040309-2\"><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ui</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf48879040309-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"container\"</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf48879040309-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf48879040309-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf48879040309-6\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0043 seconds] -->\n<p></p>\n<p>if you are coming from any of lisp-family languages you are probably already habituated to s-expressions for composing interfaces. <a href=\"https://github.com/weavejester/hiccup\">Hiccup</a>, for instance, is a cool<br>\ntemplating language that utilizes s-expressions for consize boilerplate-free template composition.</p>\n<p>So, now, how do we make this type safe.</p>\n<p>Lets try the obvious approach:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf6e735348334\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf6e735348334-16\">16</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-2\"><span class=\"crayon-c\">// Registry of tags and supported attributes</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-3\"><span class=\"crayon-c\">// Simplified for brevity</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-4\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementAttrs</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s\">\"span\"</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-9\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-10\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-11\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-12\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-13\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-14\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-15\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf6e735348334-16\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0019 seconds] -->\n<p></p>\n<p>Until the last stable version of typescript this would have failed because recursive type aliases were not well supported. So we’d be greeted with an error:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf76968424678\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf76968424678-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf76968424678-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf76968424678-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf76968424678-1\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-v\">lt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"span\"</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"span\"</span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-v\">gt</span><span class=\"crayon-sy\">;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">any</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf76968424678-2\"><span class=\"crayon-e\">Type </span><span class=\"crayon-i\">alias</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ElementTuple'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">circularly </span><span class=\"crayon-e\">references </span><span class=\"crayon-v\">itself</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf76968424678-3\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0011 seconds] -->\n<p></p>\n<p>Hmm… let us see if we can use utilize the typical trick of using interfaces to work around this:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf7c211814569\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf7c211814569-18\">18</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementAttrs</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-s\">\"span\"</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-9\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-10\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-11\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-12\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-13\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-14\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-15\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-16\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-17\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf7c211814569-18\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0022 seconds] -->\n<p></p>\n<p>This indeed seems to work:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf81046550299\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf81046550299-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf81046550299-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf81046550299-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf81046550299-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf81046550299-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf81046550299-2\"><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> t1:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf81046550299-3\"><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> t2:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"di\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf81046550299-4\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0011 seconds] -->\n<p></p>\n<p>TS complains that the second assignment is not valid because:</p>\n<blockquote><p>\n  Type ‘”di”‘ is not assignable to type ‘”div” | “span”‘.\n</p></blockquote>\n<p>There is a caveat though:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf88200281863\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf88200281863-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf88200281863-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf88200281863-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf88200281863-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf88200281863-2\"><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> t1:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"junk\"</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf88200281863-3\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0007 seconds] -->\n<p></p>\n<p>This passes too !</p>\n<p>Why doesn’t TypeScript complain ? Because our interface just cares about 0|1|2 indexes. If our tuple has other irrelevant things at other indexes, it doesn’t matter – it still satisfies the ElementTuple interface.</p>\n<p>This is a problem for us if we want to support a variable arity tuples for convenience:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf8e227778586\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf8e227778586-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf8e227778586-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf8e227778586-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf8e227778586-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf8e227778586-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf8e227778586-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf8e227778586-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf8e227778586-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf8e227778586-2\"><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-h\"> </span><span class=\"crayon-c\">// Attributes can be skipped if not needed</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf8e227778586-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">10</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf8e227778586-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">]</span><span class=\"crayon-h\"> </span><span class=\"crayon-c\">// Both attributes and children skipped</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf8e227778586-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf8e227778586-6\"><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf8e227778586-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0007 seconds] -->\n<p></p>\n<p>In such cases, typescript’s inference can fallback to type that matches some index and ignore the other indexes (having erroneous values). This can compromise with type safety:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf93566686331\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-19\">19</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-20\">20</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-21\">21</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-22\">22</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-23\">23</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-24\">24</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-25\">25</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-26\">26</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-27\">27</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-28\">28</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-29\">29</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-30\">30</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf93566686331-31\">31</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element1Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-4\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-5\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-6\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-9\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-10\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-11\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementChildren2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-12\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-13\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-14\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-15\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-16\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element3Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-17\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-18\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-19\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-20\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-21\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-22\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-23\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element1Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-24\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-25\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementChildren2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-26\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element3Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-27\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-28\"><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> t:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-29\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-30\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">foo</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"bar\"</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf93566686331-31\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0044 seconds] -->\n<p></p>\n<p>This passes without hiccups ! Why does TypeScript allow random attributes for a div ? Because the nested array can’t match the <code>ElementAttrs2Tuple</code> but can match <code>Element1Tuple</code> so TS doesn’t complain.</p>\n<p>Lets see, if we can do something to restrict the other index positions:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf99905042116\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf99905042116-8\">8</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element3Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">index</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Exclude</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">number</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">0</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">2</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-7\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf99905042116-8\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0031 seconds] -->\n<p></p>\n<p>Nope. This doesn’t work because:</p>\n<blockquote><p>\n  An index signature parameter type cannot be a type alias.\n</p></blockquote>\n<p>Fortunately, there is a simpler solution to this:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467baf9e773358317\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467baf9e773358317-8\">8</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Element3Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-e\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementAttrs</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">3</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-7\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467baf9e773358317-8\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0023 seconds] -->\n<p></p>\n<p>We really just need care about the last position. Because an attempt to create an array literal with anything at index 3 will fail to match Element3Tuple (including undefined, null etc.) So the array size has to match exactly 3.</p>\n<p>We can extend this to the other tuple definitions:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467bafa3489130101\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-19\">19</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-20\">20</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-21\">21</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-22\">22</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-23\">23</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-24\">24</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-25\">25</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-26\">26</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-27\">27</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-28\">28</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-29\">29</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-30\">30</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-31\">31</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-32\">32</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-33\">33</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafa3489130101-34\">34</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element1Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-5\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-6\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-7\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-8\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-9\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-10\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-11\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-12\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-13\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementChildren2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-14\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-15\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-16\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-17\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-18\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-19\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Element2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-20\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-21\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementChildren2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-22\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-23\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element3Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-24\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">0</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-25\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">1</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-26\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-27\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">3</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-28\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-29\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-30\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-31\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element1Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-32\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element2Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-33\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Element3Tuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafa3489130101-34\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0084 seconds] -->\n<p></p>\n<p>Note that the trailing <code>never</code> property has to always be optional otherwise we will end up with a type that is impossible to match.</p>\n<p>The element tuple that we have now is very close to what we wanted. Go ahead, try it out in the <a href=\"http://www.typescriptlang.org/play/?ts=3.6.3&amp;ssl=48&amp;ssc=25&amp;pln=45&amp;pc=1#code/JYOwLgpgTgZghgYwgAgKIBsIFsLgIJhhQDOyA3sgLABQydyARACbABuDAXOTfb8sEwD8XYkVABzHvQC+AGil0GxAA5wQnbrT50Bw5KKgSFyaTVPUaYAJ7KUGbLjAAVOOOQBeZAGsIVgPYwaJg4+IQkANw0NKCQsIh2wY4AjE4ArsqYADxOyBAAHpAgTKT2Ic6uHkEO4C7iAHyavADaAAwAulxOkVp0TUlteiAQrNDd5tHg0PBIVWUERMQATGkZENm5BbjFs461laW7rg1kxq0dyF2n-VwHoQtNTm3dzYsDXEMjUGNR1DFT8TtwABhAAWwHQTCguGW6SyOXyhW2t3Kbk8yNqx1O7U6z3ofXO6NhECaT1Or0Gw1GZh+1lsgLAMNW6wRWxKiRqFTR7JRDXcxgAPvT5iRGXC6gL6aDwZDoSsxd0JrFpglqmAAMxytbwzZFNmqvZc-VHRp47EXXG9a5CsLEB6knrIJqvG7czUki2OtVvZAfKnUcbUWkqsqa5k6pGuzn0jEeCXIlJE7Lih2C5GirXJ3ip7kaxNOZM0BB+ECiZBgF36omxh1NZhsBiyR3GZp19iNigCLgMABGcCgDBMjaaze0jtbDDak8n4SAA\">playground</a>:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467bafab482024145\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafab482024145-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafab482024145-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafab482024145-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafab482024145-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafab482024145-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467bafab482024145-1\"><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> t:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafab482024145-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafab482024145-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"bar\"</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafab482024145-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-s\">\"div\"</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafab482024145-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0016 seconds] -->\n<p></p>\n<p>While this may be cool if you like fiddling around the edges of type systems, we have to admit that though we worked around the limitations of typescript, what we ended up with is neither elegant nor intuitive.</p>\n<p>However, with TypeScript 3.7, these workarounds are no longer needed ! Recursive types are fully supported now. This means, we can simply do:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4467bafb2135116150\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafb2135116150-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafb2135116150-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafb2135116150-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafb2135116150-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafb2135116150-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafb2135116150-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4467bafb2135116150-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4467bafb2135116150-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4467bafb2135116150-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTag</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafb2135116150-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafb2135116150-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafb2135116150-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafb2135116150-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementAttrs</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ElementTuple</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4467bafb2135116150-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0045 seconds] -->\n<p></p>\n<p>Cool, consize and minimal. Works <a href=\"http://www.typescriptlang.org/play/?ssl=21&amp;ssc=25&amp;pln=1&amp;pc=1#code/JYOwLgpgTgZghgYwgAgKIBsIFsLgIJhhQDOyA3sgLABQydyARACbABuDAXOTfb8sEwD8XYkVABzHvQC+AGil0GxAA5wQnbrT50Bw5KKgSFyaTVPUaYAJ7KUGbLjAAVOOOQBeZAGsIVgPYwaJg4+IQkANw0ljZ2wY5OAK7KmAA8TsgQAB6QIEyk9iHOrh5BDuAu4gB8HsYAPsgA2k4AunWNTrKlhQRExE3NrVp09U2dBfFJmA0DbaNdjj0k-WNx5ZMQ082RFtQIfiCiyGBc42vJKO7GDcxsDJ0NxrzXLOydFAJcDABGcFAMJvdHtpGjd2ANweEgA\">too</a> !</p>\n\n\n    ",
            "tags": [
                "Typescript"
            ]
        },
        {
            "id": "https://lorefnon.me/2019/08/18/deriving-interfaces-from-classes-in-typescript/",
            "url": "https://lorefnon.me/2019/08/18/deriving-interfaces-from-classes-in-typescript/",
            "title": "Deriving interfaces from classes in TypeScript",
            "date_published": "2019-08-18T00:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" href=\"/css/crayon.min.css\" >\n<link rel=\"stylesheet\" href=\"/css/crayon-flatui-light.css\" >\n\n\n\n\t<p>Most object oriented programming languages encourage the pattern of <a class=\"wp-editor-md-post-content-link\" href=\"https://tuhrig.de/programming-to-an-interface/\">Programming to an interface</a>. TypeScript supports this of course, you can create one or more interfaces, and then define classes (or factories) that generate instances of this interface.</p>\n<p>However, as the linked article above points out, programming to an interface is sometimes overused when the programmer anticipates the possibility of multiple concrete implementations in future although there may exist just one at the time of implementation.</p>\n<p>But, until these multiple implementations are actually required, these single-implementation interfaces continue to increase maintenance overhead, because every time we need to introduce a new member, we need to modify two places. Sure, the tooling helps with this but it still not ideal.</p>\n<p>Also, relying on just the concrete implementation is not ideal because TypeScript compiler service doesn’t yet have a good mechanism to bulk-replace all usage of a concrete implementation with the corresponding interface should we need multiple implementations in future.</p>\n<p>So, in this post we explore two features of typescript that may help us with this.<br>\n<span id=\"more-622\"></span></p>\n<h1>Interfaces derived from classes</h1>\n<p>A lesser known feature of TypeScript is that interfaces can be derived from classes.</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4468f1d79369408977\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d79369408977-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d79369408977-2\">2</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4468f1d79369408977-1\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SyncBackend</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">FSSyncBackend</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d79369408977-2\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0026 seconds] -->\n<p></p>\n<p>It may seem like a no-brainer that this is a solution for our use case. But there is an important caveat: All private/protected members of the implementation are exposed in the derived interface.</p>\n<p>If you are surprised by this, you wouldn’t be alone. I found it highly counter-intuitive when I encountered it first, but the rationale behind this is explained in the <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/interfaces.html\">official docs</a>:</p>\n<blockquote><p>\n  When an interface type extends a class type it inherits the members of the class but not their implementations. It is as if the interface had declared all of the members of the class without providing an implementation. Interfaces inherit even the private and protected members of a base class. This means that when you create an interface that extends a class with private or protected members, that interface type can only be implemented by that class or a subclass of it.</p>\n<p>  This is useful when you have a large inheritance hierarchy, but want to specify that your code works with only subclasses that have certain properties. The subclasses don’t have to be related besides inheriting from the base class.\n</p></blockquote>\n<p>So, that is all good, but if we want just the public members, what do we do ?<br>\nThankfully a simple solution exists:</p>\n<h1>Using Mapped types</h1>\n<p>We can use <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html\">mapped types</a> derived from public members of a type.</p>\n<p>Since a class definition is implicitly a type definition, this works well for classes too:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4468f1d87855263947\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d87855263947-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d87855263947-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d87855263947-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d87855263947-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4468f1d87855263947-1\"><span class=\"crayon-e\">export </span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SyncBackend</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d87855263947-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-i\">K</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">FSSyncBackend</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">FSSyncBackend</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">K</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d87855263947-3\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d87855263947-4\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0007 seconds] -->\n<p></p>\n<p>Now <code>SyncBackend</code> type will have only public members of <code>FSSyncBackend</code> class.</p>\n<p>While for most uses this solves our purpose, but if we strictly need an interface &amp; not an alias (perhaps to improve type error messages), we can simply define an interface that extends from this alias:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4468f1d8b787760405\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d8b787760405-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d8b787760405-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d8b787760405-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d8b787760405-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d8b787760405-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4468f1d8b787760405-6\">6</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4468f1d8b787760405-1\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SyncBackend</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d8b787760405-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">[</span><span class=\"crayon-i\">K</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">FSSyncBackend</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">FSSyncBackend</span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">K</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d8b787760405-3\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d8b787760405-4\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d8b787760405-5\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SyncBackend</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SyncBackend</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4468f1d8b787760405-6\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0009 seconds] -->\n<p></p>\n<p>Eventually if we do need multiple implementations, we can choose to either have an explicitly defined interface or keep one implementation as the canonical implementation, derive the interface from it and make the other implementations comply to that.</p>\n<p>I usually resort to the latter when the other implementations are not for public consumption and exist just for stubbing in test cases.</p>\n<p>If multiple implementations are actually exposed then the former solution (explicitly defined interface) helps with separating the API documentation of the interface from the documentation of individual implementations.</p>\n\n\n    ",
            "tags": [
                "Typescript"
            ]
        },
        {
            "id": "https://lorefnon.me/2019/08/15/dealing-with-circular-type-references-in-mobx-state-tree/",
            "url": "https://lorefnon.me/2019/08/15/dealing-with-circular-type-references-in-mobx-state-tree/",
            "title": "Dealing with circular type references in Mobx-state-tree",
            "date_published": "2019-08-15T00:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" href=\"/css/crayon.min.css\" >\n<link rel=\"stylesheet\" href=\"/css/crayon-flatui-light.css\" >\n\n\n\n\t<p>A frequently occuring issue when creating interrelated MST models, is that of circular type references.</p>\n<p>Usually we don’t don’t have to explicitly define interfaces for our models, because they can be inferred for us through the APIs exposed by MST. However, when defining models that depend on each other, this falls short because TypeScript’s type-inference is not good enough to circular dependencies.</p>\n<p>For example, lets say we have a note taking application with <code>Snippet</code> and <code>Annotation</code> models. A <code>Snippet</code> can have many <code>Annotation</code>s and every <code>Annotation</code> belongs to exactly one <code>Snippet</code>.</p>\n<p>Our first stab might be something like this:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9a9679920934\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-19\">19</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-20\">20</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-21\">21</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-22\">22</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9a9679920934-23\">23</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-2\"><span class=\"crayon-c\">// models/Snippet.ts</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-3\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-4\"><span class=\"crayon-e\">import</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">types </span><span class=\"crayon-st\">as</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">t</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"mobx-state-tree\"</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-5\"><span class=\"crayon-e\">import</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">v4 </span><span class=\"crayon-st\">as</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">uuid</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"uuid\"</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-6\"><span class=\"crayon-e\">import</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">Annotation</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"./Annotation\"</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-7\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-8\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">model</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"Snippet\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-9\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">optional</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">identifier</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">uuid</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-10\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">array</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-11\"><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-12\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-13\"><span class=\"crayon-c\">// models/Annotation.ts</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-14\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-15\"><span class=\"crayon-e\">import</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">types </span><span class=\"crayon-st\">as</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">t</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"mobx-state-tree\"</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-16\"><span class=\"crayon-e\">import</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">v4 </span><span class=\"crayon-st\">as</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">uuid</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"uuid\"</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-17\"><span class=\"crayon-e\">import</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">Snippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">from</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"./Snippet\"</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-18\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-19\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">model</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"Annotation\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-20\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">optional</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">identifier</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">uuid</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-21\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">snippet</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">reference</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-22\"><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9a9679920934-23\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0073 seconds] -->\n<p></p>\n<p>However, this will not work out well because of the aforementioned issue with circular dependency, and we will get following error:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9bd558713277\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9bd558713277-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9bd558713277-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9bd558713277-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9bd558713277-1\"><span class=\"crayon-s\">'Snippet'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">implicitly </span><span class=\"crayon-e\">has </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'any'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">because </span><span class=\"crayon-e\">it </span><span class=\"crayon-e\">does </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">have</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">a</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">type </span><span class=\"crayon-e\">annotation </span><span class=\"crayon-st\">and</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">referenced </span><span class=\"crayon-e\">directly </span><span class=\"crayon-st\">or</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">indirectly </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">its </span><span class=\"crayon-e\">own </span><span class=\"crayon-v\">initializer</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9bd558713277-2\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9bd558713277-3\"><span class=\"crayon-s\">'Annotation'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">implicitly </span><span class=\"crayon-e\">has </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'any'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">because </span><span class=\"crayon-e\">it </span><span class=\"crayon-e\">does </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">have</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">a</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">type </span><span class=\"crayon-e\">annotation </span><span class=\"crayon-st\">and</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">referenced </span><span class=\"crayon-e\">directly </span><span class=\"crayon-st\">or</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">indirectly </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">its </span><span class=\"crayon-e\">own </span><span class=\"crayon-v\">initializer</span><span class=\"crayon-sy\">.</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0014 seconds] -->\n<p></p>\n<p>We would want to resolve this, but at the same time, use the automatic inference as much as possible so we don’t have to define the entire model type ourselves.</p>\n<p>MST allows us to define our models in multiple stages:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9c3787886264\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c3787886264-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c3787886264-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c3787886264-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c3787886264-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c3787886264-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c3787886264-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c3787886264-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c3787886264-1\"><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">model</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"Snippet\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c3787886264-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">optional</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">identifier</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">uuid</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c3787886264-3\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c3787886264-4\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c3787886264-5\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1.props</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c3787886264-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">array</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c3787886264-7\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0019 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>This split is not arbitrary. While we haven’t quite solved the problem yet, but we note that for <code>Snippet$1</code> our model types can be inferred as there are no circular references there.</p>\n<p>The idea is to augment the inferred type of <code>Snippet$1</code> model with a manual specification of types of attributes which cause circular reference.</p>\n<p>Before we start on that, lets take a step back and reflect on following two facts we can leverage:</p>\n<ol>\n<li>TypeScript interfaces can have circular references. While inferred types and type aliases are eager resolved (atleast as of this writing), interfaces can have mutual dependencies.<p></p>\n</li>\n<li>\n<p>The type of an MST model is <code>IType&lt;ISnapshotInType, ISnapshotOutType, IInstanceType&gt;</code> where:</p>\n<ol>\n<li><code>ISnapshotInType</code> is what we can pass to <code>Model.create</code>.</li>\n<li><code>ISnapshotOutType</code> is what we get back in <code>onSnapshot</code> hook.</li>\n<li><code>IInstanceType</code> is the type of the model instances.</li>\n</ol>\n</li>\n</ol>\n<p>So for our case, if we were not using MST, we would have defined an <code>ISnippet</code> interface something like:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9c9118492127\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c9118492127-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c9118492127-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c9118492127-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9c9118492127-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c9118492127-1\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c9118492127-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c9118492127-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9c9118492127-4\"><span class=\"crayon-sy\">&#125;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0006 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>We can still do that, but the idea of this post is to avoid duplication of type definitions as much as possible because in real applications we would have many more attributes, and we wouldn’t want to keep them in sync across MST models and manually defined instance types.</p>\n<p>If you are wondering why <code>ISnapshotInType</code> and <code>ISnapshotOutType</code> can be different, the answer is right there above. Our model has id as an optional attribute with a factory function for supplying default values. So in our <code>ISnapshotInType</code> for Snippet (lets call it <code>ISnippetSnapshotIn</code>), id will be optional, but in the outgoing snapshot type it will always be present.</p>\n<p>MST also supports <a class=\"wp-editor-md-post-content-link\" href=\"https://github.com/mobxjs/mobx-state-tree#lifecycle-hooks-for-typesmodel\">pre-process and post-process hooks</a> and when using them our incoming and outgoing snapshot types will often diverge.</p>\n<p>MST also allows us to extract<sup><a href=\"#extract-types\" id=\"extract-types-back\">[1]</a></sup> out the Snapshot types and Instance types for cases where inference is possible.</p>\n<p>So <code>Instance&lt;typeof Snippet$1&gt;</code> gives us the Instance type of <code>Snippet$1</code> model which is basically <code>&#123; id: string &#125;</code>.<br>\nSimilarly we can extract out <code>SnapshotIn&lt;typeof Snippet$1&gt;</code> and <code>SnapshotOut&lt;typeof Snippet$1&gt;</code> which are the incoming and outgoing snapshot types respectively.</p>\n<p>So, armed with above insights, lets us augment the extracted types from <code>Snippet$1</code> with the additional attributes we need for our <code>Snippet</code> model:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9cf416703410\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-19\">19</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-20\">20</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9cf416703410-21\">21</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-1\"><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">model</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"Snippet\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">optional</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">identifier</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">uuid</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-3\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-4\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-5\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Instance</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotation</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-7\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-8\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-9\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippetSnapshotIn</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotIn</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-10\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationSnapshotIn</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-11\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-12\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-13\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippetSnapshotOut</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotOut</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-14\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationSnapshotOut</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-15\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-16\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-17\"><span class=\"crayon-e\">export </span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ISnippetRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IType</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">ISnippetSnapshotIn</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ISnippetSnapshotOut</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ISnippet</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-18\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-19\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> Snippet:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ISnippetRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1.props</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-20\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">array</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9cf416703410-21\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0041 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>Similarly, for <code>Annotation</code>:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9d5863581117\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-19\">19</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-20\">20</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9d5863581117-21\">21</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-1\"><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">model</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"Annotation\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">optional</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">identifier</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">uuid</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-3\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-4\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-5\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotation</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Instance</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Annotation</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">snippet</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">ISnippet</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-7\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-8\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-9\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotationSnapshotIn</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotIn</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Annotation</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-10\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">snippet</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ReferenceIdentifier</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-11\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-12\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-13\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotationSnapshotOut</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotOut</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Annotation</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-14\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">snippet</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ReferenceIdentifier</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-15\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-16\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-17\"><span class=\"crayon-e\">export </span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">IAnnotationRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IType</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">IAnnotationSnapshotIn</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationSnapshotOut</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotation</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-18\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-19\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> Annotation:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1.props</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-20\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">snippet</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">reference</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9d5863581117-21\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0033 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>This solves our problem and we can conclude here, but I wanted to take this opportunity to highlight a potential caveat with the above implementation.</p>\n<p>Let’s say we decide to add a <code>title</code> field to our <code>Snippet</code> model, and we accidentally add it to <code>Snippet</code>:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9db958078312\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9db958078312-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9db958078312-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9db958078312-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9db958078312-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9db958078312-1\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> Snippet:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ISnippetRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1.props</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9db958078312-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">array</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9db958078312-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">title</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9db958078312-4\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0010 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>Because we aren’t using the inferred type from <code>Snippet</code> and we haven’t manually updated the types of <code>ISnippet</code>, <code>ISnippetSnapshotIn</code> and <code>ISnippetSnapshotOut</code>, we will run into an error when we try to create a snippet with a title:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9e0705144719\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9e0705144719-1\">1</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9e0705144719-1\"><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">snippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">create</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">&#123;</span><span class=\"crayon-v\">title</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"foo\"</span><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>Above code fails with:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9e5319533974\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9e5319533974-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9e5319533974-2\">2</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9e5319533974-1\"><span class=\"crayon-e\">Argument </span><span class=\"crayon-e\">of </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'&#123; title: string; &#125;'</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">assignable </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">parameter </span><span class=\"crayon-e\">of </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ISnippetSnapshotIn'</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9e5319533974-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-t\">Object</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">literal </span><span class=\"crayon-e\">may </span><span class=\"crayon-e\">only </span><span class=\"crayon-e\">specify </span><span class=\"crayon-e\">known </span><span class=\"crayon-v\">properties</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">and</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'title'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">does </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">exist </span><span class=\"crayon-st\">in</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ISnippetSnapshotIn'</span><span class=\"crayon-sy\">.</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0010 seconds] -->\n<p></p>\n<p>So, yeah we have type-safety and the type-error points us to the correct direction but we got that error only after we tried to instantiate <code>Snippet</code> with a title and nothing before then.</p>\n<p>One might wonder what if we could make such a mistake impossible to make in the first place.</p>\n<p>The solution, as <a class=\"wp-editor-md-post-content-link\" href=\"https://stackoverflow.com/questions/47124309/how-to-declaratively-enforce-compatibility-of-types\">suggested</a> by SO user <a class=\"wp-editor-md-post-content-link\" href=\"https://stackoverflow.com/users/2887218/jcalz\">jcalz</a> is through witness types which exist solely to check compatibility of types:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9ea404796817\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ea404796817-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ea404796817-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ea404796817-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ea404796817-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ea404796817-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ExtendsWitness</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-i\">U</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">U</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ea404796817-3\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p>Now to take advantage of the <code>ExtendsWitness</code> we can update our <code>Snippet</code> model such that instead of specifying the type of <code>Snippet</code> we just explicitly substitute the parts causing circular dependency with <code>any</code>:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9ef551857959\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ef551857959-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ef551857959-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ef551857959-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ef551857959-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ef551857959-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ef551857959-6\">6</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ef551857959-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ef551857959-2\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1.props</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ef551857959-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">array</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">any</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ef551857959-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">title</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ef551857959-5\"><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ef551857959-6\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0010 seconds] -->\n<p></p>\n<p>We don’t have a type error because the function passed to <code>t.late</code> explicitly returns <code>any</code>.</p>\n<p>Now, lets define witness types for the types extracted from <code>Snippet</code> (which is possible because our use of <code>any</code> has eliminated the circular dependency issue):</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9f4092753155\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9f4092753155-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9f4092753155-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9f4092753155-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9f4092753155-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9f4092753155-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9f4092753155-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">_ISnippetSnapshotInWitness</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ExtendsWitness</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">ISnippetSnapshotIn</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SnapshotIn</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-o\">&gt;&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9f4092753155-3\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">_ISnippetSnapshotOutWitness</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ExtendsWitness</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">ISnippetSnapshotOut</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SnapshotOut</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-o\">&gt;&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9f4092753155-4\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p>Our compiler will now start complaining about that title:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9f9320088353\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9f9320088353-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9f9320088353-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9f9320088353-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9f9320088353-1\"><span class=\"crayon-i\">Type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ISnippetSnapshotOut'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">does </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">satisfy </span><span class=\"crayon-e\">the </span><span class=\"crayon-i\">constraint</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ModelSnapshotType&lt;{ id: IOptionalIType&lt;ISimpleType&lt;string&gt;, [undefined]&gt;; } &amp; { annotations: IArrayType&lt;any&gt;; title: ISimpleType&lt;string&gt;; }&gt;'</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9f9320088353-2\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9f9320088353-3\"><span class=\"crayon-i\">Type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ISnippetSnapshotOut'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">does </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">satisfy </span><span class=\"crayon-e\">the </span><span class=\"crayon-i\">constraint</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ModelSnapshotType&lt;{ id: IOptionalIType&lt;ISimpleType&lt;string&gt;, [undefined]&gt;; } &amp; { annotations: IArrayType&lt;any&gt;; title: ISimpleType&lt;string&gt;; }&gt;'</span><span class=\"crayon-sy\">.</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p>Note that the order of types here is important, because <code>ExtendsWitness&lt;SnapshotIn&lt;typeof Snippet&gt;, ISnippetSnapshotIn&gt;</code> will happily pass. We need to ensure that what we are extracting after any-substitution remains a subtype of what we are declaring as our final type.</p>\n<p>The reported errors will go away when we move our title from <code>Snippet</code> to <code>Snippet$1</code>:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3b9ff939225499\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3b9ff939225499-8\">8</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-1\"><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">model</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"Snippet\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">optional</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">identifier</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">uuid</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">title</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-4\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-5\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-6\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1.props</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-7\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">array</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">any</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3b9ff939225499-8\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0018 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>If we define a similar witness type for <code>ISnippet</code> we will encounter another error:</p>\n<p><code>type _ISnippetWitness = ExtendsWitness<isnippet, instance<typeof=\"\" snippet=\"\">&gt;;</isnippet,></code></p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3ba04228311725\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba04228311725-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba04228311725-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba04228311725-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba04228311725-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba04228311725-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3ba04228311725-1\"><span class=\"crayon-i\">Type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ISnippet'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">does </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">satisfy </span><span class=\"crayon-e\">the </span><span class=\"crayon-i\">constraint</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ModelInstanceTypeProps&lt;&#123; id: IOptionalIType&lt;ISimpleType&lt;string&gt;, [undefined]&gt;; title: ISimpleType&lt;string&gt;; &#125; &amp; &#123; annotations: IArrayType&lt;any&gt;; &#125;&gt; &amp; IStateTreeNode&lt;IModelType&lt;&#123; id: IOptionalIType&lt;ISimpleType&lt;string&gt;, [...]&gt;; title: ISimpleType&lt;...&gt;; &#125; &amp; &#123; ...; &#125;, &#123;&#125;, _NotCustomized, _NotCustomized&gt;&gt;'</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba04228311725-2\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-i\">Type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ISnippet'</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">assignable </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'ModelInstanceTypeProps&lt;&#123; id: IOptionalIType&lt;ISimpleType&lt;string&gt;, [undefined]&gt;; title: ISimpleType&lt;string&gt;; &#125; &amp; &#123; annotations: IArrayType&lt;any&gt;; &#125;&gt;'</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba04228311725-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-e\">Types </span><span class=\"crayon-e\">of </span><span class=\"crayon-m\">property</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'annotations'</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">are </span><span class=\"crayon-v\">incompatible</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba04228311725-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-i\">Type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'IAnnotation[]'</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">not</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">assignable </span><span class=\"crayon-st\">to</span><span class=\"crayon-h\"> </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'IMSTArray&lt;any&gt; &amp; IStateTreeNode&lt;IArrayType&lt;any&gt;&gt;'</span><span class=\"crayon-sy\">.</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba04228311725-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-i\">Type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'IAnnotation[]'</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">missing </span><span class=\"crayon-e\">the </span><span class=\"crayon-e\">following </span><span class=\"crayon-e\">properties </span><span class=\"crayon-e\">from </span><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">'IMSTArray&lt;any&gt;'</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">spliceWithArray</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">observe</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">intercept</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">clear</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">and</span><span class=\"crayon-h\"> </span><span class=\"crayon-cn\">4</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">more</span><span class=\"crayon-sy\">.</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-cn\">2344</span><span class=\"crayon-sy\">]</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0020 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>This happens because our manually defined instance type <code>ISnippet</code> uses a plain array where in the instance we would actually have an <code>IMSTArray</code> which <a class=\"wp-editor-md-post-content-link\" href=\"https://en.wikipedia.org/wiki/Duck_typing\">quacks like</a> an array, but is also MST aware (handles references, snapshot types etc.) and obsevervable.</p>\n<p>So we can update our <code>ISnippet</code> implementation to use an <code>IMSTArray</code>:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3ba0b862130930\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba0b862130930-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba0b862130930-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba0b862130930-3\">3</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3ba0b862130930-1\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Instance</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba0b862130930-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IMSTArray</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">IAnnotationRunType</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba0b862130930-3\"><span class=\"crayon-sy\">&#125;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>So the witnesses potentially safeguards against hard(-er) to debug errors at invocation sites by identifying them close to the definition site itself.</p>\n<p>However, when we added witness types we removed our augmented type annotation from Snippet (<code>export const Snippet: ISnippetRunType = ...</code> to <code>export const Snippet = ...</code>). While this enabled us to add witnesses for the types derived from <code>Snippet</code>, these derived types have strictly less information than <code>ISnippetRunType</code> and so when exporting we would want to export a model of type <code>ISnippetRunType</code>:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3ba10153273011\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-19\">19</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-20\">20</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-21\">21</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-22\">22</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba10153273011-23\">23</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-1\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippet</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Instance</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IMSTArray</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">IAnnotationRunType</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-3\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-4\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-5\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippetSnapshotIn</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotIn</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-6\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-sy\">?</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationSnapshotIn</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-7\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-8\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-9\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippetSnapshotOut</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotOut</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-10\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationSnapshotOut</span><span class=\"crayon-sy\">[</span><span class=\"crayon-sy\">]</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-11\"><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-12\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-13\"><span class=\"crayon-e\">export </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippetRunType </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IType</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">ISnippetSnapshotIn</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ISnippetSnapshotOut</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">ISnippet</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-14\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-15\"><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">2</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">1.props</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-16\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">annotations</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-t\">array</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-17\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-18\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-19\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">_ISnippetSnapshotInWitness</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ExtendsWitness</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">ISnippetSnapshotIn</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SnapshotIn</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-o\">&gt;&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-20\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">_ISnippetSnapshotOutWitness</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ExtendsWitness</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">ISnippetSnapshotOut</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">SnapshotOut</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-o\">&gt;&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-21\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">_ISnippetWitness</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ExtendsWitness</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">ISnippet</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Instance</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-o\">&gt;&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-22\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba10153273011-23\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> Snippet:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ISnippetRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">$</span><span class=\"crayon-cn\">2</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0039 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>Note that we have also replaced the previous type alias (ISnippetRunType) with an interface which we can use as the return types of <code>t.late</code> (because interfaces can have cyclic dependencies).</p>\n<p>We could do exactly the same thing for <code>Annotation.ts</code>, but we can do better.</p>\n<p>We can further take advantage of the fact that interfaces can have cyclic-dependencies to reduce the boilerplate in <code>Annotation.ts</code> to the extent that we won’t even need the intermediate type <code>Annotation$1</code>:</p>\n<p><code></code></p><code>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba446a3ba17417090421\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums \" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba446a3ba17417090421-12\">12</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-1\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Annotation</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">model</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"Annotation\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-2\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">id</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">optional</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">identifier</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">uuid</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">snippet</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">reference</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">t</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">late</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">(</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">ISnippetRunType</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Snippet</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-4\"><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-5\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-6\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotation</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Instance</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Annotation</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#125;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-7\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-8\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotationSnapshotIn</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotIn</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Annotation</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-9\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-10\"><span class=\"crayon-e\">export</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotationSnapshotOut</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">SnapshotOut</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-r\">typeof</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Annotation</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#125;</span></div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-11\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba446a3ba17417090421-12\"><span class=\"crayon-e\">export </span><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotationRunType </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IType</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">IAnnotationSnapshotIn</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">IAnnotationSnapshotOut</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">IAnnotation</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#123;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">&#125;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0055 seconds] -->\n<p></p>\n</code><p><code></code></p>\n<p>Obviously we can’t do this for both <code>Snippet</code> and <code>Annotation</code> because TypeScript will not allow us to define a type such that its definition will use itself.</p>\n<p>So with this, we are finally done 🖖.</p>\n<hr>\n<p><sup><a href=\"#extract-types-back\" id=\"extract-types\">[1]</a></sup> My <a class=\"wp-editor-md-post-content-link\" href=\"/2018/07/18/unwrapping-composite-types-in-typescript/\">post on unwrapping composite types</a> goes into more detail around TypeScript features that enable us to extract out types of members of a composite type.</p>\n<p>PS: You’d note that we had to write quite a bit of boilerplate to ensure type-safety. I am writing an inline code-generator called <a class=\"wp-editor-md-post-content-link\" href=\"https://github.com/lorefnon/InGenR\">InGenR</a> that helps with automating this kind of thing using code-generation. If this interests you I’d be more than happy to receive feedback and contributions.</p>\n\n\n    ",
            "tags": [
                "Typescript",
                "MobX",
                "MobX-State-Tree"
            ]
        },
        {
            "id": "https://lorefnon.me/2019/08/11/enforcing-runtime-validations-at-compile-time-in-typescript/",
            "url": "https://lorefnon.me/2019/08/11/enforcing-runtime-validations-at-compile-time-in-typescript/",
            "title": "Enforcing runtime validations at compile time in TypeScript",
            "date_published": "2019-08-11T00:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" href=\"/css/crayon.min.css\" >\n<link rel=\"stylesheet\" href=\"/css/crayon-flatui-light.css\" >\n\n\n\n\t<p>The title may sound something like an oxymoron, so perhaps some clarification is needed.</p>\n<p>I freqently deal with operations against databases. When I mention that I increasingly prefer using a functional style, in particular, using a query builder directly as opposed to an ORM – one of the primary concerns brought up by people is that ORMs can ensure that data validations are performed for every operation that performs a mutation against the data source.</p>\n<p>This post is not much of a rant against ORMs. It is a practical outline of how we can utilize types to ensure (at compile time) that our data access layer only allows validated data. Even if the actual validation happens at runtime.</p>\n<p><span id=\"more-582\"></span></p>\n<p>Let’s say we have a <code>User</code> type:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174ce777419878\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174ce777419878-6\">6</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">User</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">name</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">email</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-5\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174ce777419878-6\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0027 seconds] -->\n<p></p>\n<p>Now assume that we have a function <code>enrollUser</code> where we only want to allow valid users. If our function takes a <code>User</code> object:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174da405233932\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174da405233932-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-2\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">enrollUser</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">async</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">User</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-c\">// ... enrollment logic</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-4\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174da405233932-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p>In the above, it is possible for this function to be called with either a valid or an invalid user and it is up to consumers invoking this function to ensure that this is called after validating, which can be error prone in larger applications.</p>\n<p>So, lets try to enforce at the type level that this function will only consume valid users. We can do something like:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174de983989256\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174de983989256-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-2\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">_isValid</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-3\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-4\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">enrollUser</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">User</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-c\">// ... enrollment logic</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-6\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174de983989256-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0010 seconds] -->\n<p></p>\n<p>Now, our validator functions will have to tell the compiler that a user is indeed valid:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174e2193180767\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e2193180767-7\">7</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-2\"><span class=\"crayon-e\">export </span><span class=\"crayon-m\">const</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">validateUser</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">User</span><span class=\"crayon-sy\">)</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">user </span><span class=\"crayon-st\">is</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">User</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">!</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">email</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">||</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">!</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">email</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">match</span><span class=\"crayon-sy\">(</span><span class=\"crayon-o\">/</span><span class=\"crayon-o\">^</span><span class=\"crayon-sy\">\\</span><span class=\"crayon-v\">S</span><span class=\"crayon-o\">+</span><span class=\"crayon-sy\">@</span><span class=\"crayon-sy\">\\</span><span class=\"crayon-v\">S</span><span class=\"crayon-o\">+</span><span class=\"crayon-sy\">$</span><span class=\"crayon-o\">/</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-st\">return</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">false</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-c\">// (Don't use that regex in real applications).</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-5\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-st\">return</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-6\"><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e2193180767-7\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0014 seconds] -->\n<p></p>\n<p><code>validateUser</code> here acts as <a class=\"wp-editor-md-post-content-link\" href=\"https://basarat.gitbooks.io/typescript/docs/types/typeGuard.html\">type-guard</a> telling the compiler if the user complies to <code>Valid&lt;User&gt;</code> type.</p>\n<p>So, now if we try to invoke enrollUser with a user that has not been validated we will get an error:</p>\n<p><img src=\"/wp-content/uploads/2019/08/enrolluser.png\" alt=\"\"></p>\n<p>But if we validate it first, the error goes away:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174e5655426667\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e5655426667-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-2\"><span class=\"crayon-st\">if</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">(</span><span class=\"crayon-e\">validateUser</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">)</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-e\">enrollUser</span><span class=\"crayon-sy\">(</span><span class=\"crayon-v\">user</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-4\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e5655426667-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p>There is one caveat with this approach though:</p>\n<p>Our type-guard is lying to the compiler and the compiler believes that lie unconditionally:</p>\n<p><img src=\"/wp-content/uploads/2019/08/userisvalidproperty.png\" alt=\"\"></p>\n<p>Here TypeScript is telling us that we have an <code>_isValid</code> property in user but that is not exactly true, because that property will not be present at runtime. So if someone comes to rely on a runtime check on that property, the check will fail at runtime. So effectively we have traded possibility of one runtime fault for another.</p>\n<p>We can do a couple of things to prevent this. The obvious one is to actually have a <code>_isValid</code> property in the object. Or to wrap the type of objects being validated (so that the primary record type can be directly serialized):</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174e8354605648\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174e8354605648-9\">9</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Validated</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TValid</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">boolean</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-3\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">target</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-4\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">isValid</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TValid</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-5\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-6\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-7\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Validated</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-8\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Invalid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Validated</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TTarget</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">false</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174e8354605648-9\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0015 seconds] -->\n<p></p>\n<p>However, ff we don’t want any runtime overhead at all, instead of a string property we can use a <a class=\"wp-editor-md-post-content-link\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">symbol</a>:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471174eb758520154\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471174eb758520154-5\">5</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-2\"><span class=\"crayon-r\">declare</span><span class=\"crayon-h\"> </span><span class=\"crayon-m\">const</span><span class=\"crayon-v\"> isValid:</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">unique </span><span class=\"crayon-v\">symbol</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-3\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-4\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Valid</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">[</span><span class=\"crayon-v\">isValid</span><span class=\"crayon-sy\">]</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">true</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471174eb758520154-5\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p>The benefit of using a symbol is that, as long as this symbol is not exported from the containing module or namespace, it will not be possible to use it at runtime. <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html\">TypeScript 2.7 release announcements</a> go into more details on type level treatment of unique symbols.</p>\n<p>No other symbol (even if they have the same name) will be equal to this symbol. This will hold true even if <code>Symbol</code> is polyfilled.</p>\n<p><img src=\"/wp-content/uploads/2019/08/symbolduplicate.png\" alt=\"\"></p>\n<p>TypeScript autocompletion will not show this as a completion candidate, eliminating the possibility of accidental usage:</p>\n<p><img src=\"/wp-content/uploads/2019/08/symbolcompletions.png\" alt=\"\"></p>\n\n\n    ",
            "tags": [
                "Typescript",
                "io-ts"
            ]
        },
        {
            "id": "https://lorefnon.me/2019/05/02/using-boxing-to-prevent-distribution-of-conditional-types/",
            "url": "https://lorefnon.me/2019/05/02/using-boxing-to-prevent-distribution-of-conditional-types/",
            "title": "Using Boxing to prevent distribution of conditional types",
            "date_published": "2019-05-02T00:00:00.000Z",
            "content_html": "<link rel=\"stylesheet\" href=\"/css/crayon.min.css\" >\n<link rel=\"stylesheet\" href=\"/css/crayon-flatui-light.css\" >\n\n\n\n\t<p>TypeScript <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#conditional-types\">conditional types</a> have an interesting property that they can “distribute” over union types. As explained better by the <a class=\"wp-editor-md-post-content-link\" href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#distributive-conditional-types\">official docs</a>:</p>\n<blockquote><p>\n  Conditional types in which the checked type is a naked type parameter are called distributive conditional types. Distributive conditional types are automatically distributed over union types during instantiation. For example, an instantiation of <code>T extends U ? X : Y</code> with the type argument <code>A | B | C</code> for <code>T</code> is resolved as <code>(A extends U ? X : Y) | (B extends U ? X : Y) | (C extends U ? X : Y)</code>.\n</p></blockquote>\n<p>While I understand the rationale behind this behavior, this can sometimes lead to somewhat non-intuitive outcomes in real-world scenarios:</p>\n<p><span id=\"more-570\"></span></p>\n<p>For example, let us consider following usage:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471ef19e550077826\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-13\">13</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-14\">14</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-15\">15</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-16\">16</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-17\">17</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-18\">18</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-19\">19</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-20\">20</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-21\">21</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-22\">22</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-23\">23</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-24\">24</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-25\">25</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-26\">26</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-27\">27</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-28\">28</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-29\">29</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-30\">30</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-31\">31</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-32\">32</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-33\">33</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-34\">34</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef19e550077826-35\">35</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-2\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TBase</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TKeys</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-3\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-v\">_base</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TBase</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-4\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-v\">_keys</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TKeys</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-5\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-6\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-7\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-8\"><span class=\"crayon-r\">declare</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">namespace</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">DeferredKeySelection</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-9\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">SetBase</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TSelection</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TBase</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TSelection </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-10\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">any</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-11\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-e\">infer </span><span class=\"crayon-v\">TKeys</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-12\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-13\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TBase</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TKeys</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-14\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TBase</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-15\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-16\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">AddKey</span><span class=\"crayon-o\">&lt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-17\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">TSelection</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-18\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-e\">TKey </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-19\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TSelection </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-e\">infer </span><span class=\"crayon-v\">TBase</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">infer </span><span class=\"crayon-v\">TKeys</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-20\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TBase</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TKeys</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TKey</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-21\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">never</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-22\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-23\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Augment</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TBase</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TKey </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-t\">string</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">AddKey</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">SetBase</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TBase</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TKey</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-24\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-25\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-e\">type </span><span class=\"crayon-v\">Resolve</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TSelection</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TSelection </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-26\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-e\">infer </span><span class=\"crayon-v\">Base</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-27\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-e\">infer </span><span class=\"crayon-v\">Keys</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-28\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-29\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Keys </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">Base</span><span class=\"crayon-sy\">?</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-30\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">Pick</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Base</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">Base</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-31\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-v\">any</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-32\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TSelection</span><span class=\"crayon-sy\">;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-33\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-34\"><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef19e550077826-35\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0059 seconds] -->\n<p></p>\n<p>It was <a class=\"wp-editor-md-post-content-link\" href=\"https://github.com/tgriesser/knex/pull/3168\">written</a> to model a fluent API (of <a class=\"wp-editor-md-post-content-link\" href=\"https://knexjs.org/\">Knex query builder</a>) where the base type of a partial could be available later, for example:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471ef1ab318307946\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1ab318307946-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1ab318307946-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1ab318307946-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1ab318307946-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471ef1ab318307946-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1ab318307946-2\"><span class=\"crayon-e\">await </span><span class=\"crayon-v\">knex</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">User</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"users\"</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">select</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"id\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"name\"</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span><span class=\"crayon-h\"> </span><span class=\"crayon-c\">// Resolves to Pick&lt;User, \"id\" | \"name\"&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1ab318307946-3\"><span class=\"crayon-e\">await </span><span class=\"crayon-v\">knex</span><span class=\"crayon-sy\">.</span><span class=\"crayon-e\">select</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"id\"</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"name\"</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">from</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">User</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-sy\">(</span><span class=\"crayon-s\">\"users\"</span><span class=\"crayon-sy\">)</span><span class=\"crayon-sy\">;</span><span class=\"crayon-h\"> </span><span class=\"crayon-c\">// Resolves to Pick&lt;User, \"id\" | \"name\"&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1ab318307946-4\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0008 seconds] -->\n<p></p>\n<p>Note that we can’t just use <code>Pick</code> directly in select’s return value because it is possible that the base type (User above) hasn’t been provided yet.</p>\n<p>So, instead we use a container type for bookkeeping and use <code>DeferredKeySelection.Resolve</code> to resolve it – basically deferring the Pick operation till the <a class=\"wp-editor-md-post-content-link\" href=\"https://github.com/tgriesser/knex/blob/cc109c4cadb06e6ed6909fe6dd2002398bf67eab/types/index.d.ts#L934-L936\">termination of the fluent chain</a>. If this pattern of using an identically named interface and namespace pair seems strange, checkout my <a class=\"wp-editor-md-post-content-link\" href=\"/2018/11/30/simplifying-generics-heavy-typescript-code-using-container-interfaces-extractor-types-and-companion-namespaces/\">previous post</a> on the topic.</p>\n<p>However, if we try to use it, we will notice something strange:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471ef1af088739162\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1af088739162-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1af088739162-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1af088739162-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1af088739162-4\">4</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471ef1af088739162-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1af088739162-2\"><span class=\"crayon-i\">type</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-sy\">.</span><span class=\"crayon-v\">Resolve</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">User</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"id\"</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">|</span><span class=\"crayon-h\"> </span><span class=\"crayon-s\">\"age\"</span><span class=\"crayon-o\">&gt;&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1af088739162-3\"><span class=\"crayon-c\">// Pick&lt;User, \"id\"&gt; | Pick&lt;User, \"age\"&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1af088739162-4\">&nbsp;</div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0005 seconds] -->\n<p></p>\n<p>We might have expected the resolved type (<code>T</code>) to be <code>Pick&lt;User, \"id\" | \"age\"&gt;</code> here but of course that is not the case because of the distributive behavior of conditional types mentioned above.</p>\n<p>Fortunately the solution is very simple, we can box the first type parameter of conditional so it is no longer a simple union type:</p>\n<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->\n\n\t\t<div id=\"crayon-5fba4471ef1b3266345075\" class=\"crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate\" data-settings=\" minimize scroll-mouseover\" style=\" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;\">\n\t\t\n\t\t\t<div class=\"crayon-plain-wrap\"></div>\n\t\t\t<div class=\"crayon-main\" style=\"\">\n\t\t\t\t<table class=\"crayon-table\">\n\t\t\t\t\t<tbody><tr class=\"crayon-row\">\n\t\t\t\t<td class=\"crayon-nums\" data-settings=\"hide\">\n\t\t\t\t\t<div class=\"crayon-nums-content\" style=\"font-size: 15px !important; line-height: 20px !important;\"><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-1\">1</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-2\">2</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-3\">3</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-4\">4</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-5\">5</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-6\">6</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-7\">7</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-8\">8</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-9\">9</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-10\">10</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-11\">11</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-12\">12</div><div class=\"crayon-num\" data-line=\"crayon-5fba4471ef1b3266345075-13\">13</div></div>\n\t\t\t\t</td>\n\t\t\t\t\t\t<td class=\"crayon-code\"><div class=\"crayon-pre\" style=\"font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;\"><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-1\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-2\"><span class=\"crayon-c\">// A container type to wrap the value in an object</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-3\"><span class=\"crayon-t\">interface</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Boxed</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-e\">T</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">_value</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">T</span><span class=\"crayon-sy\">;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-4\">&nbsp;</div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-5\"><span class=\"crayon-c\">// Later:</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-6\"><span class=\"crayon-e\">type </span><span class=\"crayon-v\">ResolveSingle</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">TSelection</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">=</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">TSelection </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">DeferredKeySelection</span><span class=\"crayon-o\">&lt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-7\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-e\">infer </span><span class=\"crayon-v\">Base</span><span class=\"crayon-sy\">,</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-8\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-e\">infer</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Keys</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-9\"><span class=\"crayon-o\">&gt;</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-10\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">Base</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">{</span><span class=\"crayon-sy\">}</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-11\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Boxed</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Keys</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-r\">extends</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Boxed</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">Base</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-sy\">?</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Pick</span><span class=\"crayon-o\">&lt;</span><span class=\"crayon-v\">Base</span><span class=\"crayon-sy\">,</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">Keys</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">&amp;</span><span class=\"crayon-h\"> </span><span class=\"crayon-e\">keyof </span><span class=\"crayon-v\">Base</span><span class=\"crayon-o\">&gt;</span><span class=\"crayon-h\"> </span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">any</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-12\"><span class=\"crayon-h\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">any</span></div><div class=\"crayon-line\" id=\"crayon-5fba4471ef1b3266345075-13\"><span class=\"crayon-h\">&nbsp;&nbsp;</span><span class=\"crayon-o\">:</span><span class=\"crayon-h\"> </span><span class=\"crayon-v\">TSelection</span><span class=\"crayon-sy\">;</span></div></div></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody></table>\n\t\t\t</div>\n\t\t</div>\n<!-- [Format Time: 0.0021 seconds] -->\n<p></p>\n<p></p>\n<p>Now our Resolve function behaves as we would expect.</p>\n<p>(PS. The container types here have no runtime overhead because we never any values/instances of these types. They are just used for type-level book-keeping).</p>\n\n\n    ",
            "tags": [
                "Typescript"
            ]
        }
    ]
}