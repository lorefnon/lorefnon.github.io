<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lorefnon.me</id>
    <title>Icicles of Thought â€¢ Posts by &#34;cdk&#34; tag</title>
    <link href="https://lorefnon.me" />
    <updated>2022-12-06T00:00:00.000Z</updated>
    <category term="Javascript" />
    <category term="KnockoutJS" />
    <category term="Ruby" />
    <category term="EventMachine" />
    <category term="Websockets" />
    <category term="SQLite" />
    <category term="Jade" />
    <category term="Node.js" />
    <category term="Rails" />
    <category term="Emacs" />
    <category term="Gulp" />
    <category term="ActiveAdmin" />
    <category term="ActiveRecord" />
    <category term="Devise" />
    <category term="Integration" />
    <category term="ZSH" />
    <category term="Productivity Hacks" />
    <category term="OCR" />
    <category term="Design Patterns" />
    <category term="InfluxDB" />
    <category term="Grafana" />
    <category term="React" />
    <category term="Functional Programming" />
    <category term="ES6" />
    <category term="Helm" />
    <category term="SPF" />
    <category term="CSS" />
    <category term="Redux" />
    <category term="Redux-loop" />
    <category term="Frontend" />
    <category term="Vagrant" />
    <category term="Clojure" />
    <category term="Hashicorp" />
    <category term="Typescript" />
    <category term="ReasonML" />
    <category term="Next.js" />
    <category term="Koa" />
    <category term="Apollo" />
    <category term="GraphQL" />
    <category term="MongoDB" />
    <category term="Automerge" />
    <category term="CRDT" />
    <category term="SVG" />
    <category term="VSCode" />
    <category term="Comlink" />
    <category term="Web-workers" />
    <category term="io-ts" />
    <category term="MobX" />
    <category term="MobX-State-Tree" />
    <category term="Routing" />
    <category term="HAR" />
    <category term="Jq" />
    <category term="Lit-html" />
    <category term="Stimulus" />
    <category term="Kotlin" />
    <category term="Vert.X" />
    <category term="Vert.X-Web" />
    <category term="Backend-development" />
    <category term="API-development" />
    <category term="Java" />
    <category term="JOOQ" />
    <category term="Ruby on Rails" />
    <category term="Liquibase" />
    <category term="tbls" />
    <category term="jOOQ" />
    <category term="Vue" />
    <category term="TypeScript" />
    <category term="Gradle" />
    <category term="Spring" />
    <category term="Spring-Boot" />
    <category term="gRPC" />
    <category term="Redis" />
    <category term="Database" />
    <category term="Exposed" />
    <category term="vim" />
    <category term="kotlin" />
    <category term="spring" />
    <category term="spring-security" />
    <category term="komapper" />
    <category term="spring-boot" />
    <category term="typescript" />
    <category term="zod" />
    <category term="ts-pattern" />
    <category term="ts-sql-query" />
    <category term="go" />
    <category term="golang" />
    <category term="zerolog" />
    <category term="jet" />
    <category term="sql" />
    <category term="go-migrate" />
    <category term="chi" />
    <category term="connect" />
    <category term="cloudfront" />
    <category term="AWS" />
    <category term="CDK" />
    <category term="Go" />
    <category term="Babel" />
    <entry>
        <id>https://lorefnon.me/2022/12/06/configuring-cloudfront-as-non-caching-reverse-proxy-for-api-backend/</id>
        <title>Using CDK to configure cloudfront as non-caching reverse proxy for API backend</title>
        <link rel="alternate" href="https://lorefnon.me/2022/12/06/configuring-cloudfront-as-non-caching-reverse-proxy-for-api-backend/"/>
        <content type="html">&lt;p&gt;Cloudfront is primarily a CDN, but it is often also convenient to use it as reverse proxy for a backend service. This is especially convenient when the entire frontend SPA (including HTML) is already hosted from Cloudfront and we don&amp;#39;t want to support CORS in our backend API that this frontend talks to.&lt;/p&gt;
&lt;p&gt;Reusing Cloudfront as a reverse proxy in such cases ensures that both our frontend and backend can be available from the same domain. However, in such case we must take special care to ensure that our backend responses do get unexpectedly cached by Cloudfront. This post outlines the CDK configuration to facilitate this.&lt;/p&gt;
&lt;p&gt;A minimal Cloudfront setup for an SPA may look something like this: &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; cdk &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; s3 &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-s3&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; cf &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-cloudfront&amp;quot;&lt;/span&gt;;

&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;FrontendStack&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_ inherited__&#34;&gt;cdk.Stack&lt;/span&gt; &amp;#123;
  publicAssetsS3Bucket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; s3.&lt;span class=&#34;hljs-title class_&#34;&gt;Bucket&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;PublicAssetsS3Bucket&amp;#x27;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;removalPolicy&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;RemovalPolicy&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;RETAIN&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;publicReadAccess&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;websiteIndexDocument&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;versioned&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;,
  &amp;#125;)

  s3Origin = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; origins.&lt;span class=&#34;hljs-title function_&#34;&gt;S3Origin&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;publicAssetsS3Bucket&lt;/span&gt;);

  cfDistribution = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;Distribution&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;CFDistribution&amp;#x27;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;defaultBehavior&lt;/span&gt;: &amp;#123;
      &lt;span class=&#34;hljs-attr&#34;&gt;origin&lt;/span&gt;: s3Origin,
    &amp;#125;,
    &lt;span class=&#34;hljs-comment&#34;&gt;// Certificate and domain configuration omitted&lt;/span&gt;
  &amp;#125;);
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here our CF Distribution is backed by an S3 bucket.&lt;/p&gt;
&lt;p&gt;Now, to support reverse proxying to an API we need an additional origin. While adding this origin, we will also want to configure additional policies to ensure that the responses from this origin do not get cached: &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;dist.&lt;span class=&#34;hljs-title function_&#34;&gt;addBehavior&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/api/*&amp;quot;&lt;/span&gt;, apiOrigin, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;responseHeadersPolicy&lt;/span&gt;: cfAPIRespHeadersPolicy,
    &lt;span class=&#34;hljs-attr&#34;&gt;allowedMethods&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;AllowedMethods&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;ALLOW_ALL&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;cachePolicy&lt;/span&gt;: cfApiCachePolicy,
    &lt;span class=&#34;hljs-attr&#34;&gt;originRequestPolicy&lt;/span&gt;: cfApiOriginReqPolicy,
&amp;#125;);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is important to explicitly allow all methods because CF by default permits only GET &amp;amp; HEAD requests, and other HTTP verbs will be rejected.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s next look at the associated policies: &lt;/p&gt;
&lt;p&gt;Following Response headers policy primary hints browsers to not cache the API responses:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;cfAPIRespHeadersPolicy = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;ResponseHeadersPolicy&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CFAPIRespHeadersPolicy&amp;quot;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;customHeadersBehavior&lt;/span&gt;: &amp;#123;
      &lt;span class=&#34;hljs-attr&#34;&gt;customHeaders&lt;/span&gt;: [
        &amp;#123;
          &lt;span class=&#34;hljs-attr&#34;&gt;header&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Cache-Control&amp;quot;&lt;/span&gt;,
          &lt;span class=&#34;hljs-attr&#34;&gt;override&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;,
          &lt;span class=&#34;hljs-attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;no-cache&amp;quot;&lt;/span&gt;,
        &amp;#125;,
      ],
    &amp;#125;,
&amp;#125;);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Cache policy will ensure that cloudfront itself does not cache the responses from our API backend: &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;cfApiCachePolicy = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;CachePolicy&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ApiCachePolicy&amp;quot;&lt;/span&gt;, &amp;#123;
  &lt;span class=&#34;hljs-attr&#34;&gt;defaultTtl&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;Duration&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;seconds&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;),
  &lt;span class=&#34;hljs-attr&#34;&gt;maxTtl&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;Duration&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;seconds&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;),
  &lt;span class=&#34;hljs-attr&#34;&gt;queryStringBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;CacheQueryStringBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(),
  &lt;span class=&#34;hljs-attr&#34;&gt;headerBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;CacheHeaderBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;allowList&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Authorization&amp;#x27;&lt;/span&gt;)
&amp;#125;);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that we also need to explicitly allow the Authorization header otherwise it will be stripped by Cloudfront. &lt;/p&gt;
&lt;p&gt;Currently there appears to be a bug which prevents us from being able to specify a header behavior if all the ttls are 0, so we keep the maxTtl as 1s.&lt;/p&gt;
&lt;p&gt;Lastly, we need an OriginRequestPolicy that instructs Cloudfront to forward all query params &amp;amp; cookies to the backend. In addition we can also specify any cloudfront specific headers here. In example below we add the &lt;code&gt;CloudFront-Viewer-Address&lt;/code&gt; header which enables the backend to receive the actual IP of the user.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;cfApiOriginReqPolicy = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;OriginRequestPolicy&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ApiOriginReqPolicy&amp;quot;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;originRequestPolicyName&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SampleApiOriginReqPolicy&amp;quot;&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;cookieBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;OriginRequestCookieBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(),
    &lt;span class=&#34;hljs-attr&#34;&gt;headerBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;OriginRequestHeaderBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(
      &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CloudFront-Viewer-Address&amp;quot;&lt;/span&gt;
    ),
    &lt;span class=&#34;hljs-attr&#34;&gt;queryStringBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;OriginRequestQueryStringBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(),
&amp;#125;);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Our final integration looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; cdk &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; s3 &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-s3&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; cf &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-cloudfront&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; origins &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-cloudfront-origins&amp;quot;&lt;/span&gt;;

&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;FrontendStack&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_ inherited__&#34;&gt;cdk.Stack&lt;/span&gt; &amp;#123;
  publicAssetsS3Bucket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; s3.&lt;span class=&#34;hljs-title class_&#34;&gt;Bucket&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;PublicAssetsS3Bucket&amp;#x27;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;removalPolicy&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;RemovalPolicy&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;RETAIN&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;publicReadAccess&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;websiteIndexDocument&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;versioned&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;,
  &amp;#125;)

  cfApiCachePolicy = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;CachePolicy&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ApiCachePolicy&amp;quot;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;defaultTtl&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;Duration&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;seconds&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;),
    &lt;span class=&#34;hljs-attr&#34;&gt;maxTtl&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;Duration&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;seconds&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;),
    &lt;span class=&#34;hljs-attr&#34;&gt;queryStringBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;CacheQueryStringBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(),
    &lt;span class=&#34;hljs-attr&#34;&gt;headerBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;CacheHeaderBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;allowList&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Authorization&amp;#x27;&lt;/span&gt;)
  &amp;#125;);

  cfApiOriginReqPolicy = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;OriginRequestPolicy&lt;/span&gt;(
    &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;,
    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ApiOriginReqPolicy&amp;quot;&lt;/span&gt;,
    &amp;#123;
      &lt;span class=&#34;hljs-attr&#34;&gt;originRequestPolicyName&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SampleApiOriginReqPolicy&amp;quot;&lt;/span&gt;,
      &lt;span class=&#34;hljs-attr&#34;&gt;cookieBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;OriginRequestCookieBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(),
      &lt;span class=&#34;hljs-attr&#34;&gt;headerBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;OriginRequestHeaderBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(
        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CloudFront-Viewer-Address&amp;quot;&lt;/span&gt;,
        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CloudFront-Viewer-Country&amp;quot;&lt;/span&gt;,
        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CloudFront-Viewer-City&amp;quot;&lt;/span&gt;,
        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CloudFront-Viewer-Country-Region&amp;quot;&lt;/span&gt;
      ),
      &lt;span class=&#34;hljs-attr&#34;&gt;queryStringBehavior&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;OriginRequestQueryStringBehavior&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;all&lt;/span&gt;(),
    &amp;#125;
  );

  s3Origin = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; origins.&lt;span class=&#34;hljs-title function_&#34;&gt;S3Origin&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;publicAssetsS3Buckets&lt;/span&gt;[idx]);

  apiOrigin = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; origins.&lt;span class=&#34;hljs-title class_&#34;&gt;HttpOrigin&lt;/span&gt;(serverHost!);
  
  cfAPIRespHeadersPolicy = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;ResponseHeadersPolicy&lt;/span&gt;(
    &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;,
    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;cfHTMLRespHeadersPolicy&amp;quot;&lt;/span&gt;,
    &amp;#123;
      &lt;span class=&#34;hljs-attr&#34;&gt;customHeadersBehavior&lt;/span&gt;: &amp;#123;
        &lt;span class=&#34;hljs-attr&#34;&gt;customHeaders&lt;/span&gt;: [
          &amp;#123;
            &lt;span class=&#34;hljs-attr&#34;&gt;header&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Cache-Control&amp;quot;&lt;/span&gt;,
            &lt;span class=&#34;hljs-attr&#34;&gt;override&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;,
            &lt;span class=&#34;hljs-attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;no-cache&amp;quot;&lt;/span&gt;,
          &amp;#125;,
        ],
      &amp;#125;,
    &amp;#125;
  );

  configureCFDistribution = (): cf.&lt;span class=&#34;hljs-property&#34;&gt;Distribution&lt;/span&gt; =&amp;gt; &amp;#123;
      &lt;span class=&#34;hljs-keyword&#34;&gt;const&lt;/span&gt; dist = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;Distribution&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;CFDistribution&amp;#x27;&lt;/span&gt;, &amp;#123;
        &lt;span class=&#34;hljs-attr&#34;&gt;defaultBehavior&lt;/span&gt;: &amp;#123;
          &lt;span class=&#34;hljs-attr&#34;&gt;origin&lt;/span&gt;: s3Origin,
        &amp;#125;,
        &lt;span class=&#34;hljs-comment&#34;&gt;// Certificate and domain configuration omitted&lt;/span&gt;
      &amp;#125;);

      dist.&lt;span class=&#34;hljs-title function_&#34;&gt;addBehavior&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/api/*&amp;quot;&lt;/span&gt;, apiOrigin, &amp;#123;
        &lt;span class=&#34;hljs-attr&#34;&gt;responseHeadersPolicy&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfAPIRespHeadersPolicy&lt;/span&gt;,
        &lt;span class=&#34;hljs-attr&#34;&gt;allowedMethods&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;AllowedMethods&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;ALLOW_ALL&lt;/span&gt;,
        &lt;span class=&#34;hljs-attr&#34;&gt;cachePolicy&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfApiCachePolicy&lt;/span&gt;,
        &lt;span class=&#34;hljs-attr&#34;&gt;originRequestPolicy&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfApiOriginReqPolicy&lt;/span&gt;,
      &amp;#125;);

      &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; dist;
  &amp;#125;

  cfDistribution = &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;configureCFDistribution&lt;/span&gt;()
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="typescript" />
        <category term="cloudfront" />
        <category term="AWS" />
        <category term="CDK" />
        <updated>2022-12-06T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://lorefnon.me/2022/11/15/configuring-cloudfront-functions-for-spa-routing-using-cdk/</id>
        <title>Configuring cloudfront functions for SPA routing with CDK</title>
        <link rel="alternate" href="https://lorefnon.me/2022/11/15/configuring-cloudfront-functions-for-spa-routing-using-cdk/"/>
        <content type="html">&lt;p&gt;When building &lt;a href=&#34;https://en.wikipedia.org/wiki/Single-page_application&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;single page applications&lt;/a&gt;, it is convenient to serve the complete website including the HTML files from a CDN like AWS cloudfront. All the assets can then be potentially served from a location close to the user. This works particularly well for PWAs and dynamic client rendered websites. &lt;/p&gt;
&lt;p&gt;It is also common to use &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;push based&lt;/a&gt; routing in single page applications. However the first request would always go the server so we need to setup some server side routing as well to route these requests to an appropriate HTML file. In the simplest case we&amp;#39;d route all incoming requests to our domain to a single index.html file, and the javascript referenced in the HTML file will take over once the browser renders it.&lt;/p&gt;
&lt;p&gt;This is easily accomplished via &lt;a href=&#34;https://docs.amazonaws.cn/en_us/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;cloudfront functions&lt;/a&gt;, which are a &lt;a href=&#34;https://aws.amazon.com/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;recently introduced&lt;/a&gt; cost effective alternative to &lt;a href=&#34;https://docs.amazonaws.cn/en_us/AmazonCloudFront/latest/DeveloperGuide/lambda-at-the-edge.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;lambda@edge&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;lambda@edge may be more suitable if you need to execute complex logic and need access to a more full-fledged execution environment like node.js (For example if you are doing server side rendering). However for simpler use cases like changing routes, adapting headers etc. cloudfront functions offer a simpler and more cost effective alternative.&lt;/p&gt;
&lt;p&gt;Here is a simple function to route all requests which don&amp;#39;t have an extension in the url to index.html: &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs js&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// path-redir-rule.js&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;handler&lt;/span&gt;(&lt;span class=&#34;hljs-params&#34;&gt;event&lt;/span&gt;) &amp;#123;
    &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; request = event.&lt;span class=&#34;hljs-property&#34;&gt;request&lt;/span&gt;
    &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; hasExtension = request.&lt;span class=&#34;hljs-property&#34;&gt;uri&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;includes&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;.&amp;#x27;&lt;/span&gt;)
    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (!hasExtension) &amp;#123;
        request.&lt;span class=&#34;hljs-property&#34;&gt;uri&lt;/span&gt; = &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;/app/index.html&amp;#x27;&lt;/span&gt;
    &amp;#125;
    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; request;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Because we love &lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;IaC&lt;/a&gt;, we will use &lt;a href=&#34;https://aws.amazon.com/cdk/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;CDK&lt;/a&gt; to wire up our cloudfront. This post is not intended to be a good first intro to CDK, but here are a few if you are using it for first time: &lt;a href=&#34;https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-cdk-getting-started.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;[1]&lt;/a&gt;, &lt;a href=&#34;https://dev.to/kevin_odongo35/getting-started-with-aws-cdk-2k19&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It should not surprise anyone that AWS CDK has good support for AWS Cloudfront. &lt;/p&gt;
&lt;p&gt;Here is a simple stack that uses CDK with typescript to wire up a cloudfront stack backed by an S3 bucket. &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; path &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;node:path&amp;quot;&lt;/span&gt;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; cdk &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; s3 &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-s3&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; cf &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-cloudfront&amp;quot;&lt;/span&gt;;
&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; * &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; origins &lt;span class=&#34;hljs-keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;aws-cdk-lib/aws-cloudfront-origins&amp;quot;&lt;/span&gt;;

&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;FrontendStack&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_ inherited__&#34;&gt;cdk.Stack&lt;/span&gt; &amp;#123;
  publicAssetsS3Bucket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; s3.&lt;span class=&#34;hljs-title class_&#34;&gt;Bucket&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;PublicAssetsBucket&amp;quot;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;removalPolicy&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;RemovalPolicy&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;RETAIN&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;publicReadAccess&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;websiteIndexDocument&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;,
    &lt;span class=&#34;hljs-attr&#34;&gt;versioned&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;,
  &amp;#125;);

  &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfOrigin&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; origins.&lt;span class=&#34;hljs-title function_&#34;&gt;S3Origin&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;publicAssetsS3Bucket&lt;/span&gt;);

  &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfDistribution&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;Distribution&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CFDistribution&amp;quot;&lt;/span&gt;, &amp;#123;
    &lt;span class=&#34;hljs-attr&#34;&gt;defaultBehavior&lt;/span&gt;: &amp;#123;
      &lt;span class=&#34;hljs-attr&#34;&gt;origin&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfOrigin&lt;/span&gt;
    &amp;#125;
  &amp;#125;);
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a production application we will also configure certifications and domains for the distribution, which I have omited to keep the post focussed, but here is &lt;a href=&#34;https://blog.dennisokeeffe.com/blog/2021-08-08-building-a-cdn-with-s3-cloudfront-and-the-aws-cdk&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;another post&lt;/a&gt; that convers those things too.&lt;/p&gt;
&lt;p&gt;We can now update this CF distribution configuration to use our function.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;&lt;table class=&#34;hlcode-table&#34;&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;FrontendStack&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_ inherited__&#34;&gt;cdk.Stack&lt;/span&gt; {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  publicAssetsS3Bucket = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; s3.&lt;span class=&#34;hljs-title class_&#34;&gt;Bucket&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;PublicAssetsBucket&amp;quot;&lt;/span&gt;, {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;removalPolicy&lt;/span&gt;: cdk.&lt;span class=&#34;hljs-property&#34;&gt;RemovalPolicy&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;RETAIN&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;publicReadAccess&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;websiteIndexDocument&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;versioned&lt;/span&gt;: &lt;span class=&#34;hljs-literal&#34;&gt;false&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  })
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  cfPathRedirFunction = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;Function&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;PathRedirFunction&amp;quot;&lt;/span&gt;, {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;code&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;FunctionCode&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;fromFile&lt;/span&gt;({
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        &lt;span class=&#34;hljs-attr&#34;&gt;filePath&lt;/span&gt;: path.&lt;span class=&#34;hljs-title function_&#34;&gt;join&lt;/span&gt;(
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          __dirname,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;./cf-functions/path-redir-rule.js&amp;quot;&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        ),
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      }),
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    });
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfOrigin&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; origins.&lt;span class=&#34;hljs-title function_&#34;&gt;S3Origin&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;publicAssetsS3Bucket&lt;/span&gt;);
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfDistribution&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;Distribution&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CFDistribution&amp;quot;&lt;/span&gt;, {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;defaultBehavior&lt;/span&gt;: {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;origin&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfOrigin&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;functionAssociations&lt;/span&gt;: [
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          &lt;span class=&#34;hljs-attr&#34;&gt;function&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfPathRedirFunction&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          &lt;span class=&#34;hljs-attr&#34;&gt;eventType&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;FunctionEventType&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;VIEWER_REQUEST&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        }
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      ],
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    }
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  });
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;}
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since this function will need to be run before the target is selected, we needed to use &lt;code&gt;VIEWER_REQUEST&lt;/code&gt; event type.&lt;/p&gt;
&lt;p&gt;We can also consider adding a response function which adds headers to prevent the browser from caching our html pages, as we can expect it to frequently change.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ts&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// prevent-html-caching.js&lt;/span&gt;

&lt;span class=&#34;hljs-keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;handler&lt;/span&gt;(&lt;span class=&#34;hljs-params&#34;&gt;event&lt;/span&gt;) &amp;#123;
    &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; request = event.&lt;span class=&#34;hljs-property&#34;&gt;request&lt;/span&gt;
    &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; parts = request.&lt;span class=&#34;hljs-property&#34;&gt;uri&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;)
    &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; lastPart = parts[parts.&lt;span class=&#34;hljs-property&#34;&gt;length&lt;/span&gt;-&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]
    &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; response = event.&lt;span class=&#34;hljs-property&#34;&gt;response&lt;/span&gt;;
    &lt;span class=&#34;hljs-keyword&#34;&gt;var&lt;/span&gt; headers = response.&lt;span class=&#34;hljs-property&#34;&gt;headers&lt;/span&gt;;
    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (lastPart.&lt;span class=&#34;hljs-title function_&#34;&gt;match&lt;/span&gt;(&lt;span class=&#34;hljs-regexp&#34;&gt;/\.html$/&lt;/span&gt;) || lastPart.&lt;span class=&#34;hljs-title function_&#34;&gt;match&lt;/span&gt;(&lt;span class=&#34;hljs-regexp&#34;&gt;/^[^.]*$/&lt;/span&gt;)) &amp;#123;
        headers[&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;cache-control&amp;#x27;&lt;/span&gt;] = &amp;#123; &lt;span class=&#34;hljs-attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;no-cache&amp;#x27;&lt;/span&gt; &amp;#125;
    &amp;#125;
    &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; response
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Because this function needs access to the response being sent, the function event type needs to be &lt;code&gt;VIEWER_RESPONSE&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;&lt;table class=&#34;hlcode-table&#34;&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;FrontendStack&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_ inherited__&#34;&gt;cdk.Stack&lt;/span&gt; {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  &lt;span class=&#34;hljs-comment&#34;&gt;// ...&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  cfHtmlRespFunction = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;Function&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;HTMLRespFunction&amp;quot;&lt;/span&gt;, {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;code&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;FunctionCode&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;fromFile&lt;/span&gt;({
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;filePath&lt;/span&gt;: path.&lt;span class=&#34;hljs-title function_&#34;&gt;join&lt;/span&gt;(
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        __dirname,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;./cf-functions/prevent-html-caching.js&amp;quot;&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      ),
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    }),
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  });
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfOrigin&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; origins.&lt;span class=&#34;hljs-title function_&#34;&gt;S3Origin&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;publicAssetsS3Bucket&lt;/span&gt;);
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfDistribution&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; cf.&lt;span class=&#34;hljs-title class_&#34;&gt;Distribution&lt;/span&gt;(&lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;CFDistribution&amp;quot;&lt;/span&gt;, {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    &lt;span class=&#34;hljs-attr&#34;&gt;defaultBehavior&lt;/span&gt;: {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;origin&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfDistribution&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      &lt;span class=&#34;hljs-attr&#34;&gt;functionAssociations&lt;/span&gt;: [
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          &lt;span class=&#34;hljs-attr&#34;&gt;function&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfPathRedirFunction&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          &lt;span class=&#34;hljs-attr&#34;&gt;eventType&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;FunctionEventType&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;VIEWER_REQUEST&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        },
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        {
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          &lt;span class=&#34;hljs-attr&#34;&gt;function&lt;/span&gt;: &lt;span class=&#34;hljs-variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;cfHtmlRespFunction&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;          &lt;span class=&#34;hljs-attr&#34;&gt;eventType&lt;/span&gt;: cf.&lt;span class=&#34;hljs-property&#34;&gt;FunctionEventType&lt;/span&gt;.&lt;span class=&#34;hljs-property&#34;&gt;VIEWER_RESPONSE&lt;/span&gt;,
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;background:#fffacd;&#34; class=&#34;hlcode-line  hlcode-line-highlight&#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;        },
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;      ],
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;    }
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;  });
&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&#34;border:none;&#34; class=&#34;hlcode-line  &#34; &gt;&lt;td style=&#34;border:none&#34; class=&#34;hlcode-code-cell&#34;&gt;}
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that is it. Run &lt;code&gt;cdk synth&lt;/code&gt; and &lt;code&gt;cdk deploy&lt;/code&gt; to deploy or update your cloudfront setup.&lt;/p&gt;
</content>
        <category term="cloudfront" />
        <category term="AWS" />
        <category term="CDK" />
        <updated>2022-11-15T00:00:00.000Z</updated>
    </entry>
</feed>
