<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lorefnon.me</id>
    <title>Icicles of Thought â€¢ Posts by &#34;gradle&#34; tag</title>
    <link href="https://lorefnon.me" />
    <updated>2023-01-29T00:00:00.000Z</updated>
    <category term="Javascript" />
    <category term="KnockoutJS" />
    <category term="Ruby" />
    <category term="EventMachine" />
    <category term="Websockets" />
    <category term="SQLite" />
    <category term="Jade" />
    <category term="Node.js" />
    <category term="Rails" />
    <category term="Emacs" />
    <category term="Gulp" />
    <category term="ActiveAdmin" />
    <category term="ActiveRecord" />
    <category term="Devise" />
    <category term="Integration" />
    <category term="ZSH" />
    <category term="Productivity Hacks" />
    <category term="OCR" />
    <category term="Design Patterns" />
    <category term="InfluxDB" />
    <category term="Grafana" />
    <category term="React" />
    <category term="Functional Programming" />
    <category term="ES6" />
    <category term="Helm" />
    <category term="SPF" />
    <category term="CSS" />
    <category term="Redux" />
    <category term="Redux-loop" />
    <category term="Frontend" />
    <category term="Vagrant" />
    <category term="Clojure" />
    <category term="Hashicorp" />
    <category term="Typescript" />
    <category term="ReasonML" />
    <category term="Next.js" />
    <category term="Koa" />
    <category term="Apollo" />
    <category term="GraphQL" />
    <category term="MongoDB" />
    <category term="Automerge" />
    <category term="CRDT" />
    <category term="SVG" />
    <category term="VSCode" />
    <category term="Comlink" />
    <category term="Web-workers" />
    <category term="io-ts" />
    <category term="MobX" />
    <category term="MobX-State-Tree" />
    <category term="Routing" />
    <category term="HAR" />
    <category term="Jq" />
    <category term="Lit-html" />
    <category term="Stimulus" />
    <category term="Kotlin" />
    <category term="Vert.X" />
    <category term="Vert.X-Web" />
    <category term="Backend-development" />
    <category term="API-development" />
    <category term="Java" />
    <category term="JOOQ" />
    <category term="Ruby on Rails" />
    <category term="Liquibase" />
    <category term="tbls" />
    <category term="jOOQ" />
    <category term="Vue" />
    <category term="TypeScript" />
    <category term="Gradle" />
    <category term="Spring" />
    <category term="Spring-Boot" />
    <category term="gRPC" />
    <category term="Redis" />
    <category term="Database" />
    <category term="Exposed" />
    <category term="vim" />
    <category term="kotlin" />
    <category term="spring" />
    <category term="spring-security" />
    <category term="komapper" />
    <category term="spring-boot" />
    <category term="typescript" />
    <category term="zod" />
    <category term="ts-pattern" />
    <category term="ts-sql-query" />
    <category term="go" />
    <category term="golang" />
    <category term="zerolog" />
    <category term="jet" />
    <category term="sql" />
    <category term="go-migrate" />
    <category term="chi" />
    <category term="connect" />
    <category term="cloudfront" />
    <category term="AWS" />
    <category term="CDK" />
    <category term="Go" />
    <category term="Babel" />
    <entry>
        <id>https://lorefnon.me/2023/01/29/gradle-kotlin-dsl-running-main-class/</id>
        <title>Running an arbitrary main class as a Gradle task using the kotlin DSL</title>
        <link rel="alternate" href="https://lorefnon.me/2023/01/29/gradle-kotlin-dsl-running-main-class/"/>
        <content type="html">&lt;p&gt;This post is a simple recipe illustrating how we can run an arbitrary main class as a gradle task through the &lt;a href=&#34;https://docs.gradle.org/current/dsl/org.gradle.api.tasks.JavaExec.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Gradle JavaExec utility&lt;/a&gt;. Because we love kotlin, both our gradle configuration and main class are written in kotlin.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs kt&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// build.gradle.kts&lt;/span&gt;

tasks.register&amp;lt;JavaExec&amp;gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;sampleTask&amp;quot;&lt;/span&gt;) &amp;#123;
    mainClass.&lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;com.example.util.SampleTaskKt&amp;quot;&lt;/span&gt;)
    classpath = sourceSets[&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;].runtimeClasspath
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;hljs kt&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// src/main/kotlin/com/example/util/sampleTask.kt&lt;/span&gt;

&lt;span class=&#34;hljs-keyword&#34;&gt;package&lt;/span&gt; com.example.util

&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;fun&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(args: &lt;span class=&#34;hljs-type&#34;&gt;Array&lt;/span&gt;&amp;lt;&lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt;&amp;gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;
    print(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;)
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you run &lt;code&gt;./gradlew sampleTask&lt;/code&gt; in cli (or use your IDE&amp;#39;s gradle panel to execute it) you should see &amp;quot;hello world&amp;quot; printed in the console.&lt;/p&gt;
&lt;p&gt;Gradle&amp;#39;s JavaExec is quite handy for one off project specific tasks for which you don&amp;#39;t want to implement a dedicated plugin.&lt;/p&gt;
</content>
        <category term="Kotlin" />
        <category term="Gradle" />
        <updated>2023-01-29T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://lorefnon.me/2021/09/01/configuring-liquibase-with-gradle-kotlin-dsl/</id>
        <title>Configuring Liquibase through Gradle Kotlin DSL</title>
        <link rel="alternate" href="https://lorefnon.me/2021/09/01/configuring-liquibase-with-gradle-kotlin-dsl/"/>
        <content type="html">&lt;p&gt;This post is a minimal recipe for configuring Liquibase runner through the Gradle kotlin DSL. This is mostly ported from the offical examples &lt;a href=&#34;https://github.com/liquibase/liquibase-gradle-plugin#usage&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;here&lt;/a&gt; written using the Gradle&amp;#39;s Groovy DSL:&lt;/p&gt;
&lt;p&gt;We can specify our database properties in gradle.properties:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs plaintext&#34;&gt;db_url=jdbc:mysql://172.17.0.2:3306/oms_dev
db_user=root
db_password=rootroot&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And use them in our build.gradle.kts:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs kotlin&#34;&gt;version = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1.0-SNAPSHOT&amp;quot;&lt;/span&gt;

repositories &amp;#123;
    mavenCentral()
    jcenter()
&amp;#125;

plugins &amp;#123;
    kotlin(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;jvm&amp;quot;&lt;/span&gt;) version &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1.5.21&amp;quot;&lt;/span&gt;
    id(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;org.liquibase.gradle&amp;quot;&lt;/span&gt;) version &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2.0.3&amp;quot;&lt;/span&gt;
&amp;#125;

&lt;span class=&#34;hljs-comment&#34;&gt;// Liquibase plugin configuration&lt;/span&gt;
liquibase &amp;#123;
    activities.register(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;) &amp;#123;
        &lt;span class=&#34;hljs-keyword&#34;&gt;val&lt;/span&gt; db_url &lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt; project.extra.properties
        &lt;span class=&#34;hljs-keyword&#34;&gt;val&lt;/span&gt; db_user &lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt; project.extra.properties
        &lt;span class=&#34;hljs-keyword&#34;&gt;val&lt;/span&gt; db_password &lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt; project.extra.properties

        &lt;span class=&#34;hljs-keyword&#34;&gt;this&lt;/span&gt;.arguments = mapOf(
            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;logLevel&amp;quot;&lt;/span&gt; to &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;info&amp;quot;&lt;/span&gt;,
            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;changeLogFile&amp;quot;&lt;/span&gt; to &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;src/main/resources/db/changelog.yml&amp;quot;&lt;/span&gt;,
            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt; to db_url,
            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; to db_user,
            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt; to db_password,
            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;driver&amp;quot;&lt;/span&gt; to &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;com.mysql.cj.jdbc.Driver&amp;quot;&lt;/span&gt;
        )
    &amp;#125;
    runList = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;
&amp;#125;

dependencies &amp;#123;
    &lt;span class=&#34;hljs-comment&#34;&gt;// Include database drivers to be used by liquibase&lt;/span&gt;
    liquibaseRuntime(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mysql:mysql-connector-java:8.0.26&amp;quot;&lt;/span&gt;)
    liquibaseRuntime(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;org.liquibase:liquibase-core:4.4.3&amp;quot;&lt;/span&gt;)
    liquibaseRuntime(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;org.yaml:snakeyaml:1.29&amp;quot;&lt;/span&gt;)
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Kotlin" />
        <category term="Liquibase" />
        <category term="Gradle" />
        <updated>2021-09-01T00:00:00.000Z</updated>
    </entry>
</feed>
