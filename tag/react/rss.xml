<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Icicles of Thought • Posts by &#34;react&#34; tag</title>
        <link>https://lorefnon.me</link>
        <description></description>
        <language>en</language>
        <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
        <lastBuildDate>Fri, 17 Apr 2020 00:00:00 +0000</lastBuildDate>
        <category>Javascript</category>
        <category>KnockoutJS</category>
        <category>Ruby</category>
        <category>EventMachine</category>
        <category>Websockets</category>
        <category>SQLite</category>
        <category>Jade</category>
        <category>Node.js</category>
        <category>Rails</category>
        <category>Emacs</category>
        <category>Gulp</category>
        <category>ActiveAdmin</category>
        <category>ActiveRecord</category>
        <category>Devise</category>
        <category>Integration</category>
        <category>ZSH</category>
        <category>Productivity Hacks</category>
        <category>OCR</category>
        <category>Design Patterns</category>
        <category>InfluxDB</category>
        <category>Grafana</category>
        <category>React</category>
        <category>Functional Programming</category>
        <category>ES6</category>
        <category>Helm</category>
        <category>SPF</category>
        <category>CSS</category>
        <category>Redux</category>
        <category>Redux-loop</category>
        <category>Frontend</category>
        <category>Vagrant</category>
        <category>Clojure</category>
        <category>Hashicorp</category>
        <category>Typescript</category>
        <category>ReasonML</category>
        <category>Next.js</category>
        <category>Koa</category>
        <category>Apollo</category>
        <category>GraphQL</category>
        <category>MongoDB</category>
        <category>Automerge</category>
        <category>CRDT</category>
        <category>SVG</category>
        <category>VSCode</category>
        <category>Comlink</category>
        <category>Web-workers</category>
        <category>io-ts</category>
        <category>MobX</category>
        <category>MobX-State-Tree</category>
        <category>Routing</category>
        <category>HAR</category>
        <category>Jq</category>
        <category>Lit-html</category>
        <category>Stimulus</category>
        <category>Kotlin</category>
        <category>Vert.X</category>
        <category>Vert.X-Web</category>
        <category>Backend-development</category>
        <category>API-development</category>
        <category>Java</category>
        <category>JOOQ</category>
        <category>Ruby on Rails</category>
        <category>Liquibase</category>
        <category>tbls</category>
        <category>jOOQ</category>
        <category>Vue</category>
        <category>TypeScript</category>
        <category>Gradle</category>
        <category>Spring</category>
        <category>Spring-Boot</category>
        <category>gRPC</category>
        <category>Redis</category>
        <category>Database</category>
        <category>Exposed</category>
        <category>vim</category>
        <category>kotlin</category>
        <category>spring</category>
        <category>spring-security</category>
        <category>komapper</category>
        <category>spring-boot</category>
        <category>typescript</category>
        <category>zod</category>
        <category>ts-pattern</category>
        <category>ts-sql-query</category>
        <category>go</category>
        <category>golang</category>
        <category>zerolog</category>
        <category>jet</category>
        <category>sql</category>
        <category>go-migrate</category>
        <category>chi</category>
        <category>connect</category>
        <category>cloudfront</category>
        <category>AWS</category>
        <category>CDK</category>
        <category>Go</category>
        <item>
            <guid isPermalink="true">https://lorefnon.me/2020/04/17/hash-based-routing-with-react-navi/</guid>
            <title>Hash based routing with react-navi</title>
            <link>https://lorefnon.me/2020/04/17/hash-based-routing-with-react-navi/</link>
            <category>React</category>
            <category>Routing</category>
            <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon.min.css&#34; &gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon-flatui-light.css&#34; &gt;



	&lt;p&gt;&lt;a class=&#34;wp-editor-md-post-content-link&#34; href=&#34;https://frontarm.com/navi/&#34;&gt;Navi&lt;/a&gt; is an simple and easy-to-use routing solution for React with good support for &lt;a class=&#34;wp-editor-md-post-content-link&#34; href=&#34;https://reactjs.org/docs/concurrent-mode-suspense.html&#34;&gt;suspense&lt;/a&gt; and asynchronous data-fetching.&lt;/p&gt;
&lt;p&gt;I generally prefer hash-based routing over push state based routing because it doesn’t require any special handling on the server side and works well even with file urls &amp;amp; electron apps. Also, working mostly with intranet applications, SEO is generally not a concern for me.&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more-687&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Thanks to the underlying history library, it is relatively straightforward to use hash-routing with react-navi:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44573abf6514361846&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573abf6514361846-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573abf6514361846-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573abf6514361846-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573abf6514361846-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573abf6514361846-5&#34;&gt;5&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573abf6514361846-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573abf6514361846-2&#34;&gt;&lt;span class=&#34;crayon-e&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;createHashHistory&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;history&#39;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573abf6514361846-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573abf6514361846-4&#34;&gt;&lt;span class=&#34;crayon-m&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;history&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;createHashHistory&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573abf6514361846-5&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0025 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;As the &lt;a class=&#34;wp-editor-md-post-content-link&#34; href=&#34;https://frontarm.com/navi/en/#try-a-live-example&#34;&gt;example&lt;/a&gt; in the home page illustrates, we can pass our routes to the &lt;code&gt;mount&lt;/code&gt; function:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44573ac0a238133453&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac0a238133453-13&#34;&gt;13&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-2&#34;&gt;&lt;span class=&#34;crayon-e&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;navi&#39;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-4&#34;&gt;&lt;span class=&#34;crayon-m&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-7&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#34;Hats &#39;n&#39; Flamethrowers &#39;r&#39; Us&#34;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-8&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;getData&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;fetchProducts&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-9&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Landing&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-10&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-11&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;/product&#39;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;./product&#39;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-12&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac0a238133453-13&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0020 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;However instead of passing these routes directly to the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; component, we’d need to create a navigation that is configured to use our hash-based history.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44573ac11804906234&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac11804906234-8&#34;&gt;8&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-2&#34;&gt;&lt;span class=&#34;crayon-e&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;createBrowserNavigation&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;navi&#39;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-4&#34;&gt;&lt;span class=&#34;crayon-m&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;createBrowserNavigation&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;history&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;routes&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-7&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac11804906234-8&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0007 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;And then we can render the Router with this navigation:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44573ac17552680781&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-13&#34;&gt;13&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44573ac17552680781-14&#34;&gt;14&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-2&#34;&gt;&lt;span class=&#34;crayon-e&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Router&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;react-navi&#39;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-4&#34;&gt;&lt;span class=&#34;crayon-v&#34;&gt;ReactDOM&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Router &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Layout&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-7&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Suspense &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-t&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-8&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-c&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-9&#34;&gt;&lt;span class=&#34;crayon-c&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/S&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;uspense&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-10&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Layout&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-11&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Router&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-12&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-13&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44573ac17552680781-14&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0016 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;That is pretty much all that’s needed&lt;/p&gt;


     ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://lorefnon.me/2018/06/02/exposing-slots-in-layout-containers-through-shared-refs-in-react/</guid>
            <title>Exposing slots in layout containers through shared refs in React</title>
            <link>https://lorefnon.me/2018/06/02/exposing-slots-in-layout-containers-through-shared-refs-in-react/</link>
            <category>React</category>
            <category>Frontend</category>
            <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon.min.css&#34; &gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon-flatui-light.css&#34; &gt;



	&lt;p&gt;React refs are generally considered an anti-pattern as their usage typically encourages patterns which go against declarative compositon and top down flow of data.&lt;/p&gt;
&lt;p&gt;This post explores a somewhat uncommon use case where refs can be used to expose layout slots in parent components to nested components.&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more-242&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The newly introduced &lt;a href=&#34;https://reactjs.org/docs/refs-and-the-dom.html#creating-refs&#34; target=&#34;_blank&#34;&gt;React.createRef&lt;/a&gt; function makes it particularly convenient to create refs in parent components, and pass them down as props to other components.&lt;/p&gt;
&lt;p&gt;While building business applications, I find it convenient to create reusable layout container components (eg. Header + Top Menu + Sidebar) and share them across different LOB applications.&lt;/p&gt;
&lt;p&gt;While this is uncommon, I have occasionally encountered use cases which may benefit from a component being able to render sub-parts of itself “somewhere-else” in the layout structure, without the consumer of the component having to take care of rendering multiple components in different locations in the tree.&lt;/p&gt;
&lt;p&gt;For example, let us say we are creating a &lt;code&gt;DataTable&lt;/code&gt; component. When we click on a row, we open a drawer and render a form inside for editing the item represented by the row. Later, we decide that we would also want the flexibility to show this form outside the component in a sidebar exposed by a layout container, if available.&lt;/p&gt;
&lt;p&gt;We could handle this by rendering the sidebar as a part of the &lt;code&gt;DataTable&lt;/code&gt; component itself, but that is not suitable if the sidebar may contain other components too which are unrelated to our DataTable.&lt;/p&gt;
&lt;p&gt;We could also expose this drawer as a separate component, and both our &lt;code&gt;DataTable&lt;/code&gt; component as well as the &lt;code&gt;RowDetailsForm&lt;/code&gt; component could be connected to a shared store, and rendered in independent locations in the component hierarchy, but this obviously requires more work on the part of consumer, and requires us to expose our internal state management concerns to outside world.&lt;/p&gt;
&lt;p&gt;The third solution, which we discuss here, is to use shared refs.&lt;/p&gt;
&lt;p&gt;The consumer component can create a ref and share it with both the layout container component and the presenter component.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44a7a43ff960456084&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a43ff960456084-12&#34;&gt;12&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-2&#34;&gt;&lt;span class=&#34;crayon-t&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;App &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;Component&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-3&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;sidebarRef&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;createRef&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-4&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;LayoutContainer &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;sidebarRef&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;sidebarRef&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-7&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Panel &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;slotRef&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;sidebarRef&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-8&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;LayoutContainer&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-9&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-10&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-11&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a43ff960456084-12&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0034 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Now, our container component can use this &lt;code&gt;sidebarRef&lt;/code&gt; to designate a slot which can be populated by the nested presenter:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44a7a4411198396424&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-13&#34;&gt;13&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4411198396424-14&#34;&gt;14&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-2&#34;&gt;&lt;span class=&#34;crayon-t&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;LayoutContainer &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;Component&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-3&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-4&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;div &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;sidebarRef&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-7&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-8&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-9&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-10&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-11&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-12&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-13&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4411198396424-14&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0015 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;And our presenter component can use this shared &lt;code&gt;sidebarRef&lt;/code&gt; as a &lt;code&gt;Portal&lt;/code&gt; target. Portal here is the &lt;a href=&#34;https://react-bootstrap.github.io/react-overlays/#portals&#34; target=&#34;_blank&#34;&gt;Portal component&lt;/a&gt; available from &lt;a href=&#34;https://github.com/react-bootstrap/react-overlays&#34; target=&#34;_blank&#34;&gt;react-overlays&lt;/a&gt; package, which is essentially a declarative wrapper over &lt;a href=&#34;https://reactjs.org/docs/portals.html&#34; target=&#34;_blank&#34;&gt;ReactDOM.createPortal&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44a7a4432339310845&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-13&#34;&gt;13&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-14&#34;&gt;14&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4432339310845-15&#34;&gt;15&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-2&#34;&gt;&lt;span class=&#34;crayon-t&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Panel &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;Component&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-3&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;getSlot&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;slotRef&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-4&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Fragment&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-7&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Body &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-8&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Portal &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;getSlot&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-9&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Slot &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-10&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Portal&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-11&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Fragment&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-12&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-13&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-14&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4432339310845-15&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0019 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;In case you are wondering how this works during initial render, before the sidebarRef.current is available, the &lt;a href=&#34;https://github.com/react-bootstrap/react-overlays/blob/master/src/Portal.js&#34; target=&#34;_blank&#34;&gt;Portal component&lt;/a&gt; implementation can be illuminating:&lt;/p&gt;
&lt;p&gt;Abbreviated source is below:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44a7a4439253066833&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-13&#34;&gt;13&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-14&#34;&gt;14&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-15&#34;&gt;15&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-16&#34;&gt;16&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-17&#34;&gt;17&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-18&#34;&gt;18&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-19&#34;&gt;19&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-20&#34;&gt;20&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-21&#34;&gt;21&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-22&#34;&gt;22&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-23&#34;&gt;23&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-24&#34;&gt;24&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-25&#34;&gt;25&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-26&#34;&gt;26&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-27&#34;&gt;27&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-28&#34;&gt;28&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-29&#34;&gt;29&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-30&#34;&gt;30&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-31&#34;&gt;31&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-32&#34;&gt;32&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-33&#34;&gt;33&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-34&#34;&gt;34&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-35&#34;&gt;35&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-36&#34;&gt;36&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-37&#34;&gt;37&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-38&#34;&gt;38&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-39&#34;&gt;39&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-40&#34;&gt;40&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-41&#34;&gt;41&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-42&#34;&gt;42&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-43&#34;&gt;43&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-44&#34;&gt;44&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-45&#34;&gt;45&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-46&#34;&gt;46&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-47&#34;&gt;47&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-48&#34;&gt;48&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-49&#34;&gt;49&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-50&#34;&gt;50&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-51&#34;&gt;51&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-52&#34;&gt;52&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-53&#34;&gt;53&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-54&#34;&gt;54&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4439253066833-55&#34;&gt;55&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-2&#34;&gt;&lt;span class=&#34;crayon-t&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Portal &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;Component&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-4&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;componentWillMount&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;canUseDom&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-7&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-8&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-9&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-10&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;typeof&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;===&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#39;function&#39;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-11&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-12&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-13&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-14&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;ReactDOM&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;findDOMNode&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-15&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-c&#34;&gt;// The container is a React component that has not yet been rendered.&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-16&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-c&#34;&gt;// Don&#39;t set the container node yet.&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-17&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-18&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-19&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-20&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;setContainer&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-21&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-22&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-23&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;componentDidMount&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-24&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;_portalContainerNode&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-25&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;setContainer&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-26&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;forceUpdate&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;onRendered&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-27&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;onRendered&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-28&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;onRendered&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-29&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-30&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-31&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-32&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;componentWillReceiveProps&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;nextProps&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-33&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;nextProps&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;!==&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-34&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;setContainer&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;nextProps&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-35&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-36&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-37&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-38&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-39&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;_portalContainerNode&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-t&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-40&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-41&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-42&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;setContainer&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-43&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;_portalContainerNode&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;getContainer&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-44&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;ownerDocument&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-45&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-46&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-47&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-48&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-49&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-st&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;_portalContainerNode&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;?&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-50&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;ReactDOM&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;createPortal&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;_portalContainerNode&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-51&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-t&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-52&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-53&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-54&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4439253066833-55&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0057 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The render safely handles the scenario when the target container is not available yet, and in &lt;code&gt;componentDidMount&lt;/code&gt; lifecycle hook, once the target is available, we set &lt;code&gt;this._portalContainerNode&lt;/code&gt; and trigger a re-render.&lt;/p&gt;
&lt;p&gt;This approach also makes it trivial to fallback to a local node if the consumer hasn’t supplied us with a &lt;code&gt;sidebarRef&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44a7a4440605757798&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4440605757798-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4440605757798-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44a7a4440605757798-3&#34;&gt;3&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4440605757798-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4440605757798-2&#34;&gt;&lt;span class=&#34;crayon-v&#34;&gt;getSlot&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;slotRef&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;localSlotRef&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;current&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44a7a4440605757798-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0008 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Note that things like event bubbling will work identially in both scenarios even if the component is rendered out of the DOM hierarchy of parent. React’s synthetic event implementation is aware of portals and events are propagated through portal boundaries to parent components.&lt;/p&gt;


     ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://lorefnon.me/2015/11/22/an-answer-to-react-is-the-new-java.html</guid>
            <title>An answer to &#34;React is the new Java&#34;</title>
            <link>https://lorefnon.me/2015/11/22/an-answer-to-react-is-the-new-java.html</link>
            <category>Javascript</category>
            <category>React</category>
            <pubDate>Sun, 22 Nov 2015 00:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;This post is essentially my attempt to answer some of the concerns presented in this &lt;a href=&#34;https://news.ycombinator.com/item?id=10609159&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;opinion&lt;/a&gt; posted in HN. The author has likened the success of React with the success of Java, exemplifying how time again, what (s)he identifies as worse technology, has been pushed to a higher popularity rather than more competent alternatives available.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have been learning new technologies pretty much continuously. It&amp;#39;s not impossible, especially if you follow sites like Hacker News, to keep a finger on the direction of the industry, and then try to stay on top of the next new hot technology of the year.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;But I hear you on the &amp;quot;worse&amp;quot; technology sometimes winning. You mentioned Java; it was worse than just about all other major contenders, and is only finally losing popularity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;On a current technology fad: React seems to be designed to ignore 40 years of accumulated software best practices. [1] Separation of concerns? Who needs that any more? And the rationale for it is that it allows teams of 100 developers work together on an app.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Separation-of-Concerns&#34;&gt;&lt;a href=&#34;#Separation-of-Concerns&#34; class=&#34;headerlink&#34; title=&#34;Separation of Concerns ?&#34;&gt;&lt;/a&gt;Separation of Concerns ?&lt;/h2&gt;&lt;p&gt;Well, separation on concerns is a good thing to have. But only when the concerns actually translate to different responsibilities and not when they are multiple facets of the same problem.&lt;/p&gt;
&lt;p&gt;The way I see it, managing an identifyable entity in the presentation layer is a singular concern. Breaking up this presentation entity into decoupled parts - a chunk of text based HTML template, a stylesheet to make this template visually appealing and associated javascript that alters the DOM structure depending on user interaction of change of application state, does not facilitate separation of concerns, it makes things less cohesive. &lt;a href=&#34;http://thebojan.ninja/2015/04/08/high-cohesion-loose-coupling/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Loose coupling, High Cohesion&lt;/a&gt; is a classic best practice, proven time again, and React does not ignore this, it accentuates its importance.&lt;/p&gt;
&lt;p&gt;Especially in web-applications the styling rules are intrinsically linked to the DOM structure of a widget and so is the javascript that is responsible for syncing the application state to and from the DOM. Multitude of javascript libraries have recognized this long before React including but not limited to widely popular libraries like &lt;a href=&#34;http://knockoutjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Knockout&lt;/a&gt;, &lt;a href=&#34;https://dojotoolkit.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Dojo&lt;/a&gt; and &lt;a href=&#34;https://www.sencha.com/products/extjs/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;ExtJS&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;Fads-are-not-born-from-thin-air&#34;&gt;&lt;a href=&#34;#Fads-are-not-born-from-thin-air&#34; class=&#34;headerlink&#34; title=&#34;Fads are not born from thin air&#34;&gt;&lt;/a&gt;Fads are not born from thin air&lt;/h2&gt;&lt;p&gt;Promotion of best practices like &lt;a href=&#34;https://medium.com/@joshblack/stateless-components-in-react-0-14-f9798f8b992d#.h457qzmob&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Stateless components&lt;/a&gt; and &lt;a href=&#34;https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750#.6lh6otq97&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;composition of higher order components&lt;/a&gt; goes a long way towards ensuring separation of concerns where they matter.&lt;/p&gt;
&lt;p&gt;The upcoming Web Component technology is fueled by the widespread need for true component oriented building blocks and popularity of frameworks like Google Polymer highlights it very well.&lt;/p&gt;
&lt;h2 id=&#34;JSX-and-designer-languages&#34;&gt;&lt;a href=&#34;#JSX-and-designer-languages&#34; class=&#34;headerlink&#34; title=&#34;JSX and designer languages&#34;&gt;&lt;/a&gt;JSX and designer languages&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Open standards? Nah, how about lock-in to custom language extensions that will prevent you from migrating your code to the next web standard! Much better.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JSX is a custom language extension alright but it is not mandatory for using React. It is &lt;a href=&#34;http://jamesknelson.com/learn-raw-react-no-jsx-flux-es6-webpack/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;fairly easy&lt;/a&gt; to use vanilla javascript and benefit from all the features of React. In fact it is also easy to use React with other AltJS languages like &lt;a href=&#34;http://blog.vjeux.com/2013/javascript/react-coffeescript.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Coffeescript&lt;/a&gt;, &lt;a href=&#34;http://lorefnon.me/2015/09/21/react-and-livescript-in-harmony.html&#34;&gt;Livescript&lt;/a&gt; and &lt;a href=&#34;https://github.com/Asana/typed-react&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Typescript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While I agree that without JSX, the code is much more verbose - there are solutions like &lt;a href=&#34;https://github.com/mlmorg/react-hyperscript&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;React hyperscript&lt;/a&gt; that let you express the DOM structure within javascript, or &lt;a href=&#34;https://github.com/wix/react-templates&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;React Templates&lt;/a&gt; and &lt;a href=&#34;https://github.com/jadejs/react-jade&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;React Jade&lt;/a&gt; which allow you to use external templates with React.&lt;/p&gt;
&lt;p&gt;Also there is a &lt;a href=&#34;https://facebook.github.io/jsx/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;draft specification&lt;/a&gt; for JSX in place and some other frameworks have already &lt;a href=&#34;https://github.com/insin/msx&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;started&lt;/a&gt; adopting it.&lt;/p&gt;
&lt;h2 id=&#34;About-open-standards&#34;&gt;&lt;a href=&#34;#About-open-standards&#34; class=&#34;headerlink&#34; title=&#34;About open standards&#34;&gt;&lt;/a&gt;About open standards&lt;/h2&gt;&lt;h3 id=&#34;Web-Components&#34;&gt;&lt;a href=&#34;#Web-Components&#34; class=&#34;headerlink&#34; title=&#34;Web Components&#34;&gt;&lt;/a&gt;Web Components&lt;/h3&gt;&lt;p&gt;The reasons for not using an open standard like web components have been &lt;a href=&#34;https://github.com/facebook/react/issues/5052#issuecomment-145594782&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;explained&lt;/a&gt; by the React team:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It has turned out that the spec is incomplete with regard to things like event delegation and there are still major changes being pushed from various sides, such as Mozilla. What was in Polymer&amp;#x2F;Chrome is not the final incarnation so we&amp;#39;ve had to revert some of the support that we already added (e.g. support for event handling in shadow trees).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;In terms of strategy, we&amp;#39;ll go forward with as if it didn&amp;#39;t exist and try to improve interop at the React or React-like component layer instead. I&amp;#39;ve talked with members of other popular UI frameworks and they seem to feel the same. In fact, we probably have a better chance at implementing solid interop in user land.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In fact there already exist some &lt;a href=&#34;http://addyosmani.com/blog/component-interop-with-react-and-custom-elements/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;resources&lt;/a&gt; for working with React and Web-components in same application.&lt;/p&gt;
&lt;p&gt;There is nothing preventing us from migrating to the next web standard. As others have pointed out in the thread, removing JSX is just a matter of running the transformer against the existing codebase and checking in the generated javascript. The output is still human readable.&lt;/p&gt;
&lt;h3 id=&#34;XML-in-javascript&#34;&gt;&lt;a href=&#34;#XML-in-javascript&#34; class=&#34;headerlink&#34; title=&#34;XML in javascript&#34;&gt;&lt;/a&gt;XML in javascript&lt;/h3&gt;&lt;p&gt;Attempts towards seamless incorporation of XML in ecmascript is not a new idea. Actionscript has had that since ages. While E4X is an &lt;a href=&#34;https://en.wikipedia.org/wiki/ECMAScript_for_XML&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;open standard&lt;/a&gt;, pragmatic reasons have been &lt;a href=&#34;http://blog.vjeux.com/2013/javascript/jsx-e4x-the-good-parts.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;put forward&lt;/a&gt; by React team for not embracing it entirely:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The major use case of XML within Javascript is to write HTML tags. Unfortunately, what E4X generates is not a DOM node. In order to use it to generate DOM nodes, you&amp;#39;ve got to do a conversion phase not provided by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The second use case of XML is to represent data. In Javascript world, this use case is already being fulfilled by JSON. E4X only supports strings as a data type where Javascript objects can contain numbers, booleans, functions ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;All the code is not going to be converted to E4X right away. There&amp;#39;s going to be a transition phase where E4X and non E4X code will have to co-exist. The fact that the objects E4X generates are not accessible from non E4X code means that none of the libraries ever written can work with E4X structures.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;On-meritocracy-vs-mediocracy&#34;&gt;&lt;a href=&#34;#On-meritocracy-vs-mediocracy&#34; class=&#34;headerlink&#34; title=&#34;On meritocracy vs mediocracy&#34;&gt;&lt;/a&gt;On meritocracy vs mediocracy&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;And how many app teams have 100 or more active developers? Probably fewer than a dozen, and I submit that none of them probably should. Certainly not the Facebook app: It has a lot of features, but not that many features, and yet it has a 150Mb footprint.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;When I hear things like that, I can&amp;#39;t help but fill in &amp;quot;junior&amp;quot; or &amp;quot;mediocre&amp;quot; in front of &amp;quot;developers.&amp;quot; React helps to prevent people from breaking each others&amp;#39; code when you have bloated development teams filled with junior developers. React has some cool ideas, but all told I think it&amp;#39;s a step backward for software engineering, and certainly isn&amp;#39;t as much of a help for small teams, especially if you want to have a CSS&amp;#x2F;SCSS&amp;#x2F;LESS expert styling your product without having to dig through JSX files, for instance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a small app with a small team, there is little use for any framework at all, but software applications have this uncanny tendency to unexpectedly grow large depending on changing requirements, expanding scope. Given the above, I would certainly feel more comfortable working on a system where I can change the appearance of a component with confidence that will not introduce subtle changes in totally unrelated parts of my application, probably parts that I know nothing about.&lt;/p&gt;
&lt;p&gt;While yes, there are fewer teams that have 100 or more active developers, but high churn rates are an unavoidable problem especially in the startup ecosystems. While a competent developer will certainly be able to jump into an unknown codebase and in due time figure out his&amp;#x2F;her way - but if the codebase is structured around best practices distilled by the community the time required in the same is drastically reduced. Optimizing the process around that seems like a very good idea.&lt;/p&gt;
&lt;h2 id=&#34;On-stylesheets-a-system-of-cascading-problems&#34;&gt;&lt;a href=&#34;#On-stylesheets-a-system-of-cascading-problems&#34; class=&#34;headerlink&#34; title=&#34;On stylesheets - a system of cascading problems&#34;&gt;&lt;/a&gt;On stylesheets - a system of cascading problems&lt;/h2&gt;&lt;p&gt;Adding to the problem is that automated regression testing of CSS is time consuming and error prone. While there are &lt;a href=&#34;https://css-tricks.com/automating-css-regression-testing/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;solutions&lt;/a&gt; I think the crux of the problem is that our current styling system is a broken technology - globally shared stylesheets are evil and technologies like &lt;a href=&#34;https://github.com/FormidableLabs/radium&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Radium&lt;/a&gt; are steps in the right direction.&lt;/p&gt;
&lt;p&gt;While it isn&amp;#39;t like we have not tried to solve this problem &lt;a href=&#34;https://gridstylesheets.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;before&lt;/a&gt;, I am really glad to see practical alternatives to stylesheets gathering traction.&lt;/p&gt;
&lt;h2 id=&#34;The-good-parts&#34;&gt;&lt;a href=&#34;#The-good-parts&#34; class=&#34;headerlink&#34; title=&#34;The good parts&#34;&gt;&lt;/a&gt;The good parts&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;I do like React&amp;#39;s idea of the Virtual DOM for optimization, but you can get that without using React. [2] React Native is great for using native components and driving them from JavaScript, but it&amp;#39;s also not the only game in town. [3]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I agree, much has been written about these benefits, and the availability of alternatives is not exactly a secret either. I don&amp;#39;t have much to add.&lt;/p&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Back to the original point, though: You can stay on top of the Hot New Technologies, but when there are good technical reasons to use alternate technologies, stay on top of those as well. And then explain clearly to your clients (or employers) why the current fad is a fad, and how to get the key benefits of that stack without its drawbacks. Oh, and choose clients (or employers) who will listen to strong technical arguments. :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While I disagree with the primary premise, this is a very strong and sound advise. I whole-heartedly agree that solutions should be rationally vetted and benchmarked before being put to use. I hope that arguments I have presented above are perceived as rationally just. Any comments or suggestions are more than welcome.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://lorefnon.me/2015/09/21/react-and-livescript-in-harmony.html</guid>
            <title>React and Livescript in harmony</title>
            <link>https://lorefnon.me/2015/09/21/react-and-livescript-in-harmony.html</link>
            <category>Javascript</category>
            <category>React</category>
            <category>Functional Programming</category>
            <pubDate>Mon, 21 Sep 2015 00:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Overview&#34;&gt;&lt;a href=&#34;#Overview&#34; class=&#34;headerlink&#34; title=&#34;Overview&#34;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;http://livescript.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Livescript&lt;/a&gt; is a programming language that compiles to readable javascript (similar to coffeescript) and provides language level facilities to &lt;a href=&#34;http://livescript.net/#inspiration&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;encourage&lt;/a&gt; functional programming. &lt;a href=&#34;https://facebook.github.io/react/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;React.js&lt;/a&gt; is a user interface library from &lt;a href=&#34;https://facebook.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;facebook&lt;/a&gt; that uses &lt;a href=&#34;http://calendar.perfplanet.com/2013/diff/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;intelligent heuristics&lt;/a&gt; for efficient DOM updates, simplifying the process of building data driven applications. This post outlines how the two can play well together, and tries to demostrate how livescript allows us write much more compact and succinct code. Basic familiarity with both of them is assumed.&lt;/p&gt;
&lt;p&gt;To begin with let us see what a basic component looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs html&#34;&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;application-container&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;br&gt;

&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;ContactList = React.create-&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;do&lt;/span&gt;
  render: -&amp;gt;
    React.create-element &lt;span class=&#34;hljs-string&#34;&gt;\ul,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @props.contacts.&lt;span class=&#34;hljs-keyword&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-params&#34;&gt;(contact)&lt;/span&gt;-&amp;gt;&lt;/span&gt;
      React.create-element &lt;span class=&#34;hljs-string&#34;&gt;\li,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, contact.name

el = React.create-element ContactList, contacts: [
  * name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Harry Potter&amp;#x27;&lt;/span&gt;
  * name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Albus Dumbledore&amp;#x27;&lt;/span&gt;
]

React.render el, document.get-element-&lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt;-id &lt;span class=&#34;hljs-string&#34;&gt;\application-container&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;img src=&#34;/images/Screen Shot 2015-09-21 at 12.42.18 pm.png&#34;&gt;

&lt;p&gt;This is very similar to what we would have written if we were using vanilla javascript. The only primary advantages are indentation based nesting, elimination of a lot of superfluous syntax - braces and parenthesis and implicit returns. However we can do much better than this.&lt;/p&gt;
&lt;p&gt;Because Livescript was forked from Coffeescript, it inherits Coffeescript&amp;#39;s class syntax which we can use to extend &lt;code&gt;React.Component&lt;/code&gt;. However the benefits of doing so are pretty-much marginal.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;ContactList&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title class_ inherited__&#34;&gt;React&lt;/span&gt;.Component

  render: -&amp;gt;
    React.create-element &lt;span class=&#34;hljs-string&#34;&gt;\ul,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @props.contacts.&lt;span class=&#34;hljs-keyword&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-params&#34;&gt;(contact)&lt;/span&gt;-&amp;gt;&lt;/span&gt;
      React.create-element &lt;span class=&#34;hljs-string&#34;&gt;\li,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, contact.name&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One thing that we may notice is that the above code does not use &lt;a href=&#34;https://facebook.github.io/react/docs/jsx-in-depth.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;JSX&lt;/a&gt;. While yes, it is &lt;a href=&#34;https://github.com/facebook/react/issues/47#issuecomment-18877423&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;possible&lt;/a&gt; to use JSX with livescript using backticks to escape xml constructs and then passing the generated js to babel, it is a hack we better forgo. As we will see soon, livescript native constructs allow for much more succinct expressions than the xml boilerplate that comes JSX.&lt;/p&gt;
&lt;p&gt;Livescript&amp;#39;s feature that almost everything is a expression is particularly helpful when we have conditional logic in our dom generation code.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;element = React~create-element

ContactList = React.create-&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;do&lt;/span&gt;

  render: -&amp;gt;
    element &lt;span class=&#34;hljs-string&#34;&gt;\ul,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @props.contacts.&lt;span class=&#34;hljs-keyword&#34;&gt;map&lt;/span&gt; &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-params&#34;&gt;(contact)&lt;/span&gt;-&amp;gt;&lt;/span&gt;
      element &lt;span class=&#34;hljs-string&#34;&gt;\li,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;,
        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; contact.email
          element &lt;span class=&#34;hljs-string&#34;&gt;\a,&lt;/span&gt; href: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mailto:&lt;span class=&#34;hljs-subst&#34;&gt;#&amp;#123;contact.email&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;, contact.name
        &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;
          contact.name

el = element ContactList, contacts: [
  * name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Harry Potter&amp;#x27;&lt;/span&gt;
  * name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Albus Dumbledore&amp;#x27;&lt;/span&gt;
    email: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;albus@hogwarts.magic&amp;#x27;&lt;/span&gt;
]

React.render el, document.get-element-&lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt;-id &lt;span class=&#34;hljs-string&#34;&gt;\application-container&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;img src=&#34;/images/Screen Shot 2015-09-21 at 12.42.05 pm.png&#34;&gt;

&lt;p&gt;When the render function becomes complex, it is often more readable to use livescript&amp;#39;s pipe operator to chain the operations. This is particularly handy in conjugation with utility libraries geared towards functional programming - the example below uses &lt;a href=&#34;http://ramdajs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Ramda&lt;/a&gt;. Other alternatives include &lt;a href=&#34;http://underscorejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;underscore&lt;/a&gt;, &lt;a href=&#34;https://lodash.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;lodash&lt;/a&gt;, &lt;a href=&#34;http://www.preludels.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;prelude.ls&lt;/a&gt; etc.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;element = React~create-element

ContactList = React.create-&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;do&lt;/span&gt;

  render-avatar: &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-params&#34;&gt;(contact)&lt;/span&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; contact.avatar
    &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\img,&lt;/span&gt; src: contact.avatar, height: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;, width: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;
    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;N/A&amp;#x27;&lt;/span&gt;

  render-label: &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-params&#34;&gt;(contact)&lt;/span&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; contact.email
    &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\a,&lt;/span&gt; href: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mailto:&lt;span class=&#34;hljs-subst&#34;&gt;#&amp;#123;contact.email&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;, contact.name
    &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, contact.name

  render-contact-row: &lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-params&#34;&gt;(contact)&lt;/span&gt;-&amp;gt;&lt;/span&gt;
    element &lt;span class=&#34;hljs-string&#34;&gt;\tr,&lt;/span&gt; key: contact.id, [
      element &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @render-avatar contact
      element &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @render-label contact
    ]

  render-head: -&amp;gt;
    element &lt;span class=&#34;hljs-string&#34;&gt;\thead,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, [
      element &lt;span class=&#34;hljs-string&#34;&gt;\tr,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, [
        element &lt;span class=&#34;hljs-string&#34;&gt;\th,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Avatar&amp;#x27;&lt;/span&gt;
        element &lt;span class=&#34;hljs-string&#34;&gt;\th,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Name&amp;#x27;&lt;/span&gt;
      ]
    ]

  render: -&amp;gt;
    @props.contacts
    |&amp;gt; R.&lt;span class=&#34;hljs-keyword&#34;&gt;map&lt;/span&gt; @~render-contact-row
    |&amp;gt; &lt;span class=&#34;hljs-function&#34;&gt;~&amp;gt;&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\tbody,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;
    |&amp;gt; &lt;span class=&#34;hljs-function&#34;&gt;~&amp;gt;&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\table,&lt;/span&gt; class-name: &lt;span class=&#34;hljs-string&#34;&gt;\contacts&lt;/span&gt; , [ @render-head!, &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt; ]

el = element ContactList, contacts: [
  * id: &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;
    name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Harry Potter&amp;#x27;&lt;/span&gt;
    avatar: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;http://cdn.playbuzz.com/cdn/8de88741-d729-4319-aa46-e8a544a20439/f7cade9d-8daf-42b3-8839-3e0e1f3db283.jpeg&amp;#x27;&lt;/span&gt;
  * id: &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,
    name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Albus Dumbledore&amp;#x27;&lt;/span&gt;
    email: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;albus@hogwarts.magic&amp;#x27;&lt;/span&gt;
]


React.render el, document.get-element-&lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt;-id &lt;span class=&#34;hljs-string&#34;&gt;\application-container&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;img src=&#34;/images/Screen Shot 2015-09-21 at 2.15.15 pm.png&#34;&gt;

&lt;p&gt;It may be tempting to further shorten the functions taking advantage of livescript&amp;#39;s default argument &lt;code&gt;it&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;render-avatar: -&amp;gt;
  &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.avatar
  &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\img,&lt;/span&gt; src: &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.avatar, height: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;, width: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;
  &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;N/A&amp;#x27;&lt;/span&gt;

render-label: -&amp;gt;
  &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.email
  &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\a,&lt;/span&gt; href: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mailto:&lt;span class=&#34;hljs-subst&#34;&gt;#&amp;#123;&lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.email&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.name
  &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.name

render-contact-row: -&amp;gt;
  element &lt;span class=&#34;hljs-string&#34;&gt;\tr,&lt;/span&gt; key: &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.id, [
    element &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @render-avatar &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;
    element &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @render-label &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;
  ]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But I strongly recommend against doing that, because having the arguments specified in the function signature upfront enhances readability.&lt;/p&gt;
&lt;p&gt;Also note that the top down construction flow composition can also be realized in javascript using Ramda&amp;#39;s &lt;code&gt;pipe&lt;/code&gt; but livescript just makes it simpler by providing a language level operator.&lt;/p&gt;
&lt;p&gt;For simpler components (which are just responsible for presenting something passed as props, and do not need lifecycle methods etc.) it may be useful to define a micro-component builder:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-title&#34;&gt;micro-component&lt;/span&gt; = &lt;span class=&#34;hljs-params&#34;&gt;(render)&lt;/span&gt;-&amp;gt;&lt;/span&gt; React.create-factory React.create-&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &amp;#123; render &amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once we have that, it makes it a lot more easier for us to follow React&amp;#39;s recommendation of having lightweight modular components which can be easily composed:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;ContactAvatar = micro-component -&amp;gt;
  &amp;#123; contact &amp;#125; = @props
  &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; contact.avatar
  &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\img,&lt;/span&gt; src: contact.avatar, height: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;, width: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;
  &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;N/A&amp;#x27;&lt;/span&gt;

ContactLabel = micro-component -&amp;gt;
  &amp;#123; contact &amp;#125; = @props
  &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; contact.email
  &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\a,&lt;/span&gt; href: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mailto:&lt;span class=&#34;hljs-subst&#34;&gt;#&amp;#123;contact.email&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;, contact.name
  &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; element &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, contact.name

ContactListRow = micro-component -&amp;gt;
  element &lt;span class=&#34;hljs-string&#34;&gt;\tr,&lt;/span&gt; key: @props.contact.id, [
    element &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, ContactAvatar @props
    element &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, ContactLabel @props
  ]

ContactList = micro-component -&amp;gt;
  element &lt;span class=&#34;hljs-string&#34;&gt;\table,&lt;/span&gt; class-name: &lt;span class=&#34;hljs-string&#34;&gt;\contacts,&lt;/span&gt; [
    element &lt;span class=&#34;hljs-string&#34;&gt;\thead,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, [
      element &lt;span class=&#34;hljs-string&#34;&gt;\tr,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, [
        element &lt;span class=&#34;hljs-string&#34;&gt;\th,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Avatar&amp;#x27;&lt;/span&gt;
        element &lt;span class=&#34;hljs-string&#34;&gt;\th,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Name&amp;#x27;&lt;/span&gt;
      ]
    ]
    element &lt;span class=&#34;hljs-string&#34;&gt;\tbody,&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;, @props.contacts.&lt;span class=&#34;hljs-keyword&#34;&gt;map&lt;/span&gt; -&amp;gt; ContactListRow &lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt;
      contact: &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;
      key: &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.id
  ]

el = ContactList contacts: [
  * id: &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;
    name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Harry Potter&amp;#x27;&lt;/span&gt;
    avatar: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;http://cdn.playbuzz.com/cdn/8de88741-d729-4319-aa46-e8a544a20439/f7cade9d-8daf-42b3-8839-3e0e1f3db283.jpeg&amp;#x27;&lt;/span&gt;
  * id: &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,
    name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Albus Dumbledore&amp;#x27;&lt;/span&gt;
    email: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;albus@hogwarts.magic&amp;#x27;&lt;/span&gt;
]
React.render el, document.get-element-&lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt;-id &lt;span class=&#34;hljs-string&#34;&gt;\application-container&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Libraries like &lt;a href=&#34;https://github.com/mlmorg/react-hyperscript&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;&lt;code&gt;react-hyperscript&lt;/code&gt;&lt;/a&gt; may be used to further reduce the dom construction boilerplate :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;
&lt;span class=&#34;hljs-built_in&#34;&gt;require&lt;/span&gt;! &amp;#123; react-hyperscript: h, react: React &amp;#125;

ContactAvatar = micro-component -&amp;gt;
  &amp;#123; contact &amp;#125; = @props
  &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; contact.avatar
  &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; h &lt;span class=&#34;hljs-string&#34;&gt;\img,&lt;/span&gt; src: contact.avatar, height: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;, width: &lt;span class=&#34;hljs-number&#34;&gt;100&lt;/span&gt;
  &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; h &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;N/A&amp;#x27;&lt;/span&gt;

ContactLabel = micro-component -&amp;gt;
  &amp;#123; contact &amp;#125; = @props
  &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; contact.email
  &lt;span class=&#34;hljs-keyword&#34;&gt;then&lt;/span&gt; h &lt;span class=&#34;hljs-string&#34;&gt;\a,&lt;/span&gt; href: &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mailto:&lt;span class=&#34;hljs-subst&#34;&gt;#&amp;#123;contact.email&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;, contact.name
  &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt; h &lt;span class=&#34;hljs-string&#34;&gt;\span,&lt;/span&gt; contact.name

ContactListRow = micro-component -&amp;gt;
  h &lt;span class=&#34;hljs-string&#34;&gt;\tr,&lt;/span&gt; key: @props.contact.id, [
    h &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; ContactAvatar @props
    h &lt;span class=&#34;hljs-string&#34;&gt;\td,&lt;/span&gt; ContactLabel @props
  ]

ContactList = micro-component -&amp;gt;
  h &lt;span class=&#34;hljs-string&#34;&gt;\table.contacts,&lt;/span&gt; [
    h &lt;span class=&#34;hljs-string&#34;&gt;\thead,&lt;/span&gt; [
      h &lt;span class=&#34;hljs-string&#34;&gt;\tr,&lt;/span&gt; [
        h &lt;span class=&#34;hljs-string&#34;&gt;\th,&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Avatar&amp;#x27;&lt;/span&gt;
        h &lt;span class=&#34;hljs-string&#34;&gt;\th,&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Name&amp;#x27;&lt;/span&gt;
      ]
    ]
    h &lt;span class=&#34;hljs-string&#34;&gt;\tbody,&lt;/span&gt; @props.contacts.&lt;span class=&#34;hljs-keyword&#34;&gt;map&lt;/span&gt; -&amp;gt; ContactListRow &lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt;
      contact: &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;
      key: &lt;span class=&#34;hljs-literal&#34;&gt;it&lt;/span&gt;.id
  ]

el = ContactList contacts: [
  * id: &lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;
    name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Harry Potter&amp;#x27;&lt;/span&gt;
    avatar: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;http://cdn.playbuzz.com/cdn/8de88741-d729-4319-aa46-e8a544a20439/f7cade9d-8daf-42b3-8839-3e0e1f3db283.jpeg&amp;#x27;&lt;/span&gt;
  * id: &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;,
    name: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Albus Dumbledore&amp;#x27;&lt;/span&gt;
    email: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;albus@hogwarts.magic&amp;#x27;&lt;/span&gt;
]
React.render el, document.get-element-&lt;span class=&#34;hljs-keyword&#34;&gt;by&lt;/span&gt;-id &lt;span class=&#34;hljs-string&#34;&gt;\application-container&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apart from getting rid of null for attribute hashes, hyperscript is particularly useful for shorter syntax for class names and ids. Also it insulates our codebase against changes in the DOM builder API, which have happened in past.&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
