<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lorefnon.me</id>
    <title>Icicles of Thought • Posts by &#34;emacs&#34; tag</title>
    <link href="https://lorefnon.me" />
    <updated>2018-07-14T00:00:00.000Z</updated>
    <category term="Javascript" />
    <category term="KnockoutJS" />
    <category term="Ruby" />
    <category term="EventMachine" />
    <category term="Websockets" />
    <category term="SQLite" />
    <category term="Jade" />
    <category term="Node.js" />
    <category term="Rails" />
    <category term="Emacs" />
    <category term="Gulp" />
    <category term="ActiveAdmin" />
    <category term="ActiveRecord" />
    <category term="Devise" />
    <category term="Integration" />
    <category term="ZSH" />
    <category term="Productivity Hacks" />
    <category term="OCR" />
    <category term="Design Patterns" />
    <category term="InfluxDB" />
    <category term="Grafana" />
    <category term="React" />
    <category term="Functional Programming" />
    <category term="ES6" />
    <category term="Helm" />
    <category term="SPF" />
    <category term="CSS" />
    <category term="Redux" />
    <category term="Redux-loop" />
    <category term="Frontend" />
    <category term="Vagrant" />
    <category term="Clojure" />
    <category term="Hashicorp" />
    <category term="Typescript" />
    <category term="ReasonML" />
    <category term="Next.js" />
    <category term="Koa" />
    <category term="Apollo" />
    <category term="GraphQL" />
    <category term="MongoDB" />
    <category term="Automerge" />
    <category term="CRDT" />
    <category term="SVG" />
    <category term="VSCode" />
    <category term="Comlink" />
    <category term="Web-workers" />
    <category term="io-ts" />
    <category term="MobX" />
    <category term="MobX-State-Tree" />
    <category term="Routing" />
    <category term="HAR" />
    <category term="Jq" />
    <category term="Lit-html" />
    <category term="Stimulus" />
    <category term="Kotlin" />
    <category term="Vert.X" />
    <category term="Vert.X-Web" />
    <category term="Backend-development" />
    <category term="API-development" />
    <category term="Java" />
    <category term="JOOQ" />
    <category term="Ruby on Rails" />
    <category term="Liquibase" />
    <category term="tbls" />
    <category term="jOOQ" />
    <category term="Vue" />
    <category term="TypeScript" />
    <category term="Gradle" />
    <category term="Spring" />
    <category term="Spring-Boot" />
    <category term="gRPC" />
    <category term="Redis" />
    <category term="Database" />
    <category term="Exposed" />
    <category term="vim" />
    <category term="kotlin" />
    <category term="spring" />
    <category term="spring-security" />
    <category term="komapper" />
    <category term="spring-boot" />
    <entry>
        <id>https://lorefnon.me/2018/07/14/getting-productive-with-selection-and-navigation-in-emacs/</id>
        <title>Getting productive with selection and navigation in Emacs</title>
        <link rel="alternate" href="https://lorefnon.me/2018/07/14/getting-productive-with-selection-and-navigation-in-emacs/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon.min.css&#34; &gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon-flatui-light.css&#34; &gt;



	&lt;p&gt;This post is intended to primarily benefit people coming from other, so called “modern” editors to Emacs. Emacs veterans are likely to find most of the tips here very elementary.&lt;/p&gt;
&lt;p&gt;I have observed that many programmers habituated to newer editors have many implicit assumptions about editing workflows which simply don’t hold true within Emacs environment and this prevents them from being productive to the fullest extent.&lt;/p&gt;
&lt;p&gt;This post primarily focusses on how getting familiar with the concept of &lt;code&gt;marks&lt;/code&gt; and &lt;code&gt;regions&lt;/code&gt; in Emacs can result in productive workflows. These concepts, coupled with a few extensions can enable much more pleasurable code-editing workflows not easily achievable in more prevalent “modern” editors.&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more-265&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Marks and the Mark Ring&lt;/h2&gt;
&lt;p&gt;Perhaps among the first things which we learn when dipping toes into Emacs is that &lt;code&gt;C-spc&lt;/code&gt; is the keybinding used to select region.&lt;/p&gt;
&lt;p&gt;We start a selection with &lt;code&gt;C-spc&lt;/code&gt;, navigate to the the end of what we want to select, and then trigger a command to do something with the selection eg. Cut using &lt;code&gt;C-w&lt;/code&gt;, Copy using &lt;code&gt;M-w&lt;/code&gt; etc.&lt;a id=&#34;footnote-1-src&#34; href=&#34;#footnote-1&#34;&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While the above explanation usually suffices to get people started with elementary usage, the &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Setting-Mark.html&#34;&gt;concept of marks&lt;/a&gt; gets lost in the process.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C-spc&lt;/code&gt; (or more accurately &lt;code&gt;set-mark-command&lt;/code&gt; which this is key is bound to by default) actually does two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Marks the current position of cursor (called &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Point.html&#34;&gt;point&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Activates the region between mark and point&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once point has been marked, moving the point by inserting text, navigating etc. changes the active region. This active region, between the point and the mark, is what we see as highlighted. &lt;a id=&#34;footnote-2-src&#34; href=&#34;#footnote-2&#34;&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While this is &lt;i&gt;superficially&lt;/i&gt; similar to how selections behave in most other GUI applications, there are some important differences:&lt;/p&gt;
&lt;h3&gt;Commands can operate on invisible regions&lt;/h3&gt;
&lt;p&gt;A region is highlighted (visible) when it is active. But commands like kill (cut), kill-ring-save (copy) etc. operate on regions and don’t care whether or not the region is active. This can be surprising and may appear to be a bug when a &lt;code&gt;C-w&lt;/code&gt; copies away a large chunk of text even if there is no visible selection on screen.&lt;/p&gt;
&lt;p&gt;While it is &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://emacs.stackexchange.com/questions/2701/only-allow-kill-ring-save-if-there-is-highlighted-text&#34;&gt;possible&lt;/a&gt; to make Emacs behave like other prevalent editors in this respect, I find the Emacs behavior slightly better.&lt;/p&gt;
&lt;p&gt;This is because we can set the mark, continue typing, and then once done use &lt;code&gt;C-w&lt;/code&gt; to copy the current region. This is useful when we know beforehand that we are going to need what we are typing later, eg. multiple class/interface names which have partially shared names by conventions. We thereby save on the extra navigation that would otherwise be required after typing.&lt;/p&gt;
&lt;p&gt;Lets say we want to write the following (typescript) code:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44809186f423153030&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809186f423153030-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809186f423153030-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809186f423153030-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809186f423153030-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809186f423153030-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809186f423153030-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809186f423153030-7&#34;&gt;7&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809186f423153030-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809186f423153030-2&#34;&gt;&lt;span class=&#34;crayon-t&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;Foo &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;extens &lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;crayon-v&#34;&gt;Component&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;FooProps&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809186f423153030-3&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809186f423153030-4&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809186f423153030-5&#34;&gt;&lt;span class=&#34;crayon-t&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-e&#34;&gt;FooProps&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-sy&#34;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809186f423153030-6&#34;&gt;&lt;span class=&#34;crayon-sy&#34;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809186f423153030-7&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0040 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;We see that there is quite a bit of redundancy in the names. We can utilize the above trick when typing to easily having to retype anything.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/wp-content/uploads/2018/07/emacs-1.gif&#34; alt=&#34;&#34; width=&#34;644&#34; height=&#34;242&#34; class=&#34;alignnone size-full wp-image-290&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44809187d774674551&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;textarea wrap=&#34;soft&#34; class=&#34;crayon-plain print-no&#34; data-settings=&#34;dblclick&#34; readonly=&#34;&#34; style=&#34;-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 15px !important; line-height: 20px !important;&#34;&gt;class
      ^ C-spc =&amp;gt; Activate mark

class Foo
          ^ M-w =&amp;gt; Foo has now been killed (copied)

class Foo extends React.Component&amp;lt;
                                  ^ C-spc =&amp;gt; Activate mark

class Foo extends React.Component&amp;lt;
                                  ^ C-y =&amp;gt; Yank (paste) Foo

class Foo extends React.Component&amp;lt;FooProps
                                          ^ M-w =&amp;gt; FooProps has now been killed (copied)

class Foo extends React.Component&amp;lt;FooProps&amp;gt;

// Later

interface
           ^ C-y =&amp;gt; Yank FooProps

interface FooProps {}&lt;/textarea&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-13&#34;&gt;13&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-14&#34;&gt;14&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-15&#34;&gt;15&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-16&#34;&gt;16&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-17&#34;&gt;17&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-18&#34;&gt;18&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-19&#34;&gt;19&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-20&#34;&gt;20&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-21&#34;&gt;21&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-22&#34;&gt;22&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809187d774674551-23&#34;&gt;23&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-1&#34;&gt;class&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-2&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ C-spc =&amp;gt; Activate mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-4&#34;&gt;class Foo&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-5&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ M-w =&amp;gt; Foo has now been killed (copied)&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-6&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-7&#34;&gt;class Foo extends React.Component&amp;lt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-8&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ C-spc =&amp;gt; Activate mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-9&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-10&#34;&gt;class Foo extends React.Component&amp;lt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-11&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ C-y =&amp;gt; Yank (paste) Foo&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-12&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-13&#34;&gt;class Foo extends React.Component&amp;lt;FooProps&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-14&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ M-w =&amp;gt; FooProps has now been killed (copied)&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-15&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-16&#34;&gt;class Foo extends React.Component&amp;lt;FooProps&amp;gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-17&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-18&#34;&gt;// Later&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-19&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-20&#34;&gt;interface&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-21&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^ C-y =&amp;gt; Yank FooProps&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-22&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809187d774674551-23&#34;&gt;interface FooProps {}&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0006 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h3&gt;Marks are useful by themselves: for navigation&lt;/h3&gt;
&lt;p&gt;This is perhaps the &lt;strong&gt;least intuitive&lt;/strong&gt; part. Typing &lt;code&gt;C-u C-spc&lt;/code&gt; jumps to a mark. So frequently it is useful to set a mark &lt;i&gt;without&lt;/i&gt; needing a selection. Emacs keeps a buffer local history of marks in a &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Mark-Ring.html&#34;&gt;mark ring&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can use &lt;code&gt;C-spc C-spc&lt;/code&gt; to mark a point without activating a region.&lt;/p&gt;
&lt;p&gt;I personally prefer a slightly more old-school approach where I have &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.emacswiki.org/emacs/TransientMarkMode&#34;&gt;transient-mark-mode&lt;/a&gt; disabled by default.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba448091881829369365&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091881829369365-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091881829369365-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091881829369365-3&#34;&gt;3&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091881829369365-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091881829369365-2&#34;&gt;(setq deactivate-mark nil)&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091881829369365-3&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0002 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;In this configuration, the regions are not visible by default, and &lt;code&gt;C-spc&lt;/code&gt; just sets the mark and does not activate a region.&lt;/p&gt;
&lt;p&gt;It is occassionally convenient to highlight the region which will be selected, and for these cases we can can press &lt;code&gt;C-spc C-spc&lt;/code&gt;. The double invocation temporarily activates the transient mark mode and active regions become visible.&lt;/p&gt;
&lt;h3&gt;Helm integration&lt;/h3&gt;
&lt;p&gt;Helm is a sophisticated completion system that vastly overhauls the development workflow in Emacs. This tutorial does not focus on helm, an &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://tuhdo.github.io/helm-intro.html&#34;&gt;excellent one&lt;/a&gt; has already been written by Tuh Do. Helm requires some getting used to, but once habituated, its somewhat unconventional out-of-order matching system gets the job done a lot faster than other prevalent prefix-based or fuzzy-matching completion systems.&lt;/p&gt;
&lt;p&gt;Helm provides a command &lt;code&gt;helm-mark-ring&lt;/code&gt; which shows all active marks in current buffer, and makes it easy to quickly jump to them. There is an analogous command &lt;code&gt;helm-all-mark-rings&lt;/code&gt; which shows all marks across buffers.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/wp-content/uploads/2018/07/Screenshot-from-2018-07-09-01-56-23-1.png&#34; alt=&#34;&#34; width=&#34;1079&#34; height=&#34;459&#34; class=&#34;alignnone size-full wp-image-276&#34; srcset=&#34;/wp-content/uploads/2018/07/Screenshot-from-2018-07-09-01-56-23-1.png 1079w, /wp-content/uploads/2018/07/Screenshot-from-2018-07-09-01-56-23-1-300x128.png 300w, /wp-content/uploads/2018/07/Screenshot-from-2018-07-09-01-56-23-1-768x327.png 768w, /wp-content/uploads/2018/07/Screenshot-from-2018-07-09-01-56-23-1-1024x436.png 1024w&#34; sizes=&#34;(max-width: 1079px) 100vw, 1079px&#34;&gt;&lt;/p&gt;
&lt;p&gt;While marks are useful for a small number of recent locations, when we are exploring large projects, it is useful to tag points with a name, which are easy to remember and get back to. This is easily done by &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Bookmarks.html&#34;&gt;bookmarks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Not surprisingly helm provides a way to browse bookmarks too.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/wp-content/uploads/2018/07/Screenshot-from-2018-07-09-02-00-10-e1531511960485.png&#34; alt=&#34;&#34; width=&#34;378&#34; height=&#34;229&#34; class=&#34;alignnone size-full wp-image-272&#34; srcset=&#34;/wp-content/uploads/2018/07/Screenshot-from-2018-07-09-02-00-10-e1531511960485.png 378w, /wp-content/uploads/2018/07/Screenshot-from-2018-07-09-02-00-10-e1531511960485-300x182.png 300w&#34; sizes=&#34;(max-width: 378px) 100vw, 378px&#34;&gt;&lt;/p&gt;
&lt;p&gt;The bookmark will by default take the name from current region (useful for bookmarking definition sites of symbols in code), or if a region is not active, the current file name.&lt;/p&gt;
&lt;p&gt;It is also possible to save points to &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Position-Registers.html&#34;&gt;registers&lt;/a&gt; and access them later, but I don’t find myself using them much. Unlike registers, bookmarks are persistend over sessions, and can have descriptive names – both of which I find desirable when working with larger projects.&lt;/p&gt;
&lt;h2&gt; More on regions&lt;/h2&gt;
&lt;p&gt;Now that we know about marks, let us focus a bit on regions. As we mentioned above, a region is the area between point and a mark.&lt;/p&gt;
&lt;p&gt;Regions allow us to perform operations on a selection of text. Like the bookmark-set command described above, many commands have special support for active regions when it makes sense to simplify workflow in the context.&lt;/p&gt;
&lt;p&gt;Browsing Emacs documentation every once in a while is guaranteed to be a rewarding experience.&lt;/p&gt;
&lt;h3&gt;Expanding selections&lt;/h3&gt;
&lt;p&gt;In modern editors, we usually select a region by mouse or by use shift+arrow keys and if we realize later that the starting of selection was wrong, maybe we left out a character or a word, woops ! We have to start again.&lt;/p&gt;
&lt;p&gt;In Emacs this is not the case.&lt;/p&gt;
&lt;p&gt;Once we have a region, between a point and mark, we can use &lt;code&gt;C-x C-x&lt;/code&gt; to exchange the point and the mark. The relevant command is appropriately called exchange-point-and-mark.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba448091886145300849&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-13&#34;&gt;13&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-14&#34;&gt;14&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-15&#34;&gt;15&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-16&#34;&gt;16&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-17&#34;&gt;17&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-18&#34;&gt;18&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-19&#34;&gt;19&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-20&#34;&gt;20&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-21&#34;&gt;21&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-22&#34;&gt;22&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-23&#34;&gt;23&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-24&#34;&gt;24&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-25&#34;&gt;25&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-26&#34;&gt;26&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-27&#34;&gt;27&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-28&#34;&gt;28&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-29&#34;&gt;29&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-30&#34;&gt;30&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-31&#34;&gt;31&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-32&#34;&gt;32&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-33&#34;&gt;33&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-34&#34;&gt;34&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-35&#34;&gt;35&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-36&#34;&gt;36&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-37&#34;&gt;37&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-38&#34;&gt;38&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba448091886145300849-39&#34;&gt;39&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-1&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-2&#34;&gt;Lorem ipsum dolor sit amet&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-3&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ Cursor&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-4&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-5&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-6&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Point&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-7&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-8&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-9&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-10&#34;&gt;Lorem ipsum dolor sit amet&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-11&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ C-spc&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-12&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-13&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-14&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Point&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-15&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| ----region--|&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-16&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-17&#34;&gt;Lorem ipsum dolor sit amet&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-18&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; move&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-19&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; forward -&amp;gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-20&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-21&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-22&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-23&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Point&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-24&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| ----region--|&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-25&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-26&#34;&gt;Lorem ipsum dolor sit amet&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-27&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-28&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;C-x C-x&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-29&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-30&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-31&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-32&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Point&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-33&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;| ----region--|&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-34&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; |&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-35&#34;&gt;Lorem ipsum dolor sit amet&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-36&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-37&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Point and mark interchanged&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-38&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba448091886145300849-39&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0007 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Note that we still effectively have the same region. Exchanging point and mark allows us to grow (or shrink) the region from either ends.&lt;/p&gt;
&lt;h2&gt;Expanding and narrowing selections&lt;/h2&gt;
&lt;p&gt;Why navigation and selection usually coupled, navigation is not always the best option to expand selection.&lt;/p&gt;
&lt;p&gt;Magnar Sveen has written a very useful package &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/magnars/expand-region.el&#34;&gt;expand-region&lt;/a&gt; which allows us to create a region from the point and expand it by semantic units.&lt;/p&gt;
&lt;p&gt;So first invocation selects a word, and then the next invocation expands the region to a symbol, further to a string, further to the string wrapped in quotes and so on to encompass the whole line and finally the whole buffer.&lt;/p&gt;
&lt;h2&gt;Rectangular selections&lt;/h2&gt;
&lt;p&gt;Emacs also provides a somewhat unique feature for selecting two dimensional &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html&#34;&gt;rectangles&lt;/a&gt; of code. This is useful when working with tabular data, log files etc. as well as when creating ascii art.&lt;/p&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/CUA-Bindings.html&#34;&gt;CUA bindings&lt;/a&gt; come with an enhanced rectangle mode which I prefer over the above.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/wp-content/uploads/2018/07/Screenshot-from-2018-07-09-02-55-30.png&#34; alt=&#34;&#34; width=&#34;543&#34; height=&#34;107&#34; class=&#34;alignnone size-full wp-image-273&#34; srcset=&#34;/wp-content/uploads/2018/07/Screenshot-from-2018-07-09-02-55-30.png 543w, /wp-content/uploads/2018/07/Screenshot-from-2018-07-09-02-55-30-300x59.png 300w&#34; sizes=&#34;(max-width: 543px) 100vw, 543px&#34;&gt;&lt;/p&gt;
&lt;p&gt;One great feature here, is the ability to cycle through the corners and expand the rectangles in all directions&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/wp-content/uploads/2018/07/emacs-2.gif&#34; alt=&#34;&#34; width=&#34;936&#34; height=&#34;535&#34; class=&#34;alignnone size-full wp-image-299&#34;&gt;&lt;/p&gt;
&lt;h2&gt; Other navigation tips&lt;/h2&gt;
&lt;h3&gt;Jumping to locations of recent changes&lt;/h3&gt;
&lt;p&gt;It is often useful to jump to the location where a change was recently made. The appropriately named &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.emacswiki.org/emacs/GotoLastChange&#34;&gt;GotoLastChange extension&lt;/a&gt; is a very useful one that allows us to travel along the locations of edits.&lt;/p&gt;
&lt;h2&gt;Incremental search for navigation&lt;/h2&gt;
&lt;p&gt;Incremental search (&lt;code&gt;C-s&lt;/code&gt;) of emacs is really helpful quick navigation. isearch-forward and its regex powered companion isearch-companion-forward quickly become the goto utilities for navigating through large code files.&lt;/p&gt;
&lt;h3&gt;ISearch and Marks&lt;/h3&gt;
&lt;p&gt;When you start an incremental search, as you type, your cursor will move to the tail end of the next (best) prefix-match.&lt;/p&gt;
&lt;p&gt;When you complete the search with enter, the point where the search started is marked. This makes it possible to quickly jump back to the point from where we originally started entering the isearch query.&lt;/p&gt;
&lt;p&gt;A common error is to assume that the isearch match is an active region. &lt;strong&gt;It is not.&lt;/strong&gt; As should be obvious from the statement above, the region at the point of completion of search, is from the point where started the isearch to the point where the search finished.&lt;/p&gt;
&lt;p&gt;It is, however, frequently useful to have the matched content as the region, which can be accomplished by marking the head of the current match. This can be done by using &lt;code&gt;C-r&lt;/code&gt; to jump to head of current match.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44809188c566014432&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-6&#34;&gt;6&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-7&#34;&gt;7&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-8&#34;&gt;8&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-9&#34;&gt;9&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-10&#34;&gt;10&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-11&#34;&gt;11&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-12&#34;&gt;12&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-13&#34;&gt;13&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-14&#34;&gt;14&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-15&#34;&gt;15&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-16&#34;&gt;16&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-17&#34;&gt;17&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-18&#34;&gt;18&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-19&#34;&gt;19&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-20&#34;&gt;20&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-21&#34;&gt;21&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-22&#34;&gt;22&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-23&#34;&gt;23&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-24&#34;&gt;24&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-25&#34;&gt;25&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-26&#34;&gt;26&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-27&#34;&gt;27&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-28&#34;&gt;28&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-29&#34;&gt;29&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-30&#34;&gt;30&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-31&#34;&gt;31&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-32&#34;&gt;32&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-33&#34;&gt;33&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-34&#34;&gt;34&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-35&#34;&gt;35&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-36&#34;&gt;36&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-37&#34;&gt;37&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-38&#34;&gt;38&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-39&#34;&gt;39&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-40&#34;&gt;40&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-41&#34;&gt;41&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-42&#34;&gt;42&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-43&#34;&gt;43&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-44&#34;&gt;44&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-45&#34;&gt;45&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-46&#34;&gt;46&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-47&#34;&gt;47&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-48&#34;&gt;48&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-49&#34;&gt;49&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-50&#34;&gt;50&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-51&#34;&gt;51&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-52&#34;&gt;52&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-53&#34;&gt;53&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-54&#34;&gt;54&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-55&#34;&gt;55&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-56&#34;&gt;56&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-57&#34;&gt;57&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-58&#34;&gt;58&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-59&#34;&gt;59&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-60&#34;&gt;60&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-61&#34;&gt;61&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-62&#34;&gt;62&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-63&#34;&gt;63&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-64&#34;&gt;64&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-65&#34;&gt;65&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-66&#34;&gt;66&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-67&#34;&gt;67&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44809188c566014432-68&#34;&gt;68&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-1&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-2&#34;&gt;^ &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-3&#34;&gt;Original cursor position&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-4&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-5&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-6&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-7&#34;&gt;^ &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-8&#34;&gt;C-s =&amp;gt; Initiate isearch&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-9&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-10&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Head end of match&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-11&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;Tail end of match&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-12&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;|&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-13&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-14&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- type &#34;comp&#34; --&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-15&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-16&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-17&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-18&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^ C-r (Without dismissing the search)&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-19&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-20&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-21&#34;&gt;Mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-22&#34;&gt;|&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-23&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-24&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ (point moves to head of match)&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-25&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-26&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-27&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-28&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ C-spc&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-29&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-30&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-31&#34;&gt;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-32&#34;&gt;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-33&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-34&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-35&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-36&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-37&#34;&gt;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-38&#34;&gt;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-39&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-40&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ C-s C-s&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-41&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-42&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-43&#34;&gt;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-44&#34;&gt;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-45&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-46&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^ Point moves to tail end of search&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-47&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-48&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-49&#34;&gt;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mark&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-50&#34;&gt;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; | &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-51&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-52&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^ C-u C-spc&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-53&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-54&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-55&#34;&gt;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-56&#34;&gt;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-57&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-58&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ (point -&amp;gt; mark)&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-59&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-60&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-61&#34;&gt;Mark&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-62&#34;&gt;|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-63&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-64&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^ C-u C-spc&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-65&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-66&#34;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-67&#34;&gt;class SomeClass extends React.Component {&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44809188c566014432-68&#34;&gt;^ (point -&amp;gt; mark)&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0017 seconds] --&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;In addition to incremental-search, I have found a few other utilities very helpful for navigating through projects:&lt;/p&gt;
&lt;h3&gt;Helm-swoop&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ShingoFukuyama/helm-swoop&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Helm swoop&lt;/a&gt; provides an efficient way to find matches across files. It provides a helm friendly way to rapidly jump to a matching line anywhere in the entire project.&lt;/p&gt;
&lt;p&gt;An example from their &lt;a href=&#34;https://github.com/ShingoFukuyama/helm-swoop&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;home page&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShingoFukuyama/images/master/helm-swoop.gif&#34;&gt;&lt;/p&gt;
&lt;h3&gt;Avy&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/abo-abo/avy&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Avy&lt;/a&gt; provides a novel approach that requires fewer keystrokes than an isearch for jumping to a specific location that is already visible. Usually within three keystrokes we can jump to any location in the visible area of the buffer.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/wp-content/uploads/2018/07/emacs-3.gif&#34; alt=&#34;&#34; width=&#34;936&#34; height=&#34;535&#34; class=&#34;alignnone size-full wp-image-300&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Navigating to punctuation&lt;/h2&gt;
&lt;p&gt;In programming contexts it is often useful to navigation to punctuation markers close by. Prolific blogger Xah Lee has shared &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://ergoemacs.org/emacs/emacs_jump_to_punctuations.html&#34;&gt;some snippets&lt;/a&gt; of elisp for achieving the same.&lt;/p&gt;
&lt;h2&gt;Multiple cursors&lt;/h2&gt;
&lt;p&gt;A feature common now a days in many editors is the support for multiple cursors. It is useful to do things like editing the same text occurring multiple times simultaneously.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.stack.imgur.com/TLZpd.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you are really fond of multi-cursor style editing, Magnar once again has you covered with &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/magnars/multiple-cursors.el&#34;&gt;multiple-cursors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I usually prefer a more conventional approach, where we can record an edit action as a macro, and then quickly apply in multiple positions.&lt;/p&gt;
&lt;p&gt;Emacs Wiki has a &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.emacswiki.org/emacs/KeyboardMacros&#34;&gt;good overview&lt;/a&gt; on usage of macros.&lt;/p&gt;
&lt;p&gt;The advantage over the multiple-cursor approach in that it is much more powerful and composable with any of the navigation patterns described above.&lt;/p&gt;
&lt;p&gt;For instance, once a macro has been recorded, it is trivial to use &lt;code&gt;avy&lt;/code&gt; to jump to the end of the third word starting with a, and then apply the macro there.&lt;/p&gt;
&lt;p&gt;The disadvantage of course is that it requires slightly more keystrokes, but often the flexibility is worth it.&lt;/p&gt;
&lt;p&gt;Another utility I occasionally use is &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/wence-/elisp/blob/master/multi-region.el&#34;&gt;multi-region&lt;/a&gt; which makes it very easy to mark multiple regions of text and then run a command scoped to each region.&lt;/p&gt;
&lt;h2&gt; Further resources&lt;/h2&gt;
&lt;p&gt;Of course, Emacs is famously a “self-documenting” editor. So &lt;code&gt;M-x help-with-tutorial&lt;/code&gt; and &lt;code&gt;M-x help&lt;/code&gt; are the definitive resources for learning Emacs.&lt;/p&gt;
&lt;p&gt;In addition, following are some great resources I have frequently found useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://pragmaticemacs.com/&#34;&gt;Pragmatic Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.emacswiki.org/&#34;&gt;Emacs Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.masteringemacs.org/&#34;&gt;Mastering Emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a id=&#34;footnote-1&#34; href=&#34;#footnote-1-src&#34;&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt; If this notations is still unfamiliar, refer &lt;a href=&#34;https://www.emacswiki.org/emacs/EmacsKeyNotation&#34;&gt;Emacs key notation&lt;/a&gt;.&lt;br&gt;
&lt;a id=&#34;footnote-2&#34; href=&#34;#footnote-2-src&#34;&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/a&gt; This assumes that &lt;a href=&#34;https://www.emacswiki.org/emacs/TransientMarkMode&#34;&gt;Transient Mark Mode&lt;/a&gt; is enabled. This is true in the default configuration of newer versions of emacs.&lt;/p&gt;


    </content>
        <category term="Emacs" />
        <updated>2018-07-14T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://lorefnon.me/2018/01/28/using-helm-to-select-tide-completion-candidates/</id>
        <title>Using helm to select tide completion candidates</title>
        <link rel="alternate" href="https://lorefnon.me/2018/01/28/using-helm-to-select-tide-completion-candidates/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon.min.css&#34; &gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;/css/crayon-flatui-light.css&#34; &gt;



	&lt;p&gt;&lt;a href=&#34;https://github.com/ananthakumaran/tide&#34;&gt;Tide&lt;/a&gt; (TypeScript Interactive Development Environment for Emacs) uses a custom &lt;a href=&#34;https://github.com/ananthakumaran/tide/blob/master/tide-lv.el&#34;&gt;hydra-derived popup menu&lt;/a&gt; for prompting the user to select candidates when there are many completion options available.&lt;/p&gt;
&lt;p&gt;However, this is jarring when the rest of your emacs environment is configured to use &lt;a href=&#34;https://github.com/emacs-helm/helm&#34;&gt;helm&lt;/a&gt; as the completion engine.&lt;/p&gt;
&lt;p&gt;Fortunately, this is easy to fix by overriding the &lt;code&gt;tide-popup-select-item&lt;/code&gt; implementation to use a custom helm source derived from the completion list.&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more-101&#34;&gt;&lt;/span&gt;&lt;/p&gt;&lt;!-- Crayon Syntax Highlighter v_2.7.2_beta --&gt;

		&lt;div id=&#34;crayon-5fba44f01e7f6640911890&#34; class=&#34;crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate&#34; data-settings=&#34; minimize scroll-mouseover&#34; style=&#34; margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;&#34;&gt;
		
			&lt;div class=&#34;crayon-plain-wrap&#34;&gt;&lt;/div&gt;
			&lt;div class=&#34;crayon-main&#34; style=&#34;&#34;&gt;
				&lt;table class=&#34;crayon-table&#34;&gt;
					&lt;tbody&gt;&lt;tr class=&#34;crayon-row&#34;&gt;
				&lt;td class=&#34;crayon-nums&#34; data-settings=&#34;hide&#34;&gt;
					&lt;div class=&#34;crayon-nums-content&#34; style=&#34;font-size: 15px !important; line-height: 20px !important;&#34;&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44f01e7f6640911890-1&#34;&gt;1&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44f01e7f6640911890-2&#34;&gt;2&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44f01e7f6640911890-3&#34;&gt;3&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44f01e7f6640911890-4&#34;&gt;4&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44f01e7f6640911890-5&#34;&gt;5&lt;/div&gt;&lt;div class=&#34;crayon-num&#34; data-line=&#34;crayon-5fba44f01e7f6640911890-6&#34;&gt;6&lt;/div&gt;&lt;/div&gt;
				&lt;/td&gt;
						&lt;td class=&#34;crayon-code&#34;&gt;&lt;div class=&#34;crayon-pre&#34; style=&#34;font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;&#34;&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44f01e7f6640911890-1&#34;&gt;&lt;span class=&#34;crayon-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-r&#34;&gt;defun&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;tide-popup-select-item&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-k&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-t&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44f01e7f6640911890-2&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-k&#34;&gt;helm&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44f01e7f6640911890-3&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;sources&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44f01e7f6640911890-4&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;crayon-k&#34;&gt;helm-build-sync-source&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;prompt&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44f01e7f6640911890-5&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;candidates&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-t&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;crayon-line&#34; id=&#34;crayon-5fba44f01e7f6640911890-6&#34;&gt;&lt;span class=&#34;crayon-h&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;crayon-i&#34;&gt;buffer&lt;/span&gt;&lt;span class=&#34;crayon-h&#34;&gt; &lt;/span&gt;&lt;span class=&#34;crayon-s&#34;&gt;&#34;*Tide Completion Candidates*&#34;&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;crayon-o&#34;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
					&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
&lt;!-- [Format Time: 0.0017 seconds] --&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; class=&#34;alignnone size-full wp-image-102&#34; src=&#34;/wp-content/uploads/2018/01/tide-helm.gif&#34; alt=&#34;&#34; width=&#34;499&#34; height=&#34;725&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As far as auto-completion is concerned, since tide configures a company-backend, it is possible to directly use &lt;a href=&#34;https://github.com/Sodel-the-Vociferous/helm-company&#34;&gt;helm-company&lt;/a&gt; to use helm for selecting auto-completion candidates.&lt;/p&gt;


    </content>
        <category term="Emacs" />
        <category term="Helm" />
        <updated>2018-01-28T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://lorefnon.me/2015/11/15/utilities-for-efficient-filesystem-navigation-in-emacs.html</id>
        <title>Utilities for efficient filesystem navigation in emacs</title>
        <link rel="alternate" href="https://lorefnon.me/2015/11/15/utilities-for-efficient-filesystem-navigation-in-emacs.html"/>
        <content type="html">&lt;p&gt;While most of time spent working on a project goes into coding, finding the right files or understanding the directory structure is fairly time consuming as well. This is especially true when we are exploring unknown projects - in particular, projects with custom directory structures as opposed to CoC frameworks. This post outlines a few tools which aid in project exploration and navigation across files which I have found to be useful in practice&lt;/p&gt;
&lt;h2 id=&#34;Dired&#34;&gt;&lt;a href=&#34;#Dired&#34; class=&#34;headerlink&#34; title=&#34;Dired&#34;&gt;&lt;/a&gt;Dired&lt;/h2&gt;&lt;p&gt;While built into emacs, Dired is indespensable. I sincerely regret not spending the time required to develop familiarity with Dired when I was initially learning basics of Emacs. While the facilities provided by Dired are powerful enough to replace the full fledged file manager of your operating system, the real power comes from native integration with the rest of emacs.&lt;/p&gt;
&lt;img src=&#39;/images/2015-11-15/dired.png&#39;&gt;

&lt;p&gt;For instance, a Dired is buffer is just like a normal buffer, and all the dired buffers will be directly available from &lt;code&gt;list-buffers&lt;/code&gt; - and from any alternative approaches to list buffers (eg. &lt;code&gt;helm-buffers-list&lt;/code&gt; which we discuss shortly).&lt;/p&gt;
&lt;p&gt;I have found emacs bookmarks functionality to be particularly useful with Dired. Dired buffers can be bookmarked just like ordinary buffers and we can use &lt;code&gt;bookmark-jump&lt;/code&gt; to quickly jump to important Dired buffers opened before.&lt;/p&gt;
&lt;img src=&#39;/images/2015-11-15/bookmarks.png&#39;&gt;

&lt;h2 id=&#34;Neotree&#34;&gt;&lt;a href=&#34;#Neotree&#34; class=&#34;headerlink&#34; title=&#34;Neotree&#34;&gt;&lt;/a&gt;Neotree&lt;/h2&gt;&lt;p&gt;Neotree is a more conventional file manager - similar to what we find in IDEs. It is useful as an easily accessible persistent sidebar that provides the complete outline of the project. It is useful as a mini file manager though not as powerful as dired. The great part is that it is entirely usable through keyboard.&lt;/p&gt;
&lt;img src=&#39;/images/2015-11-15/neotree.png&#39;&gt;

&lt;h2 id=&#34;Helm&#34;&gt;&lt;a href=&#34;#Helm&#34; class=&#34;headerlink&#34; title=&#34;Helm&#34;&gt;&lt;/a&gt;Helm&lt;/h2&gt;&lt;p&gt;Helm has been described as a package in a league of its own. Rather than being an isolated productivity tool, it improves our entire emacs experience through a powerful completion engine which may be different from the tab based completion pervasive in other editors&amp;#x2F;IDEs or Shell but once the habit sets in, it is difficult to go back.&lt;/p&gt;
&lt;p&gt;We will not go into much depth into Helm, but the package is well documented and for getting started here is an excellent &lt;a href=&#34;http://tuhdo.github.io/helm-intro.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;introductory article&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#39;/images/2015-11-15/helm.png&#39;&gt;

&lt;h2 id=&#34;Ag-and-Helm-Ag&#34;&gt;&lt;a href=&#34;#Ag-and-Helm-Ag&#34; class=&#34;headerlink&#34; title=&#34;Ag and Helm-Ag&#34;&gt;&lt;/a&gt;Ag and Helm-Ag&lt;/h2&gt;&lt;p&gt;While grep is arguably the most popular tool for finding files containing specific content, tools like the &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Silver Searcher&lt;/a&gt; improve upon grep by providing specialized tools for searching codebases. There is an &lt;a href=&#34;https://github.com/Wilfred/ag.el&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;ag-mode&lt;/a&gt; that integrates Ag with emacs and if you do use helm, there is a &lt;a href=&#34;https://github.com/syohex/emacs-helm-ag&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;helm integration plugin&lt;/a&gt; as well.&lt;/p&gt;
&lt;img src=&#39;/images/2015-11-15/ag.png&#39;&gt;

&lt;h2 id=&#34;Projectile-and-Helm-Projectile&#34;&gt;&lt;a href=&#34;#Projectile-and-Helm-Projectile&#34; class=&#34;headerlink&#34; title=&#34;Projectile and Helm-Projectile&#34;&gt;&lt;/a&gt;Projectile and Helm-Projectile&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;http://batsov.com/projectile/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Projectile&lt;/a&gt; is an amazing project management solution for solution.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Projectile is a project interaction library for Emacs. Its goal is to provide a nice set of features operating on a project level without introducing external dependencies(when feasible). For instance - finding project files has a portable implementation written in pure Emacs Lisp without the use of GNU find (but for performance sake an indexing mechanism backed by external commands exists as well).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Helm-projectile facilitates integration of projectile and helm, here is a great &lt;a href=&#34;http://tuhdo.github.io/helm-projectile.html&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;introductory article&lt;/a&gt; on getting started with this combo.&lt;/p&gt;
&lt;h2 id=&#34;Ranger&#34;&gt;&lt;a href=&#34;#Ranger&#34; class=&#34;headerlink&#34; title=&#34;Ranger&#34;&gt;&lt;/a&gt;Ranger&lt;/h2&gt;&lt;p&gt;While Helm and Ag is useful for rapidly finding files when we know what we are looking for - however for exploring an unknown project and performing code review for changes across files, it is not the ideal solution. For this use case I have found a unix utility called Ranger very useful. Fortunately there also exists a Ranger mode for emacs which emulates similar feature within emacs. I have found its preview feature particularly complementary to the hierarchical tree based solutions.&lt;/p&gt;
&lt;img src=&#39;/images/2015-11-15/ranger.png&#39;&gt;


&lt;p&gt;This completes our detour into utilities make it easy to traverse projects in emacs. If there are other tools that this article could benefit from, please mention them in the comments below.&lt;/p&gt;
</content>
        <category term="Emacs" />
        <category term="Helm" />
        <updated>2015-11-15T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://lorefnon.me/2014/02/02/configuring-emacs-for-rails.html</id>
        <title>Configuring Emacs as a productive development environment for Rails development.</title>
        <link rel="alternate" href="https://lorefnon.me/2014/02/02/configuring-emacs-for-rails.html"/>
        <content type="html">&lt;h2 id=&#34;Updates&#34;&gt;&lt;a href=&#34;#Updates&#34; class=&#34;headerlink&#34; title=&#34;Updates&#34;&gt;&lt;/a&gt;Updates&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;The default keybindings have been updated based on the feedback from &lt;a href=&#34;https://github.com/asok&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Asok&lt;/a&gt;, the author of the awesmoe &lt;code&gt;projectile-rails&lt;/code&gt; package.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This post outlines some of the Emacs extensions (open source, of course) which can significantly ease the life of a Rails developer. While Rails is, by design, quite a productive framework, having the dev environment properly setup can multiply developer efficiency by an order of magnitude. Although almost all of this information is available online elsewhere, I nevertheless wanted to summarize my explorations in form of a basic guide to easily configure extensions I have found to be useful, during the course of my Rails projects. While the primary audience is a forgetful me from the future, I hope developers new to Rails or Emacs (or both) will find this helpful to get up and running with Emacs and Rails, without having to wade through reams of documentation right upfront. I have tried my best to link the appropriate authoritative resources, which may be helpful for people looking forward to customizing and extending the setup.&lt;/p&gt;
&lt;p&gt;While the setup below has been tested only in Linux Elementary, it should work for other Posix environments as well. Please ensure that you have got atleast &lt;a href=&#34;http://www.gnu.org/software/emacs/#Obtaining&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Emacs 24&lt;/a&gt; and can download packages through &lt;a href=&#34;https://github.com/technomancy/package.el&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;&lt;code&gt;package.el&lt;/code&gt;&lt;/a&gt;. If you are not familiar with package management in emacs &lt;a href=&#34;https://github.com/bbatsov&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Bozhidar Batsov&lt;/a&gt; has presented &lt;a href=&#34;http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;a great introduction&lt;/a&gt;. Adding the following snippet to your &lt;code&gt;~/.emacs&lt;/code&gt; should provide access to &lt;a href=&#34;http://marmalade-repo.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;marmalade&lt;/a&gt; and &lt;a href=&#34;http://melpa.milkbox.net/#/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;melpa&lt;/a&gt; package archives:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;require&lt;/span&gt; &amp;#x27;package)
(&lt;span class=&#34;hljs-name&#34;&gt;add-to-list&lt;/span&gt; &amp;#x27;package-archives
    &amp;#x27;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;marmalade&amp;quot;&lt;/span&gt; .
      &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://marmalade-repo.org/packages/&amp;quot;&lt;/span&gt;))
(&lt;span class=&#34;hljs-name&#34;&gt;add-to-list&lt;/span&gt; &amp;#x27;package-archives
    &amp;#x27;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;melpa&amp;quot;&lt;/span&gt; . &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://melpa.milkbox.net/packages/&amp;quot;&lt;/span&gt;) &lt;span class=&#34;hljs-literal&#34;&gt;t&lt;/span&gt;)
(&lt;span class=&#34;hljs-name&#34;&gt;package-initialize&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;Syntax-Checking&#34;&gt;&lt;a href=&#34;#Syntax-Checking&#34; class=&#34;headerlink&#34; title=&#34;Syntax Checking&#34;&gt;&lt;/a&gt;Syntax Checking&lt;/h1&gt;&lt;p&gt;While the &lt;code&gt;ruby-mode&lt;/code&gt; bundled with Emacs works well with syntax highlighting, it does not automatically handle syntax checking. Luckily we have &lt;a href=&#34;http://www.emacswiki.org/emacs/FlyMake&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;flymake&lt;/a&gt;, which is a generic on the fly syntax checking system. We can install &lt;a href=&#34;https://github.com/purcell/flymake-ruby&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;flymake-ruby&lt;/a&gt; which facilitates syntax checking for ruby through our package manager. Just hit &lt;code&gt;M-x package-install&lt;/code&gt; and type in &lt;code&gt;flymake-ruby&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once flymake-ruby is installed, we just have to hook it up with the ruby-mode.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;require&lt;/span&gt; &amp;#x27;flymake-ruby)
(&lt;span class=&#34;hljs-name&#34;&gt;add-hook&lt;/span&gt; &amp;#x27;ruby-mode-hook &amp;#x27;flymake-ruby-load)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And voila, no syntax errors go unnoticed ever again:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/emacs-flymake.png&#34; alt=&#34;Emacs flymake screenshot&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;Sane-indentation&#34;&gt;&lt;a href=&#34;#Sane-indentation&#34; class=&#34;headerlink&#34; title=&#34;Sane indentation&#34;&gt;&lt;/a&gt;Sane indentation&lt;/h1&gt;&lt;p&gt;The default indentation system attempts to align the arguments of a function
with the opening bracket vertically.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs ruby&#34;&gt;function_call (arg1,
               arg2);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While this is subjective, but if you, like me, find this behaviour erratic - the following will make emacs indent code inside parenthesis similar to elsewhere.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;setq&lt;/span&gt; ruby-deep-indent-paren &lt;span class=&#34;hljs-literal&#34;&gt;nil&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;Ruby-shell-inside-emacs&#34;&gt;&lt;a href=&#34;#Ruby-shell-inside-emacs&#34; class=&#34;headerlink&#34; title=&#34;Ruby shell inside emacs&#34;&gt;&lt;/a&gt;Ruby shell inside emacs&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nonsequitur/inf-ruby&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;inf-ruby&lt;/a&gt; provides a REPL buffer connected to a Ruby subprocess. It is available through the package manager. Once installed you would probably want to bind it to a convenient shortcut. The following would bind it to &lt;code&gt;C-c r r&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;global-set-key&lt;/span&gt; (&lt;span class=&#34;hljs-name&#34;&gt;kbd&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;C-c r r&amp;quot;&lt;/span&gt;) &amp;#x27;inf-ruby)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;Integration-with-RVM&#34;&gt;&lt;a href=&#34;#Integration-with-RVM&#34; class=&#34;headerlink&#34; title=&#34;Integration with RVM&#34;&gt;&lt;/a&gt;Integration with RVM&lt;/h1&gt;&lt;p&gt;If you use RVM for managing ruby versions, you would want to use &lt;a href=&#34;https://github.com/senny/rvm.el&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;rvm.el&lt;/a&gt;. Once installed you will just have to call &lt;code&gt;rvm-activate-corresponding-ruby&lt;/code&gt; and rvm.el will automatically pick up your ruby version and gemset from .rvmrc file.&lt;/p&gt;
&lt;p&gt;The following will bind the aforementioned command to &lt;code&gt;C-c r a&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;global-set-key&lt;/span&gt; (&lt;span class=&#34;hljs-name&#34;&gt;kbd&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;C-c r a&amp;quot;&lt;/span&gt;) &amp;#x27;rvm-activate-corresponding-ruby)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/images/emacs-rvm.png&#34; alt=&#34;rvm.el&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;p&gt;It seamlessly integrates with &lt;code&gt;inf-ruby&lt;/code&gt; so if you invoke &lt;code&gt;inf-ruby&lt;/code&gt; after the previous step, you will get the version of ruby and gemset you expect.&lt;/p&gt;
&lt;h1 id=&#34;Project-management-with-projectile&#34;&gt;&lt;a href=&#34;#Project-management-with-projectile&#34; class=&#34;headerlink&#34; title=&#34;Project management with projectile&#34;&gt;&lt;/a&gt;Project management with projectile&lt;/h1&gt;&lt;p&gt;So far the steps had nothing to do with Rails and were equally useful for vanilla ruby projects. However for managing large Rails applications some basic project management facilities might come in handy.&lt;/p&gt;
&lt;p&gt;While there are a plethora of project management utilities for emacs, One that is particularly simple and easy to install is &lt;a href=&#34;https://github.com/bbatsov/projectile&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;projectile&lt;/a&gt;. It is available through the package manager. Once installed it can be configured as a global mode as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;projectile-global-mode&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or it can be hooked into particular modes:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;add-hook&lt;/span&gt; &amp;#x27;ruby-mode-hook &amp;#x27;projectile-on)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I would also strongly recommend using the &lt;a href=&#34;http://www.emacswiki.org/emacs/InteractivelyDoThings&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;ido-mode&lt;/a&gt; which, among other things, provides various enhancements to make navigation between files and buffers easy. The default behaviour of &lt;code&gt;C-x C-f&lt;/code&gt; and &lt;code&gt;C-x C-b&lt;/code&gt; are changed to a more interactive version, which shows a list of matched options while typing right inside the minibuffer. &lt;a href=&#34;https://github.com/lewang/flx&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;flx-ido&lt;/a&gt; is an extension which further enhances the matching capabilities of ido to perform fuzzy matching (a-la sublime text) which can be a great productivity boost, particularly if you are a bit sloppy with keyboard. &lt;code&gt;ido&lt;/code&gt; is built into emacs and &lt;code&gt;flx-ido&lt;/code&gt; is available through package manager.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;flx-ido-mode&lt;/code&gt; activates the ido mode augmenting with flexible matching.&lt;/p&gt;
&lt;p&gt;You may want to use following snippet to display ido completions vertically instead of horizontally, as is the default behaviour.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;;; Display ido results vertically, rather than horizontally&lt;/span&gt;
 (&lt;span class=&#34;hljs-name&#34;&gt;setq&lt;/span&gt; ido-decorations (&lt;span class=&#34;hljs-name&#34;&gt;quote&lt;/span&gt; (&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\n-&amp;gt; &amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\n   &amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\n   ...&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;[&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;]&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; [No match]&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; [Matched]&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; [Not readable]&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; [Too big]&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot; [Confirm]&amp;quot;&lt;/span&gt;)))
 (&lt;span class=&#34;hljs-name&#34;&gt;defun&lt;/span&gt; ido-disable-line-truncation () (&lt;span class=&#34;hljs-name&#34;&gt;set&lt;/span&gt; (&lt;span class=&#34;hljs-name&#34;&gt;make-local-variable&lt;/span&gt; &amp;#x27;truncate-lines) &lt;span class=&#34;hljs-literal&#34;&gt;nil&lt;/span&gt;))
 (&lt;span class=&#34;hljs-name&#34;&gt;add-hook&lt;/span&gt; &amp;#x27;ido-minibuffer-setup-hook &amp;#x27;ido-disable-line-truncation)
 (&lt;span class=&#34;hljs-name&#34;&gt;defun&lt;/span&gt; ido-define-keys () &lt;span class=&#34;hljs-comment&#34;&gt;;; C-n/p is more intuitive in vertical layout&lt;/span&gt;
   (&lt;span class=&#34;hljs-name&#34;&gt;define-key&lt;/span&gt; ido-completion-map (&lt;span class=&#34;hljs-name&#34;&gt;kbd&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;C-n&amp;quot;&lt;/span&gt;) &amp;#x27;ido-next-match)
   (&lt;span class=&#34;hljs-name&#34;&gt;define-key&lt;/span&gt; ido-completion-map (&lt;span class=&#34;hljs-name&#34;&gt;kbd&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;C-p&amp;quot;&lt;/span&gt;) &amp;#x27;ido-prev-match))
 (&lt;span class=&#34;hljs-name&#34;&gt;add-hook&lt;/span&gt; &amp;#x27;ido-setup-hook &amp;#x27;ido-define-keys)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/images/emacs-ido-vertical.png&#34; alt=&#34;Emacs ido vertical completions&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;p&gt;Projectile integrates with ido and uses it as its indexing method. For projectile to recognize the project root, you just have to drop an empty .projectile file there. Once that is done, you can simply perform a fuzzy search for files using &lt;code&gt;C-c C-p f&lt;/code&gt; and directories using &lt;code&gt;C-c C-p d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/emacs-projectile-file-search.png&#34; alt=&#34;Projectile find file&#34; loading=&#34;lazy&#34;&gt;
&lt;img src=&#34;/images/emcas-projectile-dir-search.png&#34; alt=&#34;Projectile find dir&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/asok/projectile-rails&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Projectile Rails&lt;/a&gt; builds upon &lt;code&gt;projectile&lt;/code&gt; to provide project management facilities specifically tailored for Rails applications. It is available through package manager and can be hooked up with projectile using :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;add-hook&lt;/span&gt; &amp;#x27;projectile-mode-hook &amp;#x27;projectile-rails-on)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Projectile Rails adds a large number of keybindings to ease navigation across files in a rails project, running rake tasks, invoking console etc.
Following is the list of commands and associated bindings taken from the home page of projectile rails.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Keybinding&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-model&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r m&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a model using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-current-model&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r M&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to a model connected with the current resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-controller&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r c&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a controller using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-current-controller&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r C&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to a controller connected with the current resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-view&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r v&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a template or partial using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-current-view&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r V&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to a view connected with the current resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-helper&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r h&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a helper using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-current-helper&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r H&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to a helper connected with the current resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-lib&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r l&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a lib using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-feature&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r f&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a feature using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-spec&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r p&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a spec using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-current-spec&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r P&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to a spec connected with the current resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-migration&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r n&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a migration using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-current-migration&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r N&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to a migration connected with the current resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-javascript&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r j&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a javascript using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-stylesheet&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r s&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a stylesheet using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-log&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r o&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a log file and enable &lt;code&gt;auto-revert-tail-mode&lt;/code&gt; in its buffer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-initializer&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r i&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find an initializer file using &lt;code&gt;projectile-completions-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-environment&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r e&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find an environment file using &lt;code&gt;projectile-completions-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-locale&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r a&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a locale file using &lt;code&gt;projectile-completions-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-mailer&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r @&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a mailer file using &lt;code&gt;projectile-completions-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-find-layout&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r y&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Find a layout file using &lt;code&gt;projectile-completions-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-console&lt;/td&gt;
&lt;td&gt;
&lt;kbd&gt;C-c r ! c&lt;/kbd&gt;, &lt;kbd&gt;C-c r r&lt;/kbd&gt;
&lt;/td&gt;
&lt;td&gt;Run &lt;code&gt;rails console&lt;/code&gt; command in &lt;code&gt;inf-ruby&lt;/code&gt; buffer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-server&lt;/td&gt;
&lt;td&gt;
&lt;kbd&gt;C-c r ! s&lt;/kbd&gt;, &lt;kbd&gt;C-c r R&lt;/kbd&gt;
&lt;/td&gt;
&lt;td&gt;Run &lt;code&gt;rails server&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-rake&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r ! r&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Select a rake task to run using &lt;code&gt;projectile-completion-system&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-generate&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r ! g&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Run &lt;code&gt;rails generate&lt;/code&gt; command.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-extract-region&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r x&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Extract the selected region to a partial.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-goto-file-at-point&lt;/td&gt;
&lt;td&gt;
&lt;kbd&gt;C-c r RET&lt;/kbd&gt;, &lt;kbd&gt;C-c r g f&lt;/kbd&gt;
&lt;/td&gt;
&lt;td&gt;Go to a file at point. Depending on the context that might be a constant, template or partial, or a gem.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-goto-gemfile&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r g g&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to &lt;code&gt;Gemfile&lt;/code&gt; file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-goto-routes&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r g r&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to &lt;code&gt;config/routes.rb&lt;/code&gt; file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-goto-schema&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r g d&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to &lt;code&gt;db/schema.rb&lt;/code&gt; file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;projectile-rails-goto-spec-helper&lt;/td&gt;
&lt;td&gt;&lt;kbd&gt;C-c r g l&lt;/kbd&gt;&lt;/td&gt;
&lt;td&gt;Go to &lt;code&gt;spec/spec_helper.rb&lt;/code&gt; file.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note that &lt;code&gt;rails console&lt;/code&gt; uses &lt;code&gt;inf-ruby&lt;/code&gt;, so integration with rvm is smooth and effortless.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/projectile-rails-console.png&#34; alt=&#34;Projectile Rails console&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;Intelligent-Code-navigation-and-Completion-with-Robe&#34;&gt;&lt;a href=&#34;#Intelligent-Code-navigation-and-Completion-with-Robe&#34; class=&#34;headerlink&#34; title=&#34;Intelligent Code navigation and Completion with Robe&#34;&gt;&lt;/a&gt;Intelligent Code navigation and Completion with Robe&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dgutov/robe&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;Robe&lt;/a&gt; is a code assistance tool that uses a Ruby REPL subprocess with your application or gem code loaded, to provide information about loaded classes and modules, and where each method is defined.&lt;/p&gt;
&lt;p&gt;Robe is available via package manager. Once installed it can be hooked into ruby mode.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;require&lt;/span&gt; &amp;#x27;robe)
(&lt;span class=&#34;hljs-name&#34;&gt;add-hook&lt;/span&gt; &amp;#x27;ruby-mode-hook &amp;#x27;robe-mode)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are using rvm you  may want to instruct robe to auto-trigger &lt;code&gt;rvm-activate-corresponding-ruby&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;defadvice&lt;/span&gt; inf-ruby-console-auto (&lt;span class=&#34;hljs-name&#34;&gt;before&lt;/span&gt; activate-rvm-for-robe activate)
  (&lt;span class=&#34;hljs-name&#34;&gt;rvm-activate-corresponding-ruby&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;robe-jump&lt;/code&gt; bound by default to &lt;code&gt;M-.&lt;/code&gt; can be used to jump to definitions of various classes and methods. While it is not ideal, in most of the scenarios, the expected entry is present in the first few suggestions.&lt;/p&gt;
&lt;p&gt;For intelligent completion robe can be integrated with &lt;a href=&#34;http://company-mode.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;company mode&lt;/a&gt;. Company mode is a modern and modular completion system for emacs which accepts a multitude of pluggable back-ends and front-ends to provide rich completions on the fly. Robe provides a backend to the completion in form of company-robe. This can be configured as follows :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;hljs lisp&#34;&gt;(&lt;span class=&#34;hljs-name&#34;&gt;global-company-mode&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;t&lt;/span&gt;)
(&lt;span class=&#34;hljs-name&#34;&gt;push&lt;/span&gt; &amp;#x27;company-robe company-backends)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now all you have to do is hit &lt;code&gt;robe-start&lt;/code&gt; when you navigate into your project. After that at any point
if you trigger &lt;code&gt;company-robe&lt;/code&gt; you should be greeted with an intellisense like method definitions.&lt;/p&gt;
&lt;p&gt;Completion will start automatically after you type a few letters. Use M-n, M-p, &amp;lt;tab&amp;gt; and &amp;lt;return&amp;gt; to complete. Search through the completions with C-s, C-r and C-o. Even the documentations are available right from the editor (Press F1 at any menu entry).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/emacs-robe-completions.png&#34; alt=&#34;Emacs robe completions&#34; loading=&#34;lazy&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of the caveats is that robe requires &lt;code&gt;pry&lt;/code&gt; and &lt;code&gt;pry-doc&lt;/code&gt; to be in Gemfile. This is a problem when working with third party projects and I don&amp;#39;t have a workaround for that yet.&lt;/p&gt;
&lt;p&gt;Also Ruby being a dynamic language which strives to push the limits on flexibility, perfect completion is simply not possible. Many of known caveats are listed &lt;a href=&#34;https://github.com/dgutov/robe#notes&#34; target=&#34;_blank&#34; rel=&#34;noopener external nofollow noreferrer&#34;&gt;here&lt;/a&gt; and some are being actively being worked upon. But nevertheless, I have found the setup to be quite useful for day to day development and hope you do too.&lt;/p&gt;
&lt;p&gt;I hope that this quick detour into the world of emacs-extensions has motivated you to atleast try out Emacs. How far you go down the rabbit hole is of-course for you to decide. As always, any criticism, suggestions and comments are welcome.&lt;/p&gt;
</content>
        <category term="Rails" />
        <category term="Emacs" />
        <updated>2014-02-02T00:00:00.000Z</updated>
    </entry>
</feed>
