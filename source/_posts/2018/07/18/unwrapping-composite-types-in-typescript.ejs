---
date: "2018-07-18"
title: "Unwrapping composite types in Typescript"
permalink: "2018/07/18/unwrapping-composite-types-in-typescript/"
tags: [Typescript]
---
<link rel="stylesheet" href="/css/crayon.min.css" >
<link rel="stylesheet" href="/css/crayon-flatui-light.css" >



	<p>One of the interesting aspects in Typescript is that it is easy to extract out individual types from composite types.</p>
<p><span id="more-313"></span> </p>
<p>In case of Array, Tuple and Object types, this is really simple, as the type extraction syntax mimic member access syntax.</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc53005203051" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-1">1</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-2">2</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-3">3</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-4">4</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-5">5</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-6">6</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-7">7</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-8">8</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-9">9</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-10">10</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-11">11</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-12">12</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-13">13</div><div class="crayon-num" data-line="crayon-5fba44d01dc53005203051-14">14</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc53005203051-1"><span class="crayon-e">type </span><span class="crayon-v">Person</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">name</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">age</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">number</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-4"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-5">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-6"><span class="crayon-e">type </span><span class="crayon-v">PersonName</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Person</span><span class="crayon-sy">[</span><span class="crayon-s">"name"</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// string</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-7">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-8"><span class="crayon-e">type </span><span class="crayon-v">StrNumTuple</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-t">string</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">number</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-9">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-10"><span class="crayon-e">type </span><span class="crayon-v">StrNumTuple0</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">StrNumTuple</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// string</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-11">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-12"><span class="crayon-e">type </span><span class="crayon-v">NumArr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">number</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-13">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc53005203051-14"><span class="crayon-e">type </span><span class="crayon-v">NumArrMember</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">NumArr</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// number</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>The object access syntax works for interfaces too, which is quite intuitive:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc60097321365" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc60097321365-1">1</div><div class="crayon-num" data-line="crayon-5fba44d01dc60097321365-2">2</div><div class="crayon-num" data-line="crayon-5fba44d01dc60097321365-3">3</div><div class="crayon-num" data-line="crayon-5fba44d01dc60097321365-4">4</div><div class="crayon-num" data-line="crayon-5fba44d01dc60097321365-5">5</div><div class="crayon-num" data-line="crayon-5fba44d01dc60097321365-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc60097321365-1"><span class="crayon-t">interface</span><span class="crayon-h"> </span><span class="crayon-e">Person</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-5fba44d01dc60097321365-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">name</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc60097321365-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">age</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">number</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc60097321365-4"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-5fba44d01dc60097321365-5">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc60097321365-6"><span class="crayon-e">type </span><span class="crayon-v">PersonName</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Person</span><span class="crayon-sy">[</span><span class="crayon-s">"name"</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// string</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0017 seconds] -->
<p></p>
<p>However, more interesting is that, we can extract types from generics and functions too.</p>
<p>Let us say we have the following Dictionary type</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc63825027321" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc63825027321-1">1</div><div class="crayon-num" data-line="crayon-5fba44d01dc63825027321-2">2</div><div class="crayon-num" data-line="crayon-5fba44d01dc63825027321-3">3</div><div class="crayon-num" data-line="crayon-5fba44d01dc63825027321-4">4</div><div class="crayon-num" data-line="crayon-5fba44d01dc63825027321-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc63825027321-1"><span class="crayon-t">interface</span><span class="crayon-h"> </span><span class="crayon-v">Dictionary</span><span class="crayon-o">&lt;</span><span class="crayon-v">T</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">any</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-5fba44d01dc63825027321-2"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-sy">[</span><span class="crayon-v">key</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">]</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">T</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc63825027321-3"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-5fba44d01dc63825027321-4">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc63825027321-5"><span class="crayon-e">type </span><span class="crayon-v">StrDict</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Dictionary</span><span class="crayon-o">&lt;</span><span class="crayon-t">string</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>To extract <code>T</code> from <code>StrDict</code>, we can use the above member property approach:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc67932639042" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc67932639042-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc67932639042-1"><span class="crayon-e">type </span><span class="crayon-v">StrDictMember</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">StrDict</span><span class="crayon-sy">[</span><span class="crayon-s">""</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// string</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>However, another alternative here is to use typescript’s <code>infer</code> keyword along with <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html">conditional types</a>:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc6a842913670" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc6a842913670-1">1</div><div class="crayon-num" data-line="crayon-5fba44d01dc6a842913670-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc6a842913670-1"><span class="crayon-e">type </span><span class="crayon-v">DictMember</span><span class="crayon-o">&lt;</span><span class="crayon-v">T</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-r">extends</span><span class="crayon-h"> </span><span class="crayon-v">Dictionary</span><span class="crayon-o">&lt;</span><span class="crayon-i">infer</span><span class="crayon-h"> </span><span class="crayon-v">V</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">V</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">never</span></div><div class="crayon-line" id="crayon-5fba44d01dc6a842913670-2"><span class="crayon-e">type </span><span class="crayon-v">StrDictMember</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">DictMember</span><span class="crayon-o">&lt;</span><span class="crayon-v">StrDict</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p>
<p>The conditional type <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html">introduced</a> in Typescript 2.8 allows us to arrive at different types based on some conditions. The condition here being a type compatibility constraint.</p>
<p>Not that even though <code>extends</code> keyword is used, this does not necessarily enforce an inheritance relationship, but rather checks for <a href="https://www.typescriptlang.org/docs/handbook/type-compatibility.html">structural compatibility</a>.</p>
<p><code>infer</code> introduces a <i>type variable</i> here, which can be later collected in the type the conditional type <i>resolves</i> to.</p>
<p>This can be used to collect types from arbitrary generic types using typescript’s inference algorithm.</p>
<p>The same appraoch can be used to extract types from functions too. For example, following type (borrowed from typescript’s <a href="https://github.com/Microsoft/TypeScript/blob/d2f6f6a0a48ef5a218eed1bc0e44236f2f5cbc30/lib/lib.es5.d.ts#L1411">collection</a> of built in types), allows us to extract the return value of function.</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc6d849182383" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc6d849182383-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc6d849182383-1"><span class="crayon-e">type </span><span class="crayon-v">ReturnType</span><span class="crayon-o">&lt;</span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-r">extends</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-v">args</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">any</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">any</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-r">extends</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-v">args</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">any</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-i">infer</span><span class="crayon-h"> </span><span class="crayon-i">R</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">R</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">any</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>The analogous approach can be used for arguments too:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc70102394537" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc70102394537-1">1</div><div class="crayon-num" data-line="crayon-5fba44d01dc70102394537-2">2</div><div class="crayon-num" data-line="crayon-5fba44d01dc70102394537-3">3</div><div class="crayon-num" data-line="crayon-5fba44d01dc70102394537-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc70102394537-1"><span class="crayon-e">type </span><span class="crayon-v">Fn1</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">number</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc70102394537-2"><span class="crayon-e">type </span><span class="crayon-v">ArgType</span><span class="crayon-o">&lt;</span><span class="crayon-v">T</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-r">extends</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-i">infer</span><span class="crayon-h"> </span><span class="crayon-v">U</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">any</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">U</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">never</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc70102394537-3">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc70102394537-4"><span class="crayon-e">type </span><span class="crayon-v">Fn1Arg</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">ArgType</span><span class="crayon-o">&lt;</span><span class="crayon-v">Fn1</span><span class="crayon-o">&gt;</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// number</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0023 seconds] -->
<p></p>
<p>Things get somewhat more interesting, if we want to extract the tuple type of <strong>all the arguments</strong>.</p>
<p>Typescript 3.0-rc <a href="https://blogs.msdn.microsoft.com/typescript/2018/07/12/announcing-typescript-3-0-rc/#tuples-and-parameters">introduces</a> support for extracting and spreading parameter lists with tuples. So using <code>typescript@next</code> we can do something like:</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc73338060731" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc73338060731-1">1</div><div class="crayon-num" data-line="crayon-5fba44d01dc73338060731-2">2</div><div class="crayon-num" data-line="crayon-5fba44d01dc73338060731-3">3</div><div class="crayon-num" data-line="crayon-5fba44d01dc73338060731-4">4</div><div class="crayon-num" data-line="crayon-5fba44d01dc73338060731-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc73338060731-1"><span class="crayon-e">type </span><span class="crayon-v">VariadicFn</span><span class="crayon-o">&lt;</span><span class="crayon-i">A</span><span class="crayon-h"> </span><span class="crayon-r">extends</span><span class="crayon-h"> </span><span class="crayon-v">any</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-v">args</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">any</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc73338060731-2"><span class="crayon-e">type </span><span class="crayon-v">ArgsType</span><span class="crayon-o">&lt;</span><span class="crayon-v">T</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-r">extends</span><span class="crayon-h"> </span><span class="crayon-v">VariadicFn</span><span class="crayon-o">&lt;</span><span class="crayon-i">infer</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">never</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc73338060731-3">&nbsp;</div><div class="crayon-line" id="crayon-5fba44d01dc73338060731-4"><span class="crayon-e">type </span><span class="crayon-v">Fn2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">number</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc73338060731-5"><span class="crayon-e">type </span><span class="crayon-v">Fn2Args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">ArgsType</span><span class="crayon-o">&lt;</span><span class="crayon-v">Fn2</span><span class="crayon-o">&gt;</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// [number, string]</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0031 seconds] -->
<p></p>
<p>It may be tempting to do something like: </p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc76115805678" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc76115805678-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc76115805678-1"><span class="crayon-e">type </span><span class="crayon-v">ArgsType</span><span class="crayon-o">&lt;</span><span class="crayon-v">T</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-r">extends</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-v">args</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-i">infer</span><span class="crayon-h"> </span><span class="crayon-v">U</span><span class="crayon-sy">)</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-i">any</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">U</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">never</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p></p>
<p>This will not work as expected, because <code>U</code> now has to satisfy the type at every position.</p>
<p></p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-5fba44d01dc79788373604" class="crayon-syntax crayon-theme-flatui-light crayon-font-inconsolata crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tbody><tr class="crayon-row">
				<td class="crayon-nums" data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;"><div class="crayon-num" data-line="crayon-5fba44d01dc79788373604-1">1</div><div class="crayon-num" data-line="crayon-5fba44d01dc79788373604-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-5fba44d01dc79788373604-1"><span class="crayon-e">type </span><span class="crayon-v">Fn2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">number</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-5fba44d01dc79788373604-2"><span class="crayon-e">type </span><span class="crayon-v">Fn2Args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">ArgsType</span><span class="crayon-o">&lt;</span><span class="crayon-v">Fn2</span><span class="crayon-o">&gt;</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// (number &amp; string)[]</span></div></div></td>
					</tr>
				</tbody></table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>


    